<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>syknapptic</title>
    <link>/</link>
    <description>Recent content on syknapptic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Jul 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Measures of Dispersion</title>
      <link>/2018/07/measures-of-dispersion/</link>
      <pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/measures-of-dispersion/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#data&#34;&gt;Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#standard-deviation&#34;&gt;Standard Deviation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#purpose&#34;&gt;Purpose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#equations&#34;&gt;Equations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#calculation&#34;&gt;Calculation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#example&#34;&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interpretation&#34;&gt;Interpretation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(123)
norm_vec &amp;lt;- rnorm(1000)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

norm_df &amp;lt;- tibble(val = norm_vec)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(norm_df, aes(x = val)) +
  geom_density(fill = &amp;quot;pink&amp;quot;, color = NA, alpha = 0.5) +
  geom_vline(aes(xintercept = mean(val)), color = &amp;quot;darkgreen&amp;quot;) +
  geom_text(aes(x = mean(val), y = 0.5, label = &amp;quot;mean&amp;quot;), size = 7, family = &amp;quot;serif&amp;quot;) +
  
  geom_vline(aes(xintercept = mean(val) + sd(val)), color = &amp;quot;darkblue&amp;quot;) +
  geom_text(aes(x = mean(val) + sd(val), y = 0.45, label = &amp;quot;+1 SD&amp;quot;), family = &amp;quot;serif&amp;quot;) +
  geom_vline(aes(xintercept = mean(val) - sd(val)), color = &amp;quot;darkred&amp;quot;) +
  geom_text(aes(x = mean(val) - sd(val), y = 0.45, label = &amp;quot;-1 SD&amp;quot;), family = &amp;quot;serif&amp;quot;) +
  
  geom_vline(aes(xintercept = mean(val) + sd(val) * 2), color = &amp;quot;blue&amp;quot;) +
  geom_text(aes(x = mean(val) + sd(val) * 2, y = 0.4, label = &amp;quot;+2 SD&amp;quot;), family = &amp;quot;serif&amp;quot;) +
  geom_vline(aes(xintercept = mean(val) - sd(val) * 2), color = &amp;quot;red&amp;quot;) +
  geom_text(aes(x = mean(val) - sd(val) * 2, y = 0.4, label = &amp;quot;-2 SD&amp;quot;), family = &amp;quot;serif&amp;quot;) +
  
  theme_minimal(base_size = 14, base_family = &amp;quot;serif&amp;quot;) +
  labs(y = &amp;quot;Denisty&amp;quot;, x = &amp;quot;Values&amp;quot;) +
  NULL&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-19-measures-of-dispersion_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;864&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mpg &amp;lt;- mtcars$mpg&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;standard-deviation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Standard Deviation&lt;/h1&gt;
&lt;div id=&#34;purpose&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Purpose&lt;/h2&gt;
&lt;p&gt;Quantify amount of variation/spread/dispersion of values.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;equations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Equations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sample &lt;span class=&#34;math display&#34;&gt;\[s_x = \sqrt{ \frac{\sum(x - \bar{x})^2} {n-1} }\]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Population &lt;span class=&#34;math display&#34;&gt;\[\sigma_x = \sqrt{ \frac{\sum(x - \mu_x)^2} {N-1} }\]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;calculation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Calculation&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_sd &amp;lt;- function(values){
  numerator &amp;lt;- sum((values - mean(values))^2)

  denominator &amp;lt;- length(values) - 1

  quotient &amp;lt;- numerator / denominator

  standard_deviation &amp;lt;- sqrt(quotient)
  
  standard_deviation
}&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;example&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Example&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_sd(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6.026948&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;verify&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Verify&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6.026948&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all.equal(my_sd(mpg), sd(mpg))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;interpretation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Interpretation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A low standard deviation indicates that the data points tend to be cloese to the mean (expectted value) of the set.&lt;/li&gt;
&lt;li&gt;A high standard deviation indicates that data points are spread out over a wider range of values.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Measures of Central Tendency</title>
      <link>/2018/07/central-tendency/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/central-tendency/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#toy-values&#34;&gt;Toy Values&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#python-list&#34;&gt;Python &lt;code&gt;list&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r-vector&#34;&gt;R &lt;code&gt;vector&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#length&#34;&gt;Length&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pythons-len&#34;&gt;Python’s &lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rs-length&#34;&gt;R’s &lt;code&gt;length()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unique-values&#34;&gt;Unique Values&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pythons-set&#34;&gt;Python’s &lt;code&gt;set()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rs-unique&#34;&gt;R’s &lt;code&gt;unique()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#max&#34;&gt;Max&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pythons-max&#34;&gt;Python’s &lt;code&gt;max()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rs-max&#34;&gt;R’s &lt;code&gt;max()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#min&#34;&gt;Min&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pythons-min&#34;&gt;Python’s &lt;code&gt;min()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rs-min&#34;&gt;R’s &lt;code&gt;min()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sum&#34;&gt;Sum&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pythons-sum&#34;&gt;Python’s &lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rs-sum&#34;&gt;R’s &lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mean&#34;&gt;Mean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pythons-statistics.mean&#34;&gt;Python’s &lt;code&gt;statistics.mean()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rs-mean&#34;&gt;R’s &lt;code&gt;mean()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mode&#34;&gt;Mode&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pythons-statistics.mode&#34;&gt;Python’s &lt;code&gt;statistics.mode()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rs-mode&#34;&gt;R’s mode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#median&#34;&gt;Median&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#environment&#34;&gt;Environment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;Rather than letting R and Python do all the work for us (i.e. cheating, as a no-nonsense former professor would call it), the best way to understand what any calculation actually means is to walk through the steps. I doubt I’m the only one who wishes they started to code this way.&lt;/p&gt;
&lt;p&gt;With that in mind, here’s a collection of “from scratch” functions implemented in both R and Python that provide &lt;em&gt;minimal&lt;/em&gt; hand-holding.&lt;/p&gt;
&lt;p&gt;This should (hopefully) also serve as a handy reference for useRs and Pythonistas curious about the greenness of the grass on the other side. My goal here is to lay a foundation before writing similar walkthroughs covering more complicated workflows, statistical models, and machine learning.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A quick note:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In R, experience has taught me to use &lt;code&gt;[[&lt;/code&gt; instead of &lt;code&gt;[&lt;/code&gt; &lt;em&gt;whenever it’s possible to obtain the desired results with &lt;code&gt;[[&lt;/code&gt;&lt;/em&gt;. With that in mind, I try to use &lt;code&gt;[[&lt;/code&gt; in the R examples (unless swapping between R and Python messed me up).&lt;/p&gt;
&lt;p&gt;Clearly, &lt;a href=&#34;https://stackoverflow.com/questions/1169456/the-difference-between-and-notations-for-accessing-the-elements-of-a-lis&#34;&gt;useRs have an assortment of opinions&lt;/a&gt; on how to use &lt;code&gt;[[&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt;, but this is probably as simple an explanation as you can get:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.stack.imgur.com/6Vwry.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;All that said, let’s get to it.&lt;/p&gt;
&lt;div id=&#34;toy-values&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Toy Values&lt;/h1&gt;
&lt;p&gt;We’ll use the same values for &lt;code&gt;x&lt;/code&gt; throughout:&lt;/p&gt;
&lt;div id=&#34;python-list&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python &lt;code&gt;list&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = [25.88, 37.05, 38.46, 76.78, 76.78, 71.97, 33.99, 73.29, 2.53, 76.78, 
     74.94, 73.4, 64.87, 57.8, 42.82, 76.78, 7.95, 60.26, 2.14, 59.51]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;r-vector&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R &lt;code&gt;vector&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- c(25.88, 37.05, 38.46, 76.78, 76.78, 71.97, 33.99, 73.29, 2.53, 76.78,
       74.94, 73.4, 64.87, 57.8, 42.82, 76.78, 7.95, 60.26, 2.14, 59.51)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first thing we need to do is define some helper functions. In order to calculate mean, median, and mode, we will also need to find the:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;length of the sequence: &lt;code&gt;my_length()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;unique values in a sequence: &lt;code&gt;my_unique()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;maximum value in a sequence: &lt;code&gt;my_max()&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;my_min()&lt;/code&gt; is also included for reference&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;sum of values in a sequence: &lt;code&gt;my_sum()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;length&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Length&lt;/h1&gt;
&lt;div id=&#34;pythons-len&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python’s &lt;code&gt;len()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def my_length(x):          # `def`ine the function, which takes the parameter `x`
  length = 0               # declare a `length` variable that initially equals `0`
  
  for item in x:           # `for` each `item` in `x`
    length += 1            # add `1` to `length` (same as `length = length + 1`)
  
  return length            # finally, `return` the calculated `length`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(my_length(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 20&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(len(x) == my_length(x)) # does our custom function give the same result as Python&amp;#39;s built-in?&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rs-length&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R’s &lt;code&gt;length()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_length &amp;lt;- function(x) {  # declare the `function`, which takes the parameter `x`
  length &amp;lt;- 0L              # declare a `length` variable that initially equals `0L`...
                            # ... in R, numbers are treated as `double`s unless we...
                            # ... specifiy them to be `integer`s. `0L` is the same as...
                            # ... `as.integer(0)`.
                            # `length` doesn&amp;#39;t NEED to be an `integer`, but if we&amp;#39;re ... 
                            # ... careful about types early, we&amp;#39;ll save headaches later.

  for(item in x) {          # `for` each `item` in `x`
    length &amp;lt;- length + 1L   # add `1L` to length
  }
  
  length                    # finally, return the calculated `length`...
                            # we can use `return(length)`, but `return` in R is best used ...
                            # ... only when you&amp;#39;re breaking from a function early
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_length(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 20&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                       # does our custom function give the same result as R&amp;#39;s built-in?
length(x) == my_length(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;unique-values&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Unique Values&lt;/h1&gt;
&lt;div id=&#34;pythons-set&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python’s &lt;code&gt;set()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def my_unique(x):               # `def`ine the function, which takes the parameter `x`
  unique_x = []                 # declare an empty `list` named `unique_x`
  
  for item in x:                # for each `item` in `x`
    if item not in unique_x:    # if the `item` is not in `unique_x`
      unique_x.append(item)     # `append` the `item` to `unique_x`
      
  return unique_x               # finally, `return` the list of `unique_x`&amp;#39;s values&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(my_unique(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [25.88, 37.05, 38.46, 76.78, 71.97, 33.99, 73.29, 2.53, 74.94, 73.4, 64.87, 57.8, 42.82, 7.95, 60.26, 2.14, 59.51]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In order to test Python’s &lt;code&gt;my_unique()&lt;/code&gt;, we need to use a loop as Python &lt;code&gt;set()&lt;/code&gt;s are not ordered.&lt;/p&gt;
&lt;p&gt;Here, we’ll use a “list-comprehension”.&lt;/p&gt;
&lt;p&gt;In Python, we &lt;em&gt;can&lt;/em&gt; do this…&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;matches = []
for item in my_unique(x):
  matches.append(item in set(x))
  
print(all(matches))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;… but it’s considered more “Pythonic” to use a list-comprehension in this scenario…&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;matches = [item in set(x) for item in my_unique(x)]
print(all(matches))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;… which we can wrap up in a one-liner…&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(all([item in set(x) for item in my_unique(x)]))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1531937508/2e99mn_s5lxip.jpg&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Jokes aside, list-comprehensions are generally faster. Considering “pure” Python isn’t vectorized like R, they are quite handy.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rs-unique&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R’s &lt;code&gt;unique()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_unique &amp;lt;- function(x) {           # declare the `function`, which takes the parameter `x`
  unique_x &amp;lt;- vector(mode = mode(x)) # declare an empty `vector` with the same `mode` as `x`...
                                     # ... in R, it&amp;#39;s a good habit to enforce data types ...
                                     # ... to maximize performance. In a perfect world, we
                                     # ... would also want to set `unique_x`&amp;#39;s `length`.
  for(item in x) {
    if(!item %in% unique_x) {       # in R, `%in%` is a vectorized match that returns a `logical` vector
      unique_x &amp;lt;- c(unique_x, item)
    }
  }
  
  unique_x
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_unique(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 25.88 37.05 38.46 76.78 71.97 33.99 73.29  2.53 74.94 73.40 64.87
## [12] 57.80 42.82  7.95 60.26  2.14 59.51&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                         # does our custom function give the same result as R&amp;#39;s built-in?
all(unique(x) == my_unique(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;max&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Max&lt;/h1&gt;
&lt;div id=&#34;pythons-max&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python’s &lt;code&gt;max()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def my_max(x):
  max = x[0]
  for item in x:
    if item &amp;gt; max:
      max = item
  
  return max&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(my_max(x))
                 # does our custom function give the same result as Pythons&amp;#39;s built-in?&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 76.78&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(max(x) == my_max(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rs-max&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R’s &lt;code&gt;max()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_max &amp;lt;- function(x) {
  max &amp;lt;- x[[1]]
  
  for(item in x) {
    if(item &amp;gt; max) {
      max &amp;lt;- item
    }
  }
  max
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_max(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 76.78&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                 # does our custom function give the same result as R&amp;#39;s built-in?
max(x) == my_max(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;min&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Min&lt;/h1&gt;
&lt;div id=&#34;pythons-min&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python’s &lt;code&gt;min()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def my_min(x):
  min = x[0]        # Python indexing starts at `0`, so `min` starts as the first item in `x`
  
  for item in x:
    if item &amp;lt; min:
      min = item
  
  return min&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(my_min(x))
                 # does our custom function give the same result as Python&amp;#39;s built-in?&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2.14&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(min(x) == my_min(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rs-min&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R’s &lt;code&gt;min()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_min &amp;lt;- function(x) {
  min &amp;lt;- x[[1]]     # R indexing starts at `1`, so `min` starts as the first item in `x`
  
  for(item in x) {
    if(item &amp;lt; min) {
      min &amp;lt;- item
    }
  }
  min
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_min(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.14&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                 # does our custom function give the same result as Python&amp;#39;s built-in?
min(x) == my_min(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sum&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sum&lt;/h1&gt;
&lt;div id=&#34;pythons-sum&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python’s &lt;code&gt;sum()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def my_sum(x):     # `def`ine the function, which takes the parameter `x`
  sum = 0          # declare a `sum` variable that initially equals `0`
  for item in x:   # `for` each `item` in `x`
    sum += item    # add the `item`&amp;#39;s value to `sum`
  
  return sum       # finally, return the calculated `sum`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(my_sum(x))
                 # does our custom function give the same result as Python&amp;#39;s built-in?&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1033.98&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(sum(x) == my_sum(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rs-sum&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R’s &lt;code&gt;sum()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_sum &amp;lt;- function(x) { # declare the `function`, which takes the parameter `x`
  sum &amp;lt;- 0              # declare a `sum` variable that initially equals `0`...
  
  for(item in x) {      # `for` each `item` in x
    sum &amp;lt;- sum + item   # add the `item` to `sum`
  }
  
  sum                   # finally, call `sum` to return its value
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1033.98&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                 # does our custom function give the same result as R&amp;#39;s built-in?
sum(x) == my_sum(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that we’ve built our helper functions, let’s take on the measures of central tendency.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1531921800/cent-tend.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;mean&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mean&lt;/h1&gt;
&lt;div id=&#34;pythons-statistics.mean&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python’s &lt;code&gt;statistics.mean()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def my_mean(x):
  return float(my_sum(x) / my_length(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(my_mean(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 51.699&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import statistics          # in Python, `mean()` is kept in the `statistics` module, which ...
                           # ... we `import` like this
                            
                           # does our custom function give the same result as &amp;#39;s built-in?
print(statistics.mean(x) == my_mean(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rs-mean&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R’s &lt;code&gt;mean()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_mean &amp;lt;- function(x) {
  my_sum(x) / my_length(x)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_mean(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 51.699&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(x) == my_mean(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;mode&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mode&lt;/h1&gt;
&lt;div id=&#34;pythons-statistics.mode&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python’s &lt;code&gt;statistics.mode()&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def my_mode(x):
  unique_x = my_unique(x)
  occurrences = {}         # create and empty `dict()` to which we will be adding items
  
  for item in unique_x:
    count = my_length([value for value in x if value == item]) # count up the occurrences of each `item`
    occurrences.update({item: count})    # add the count to the the `occurrences` `dict()`
  
  keys = list(occurrences.keys())     # `dict()`s are unordered, so we make a list of `keys`...
  values = list(occurrences.values()) # ... and a list of `values`
  
  return keys[values.index(my_max(values))]  # get the index of the max value and select that key&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(my_mode(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 76.78&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import statistics
print(statistics.mode(x) == my_mode(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rs-mode&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R’s mode&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_mode &amp;lt;- function(x) {
  unique_x &amp;lt;- my_unique(x)
  occurences &amp;lt;- vector(mode = mode(unique_x), length = length(unique_x))

  for(item in unique_x) {
    count &amp;lt;- c(item = my_length(x[x == item])) # because we&amp;#39;re dealing with vectors in R we can... 
                                               # ... boolean mask with `[]` instead  of using a loop
    names(count) &amp;lt;- item                       # we turn `count` into a named `vector`...
                                               # but this coerces the `names` to `character`
    occurences &amp;lt;- c(occurences, count)
  }
  as.numeric(names(occurences[occurences == my_max(occurences)]))  # convert the `names` back to `numeric`
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_mode(x) # R doesn&amp;#39;t have a built-in function for a statistical mode&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 76.78&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;median&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Median&lt;/h1&gt;
&lt;p&gt;For &lt;code&gt;median()&lt;/code&gt;, we need to be able to sort the list. We’re just going to use built-in functions, but you can see how a bubble sort is performed &lt;a href=&#34;https://syknapptic.netlify.com/2018/07/bubble-sort/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;python&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def my_median(x):
  sorted_x = sorted(x)
  length_x = my_length(x)
  middle_index = (length_x - 1) // 2  # `//` is Python&amp;#39;s operator for integer division
                                      # `%` is Python&amp;#39;s operator for remainder
  if length_x % 2:                    # if `x`&amp;#39;s length is an odd value
    median = sorted_x[middle_index]
  elif not length_x % 2:                # if `x`&amp;#39;s length is an even value
    median = my_mean([sorted_x[middle_index], sorted_x[middle_index + 1]])
  return median&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(my_median(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 59.885&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import statistics
print(statistics.median(x) == my_median(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;r&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_median &amp;lt;- function(x) {
  sorted_x &amp;lt;- sort(x)
  length_x &amp;lt;- my_length(x)
  middle_index &amp;lt;- length_x %/% 2 # `%/%` is R&amp;#39;s operator for integer division
  
  if(length_x %% 2) {            # `%%` is R&amp;#39;s operator for remainder
    median = sorted_x[[middle_index]]
  }
  else if(!length_x %% 2) {
    median = my_mean(c(sorted_x[[middle_index]], sorted_x[[middle_index + 1]]))
  }

  median
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_median(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 59.885&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;median(x) == my_median(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;النهاية&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;environment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Environment&lt;/h1&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(sys.version)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.5.1 (2018-07-02)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 17134)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_0.12.17          bookdown_0.7          lattice_0.20-35      
##  [4] digest_0.6.15         grid_3.5.1            jsonlite_1.5         
##  [7] magrittr_1.5          evaluate_0.10.1       blogdown_0.7.1       
## [10] stringi_1.2.3         Matrix_1.2-14         reticulate_1.9.0.9001
## [13] rmarkdown_1.10.7      htmldeps_0.1.0        tools_3.5.1          
## [16] stringr_1.3.1         xfun_0.3              yaml_2.1.19          
## [19] compiler_3.5.1        htmltools_0.3.6       knitr_1.20.8&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Bubble Sort</title>
      <link>/2018/07/bubble-sort/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/bubble-sort/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#unsorted-list&#34;&gt;Unsorted &lt;code&gt;list&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bubble-sort-function&#34;&gt;Bubble Sort Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#result&#34;&gt;Result&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r&#34;&gt;R&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#unsorted-vector&#34;&gt;Unsorted &lt;code&gt;vector&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bubble-sort-function-1&#34;&gt;Bubble Sort Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#result-1&#34;&gt;Result&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#environment&#34;&gt;Environment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1531752863/BubbleSort_Avg_case_ovrcui.gif&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;python&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Python&lt;/h1&gt;
&lt;div id=&#34;unsorted-list&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Unsorted &lt;code&gt;list&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;unsorted = [9, 2, 8, 3, 7, 4, 6, 5, 1]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;bubble-sort-function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bubble Sort Function&lt;/h2&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def bubble_sort(unsorted_sequence):
    sorted_sequence = unsorted_sequence
    
    for iteration, _ in enumerate(sorted_sequence):
    
        for i, _ in enumerate(sorted_sequence):
            if i + 1 &amp;lt;= len(sorted_sequence) - 1:
                current_value = sorted_sequence[i]
                next_value = sorted_sequence[i + 1]
                
                if current_value &amp;gt; next_value:
                    sorted_sequence[i] = next_value
                    sorted_sequence[i + 1] = current_value
        print(f&amp;#39;Iteration #{iteration + 1}:    {&amp;quot;, &amp;quot;.join(list(map(str, sorted_sequence)))}&amp;#39;)
                    
    return sorted_sequence&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;result&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Result&lt;/h2&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;bubble_sort(unsorted)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Iteration #1:    2, 8, 3, 7, 4, 6, 5, 1, 9
## Iteration #2:    2, 3, 7, 4, 6, 5, 1, 8, 9
## Iteration #3:    2, 3, 4, 6, 5, 1, 7, 8, 9
## Iteration #4:    2, 3, 4, 5, 1, 6, 7, 8, 9
## Iteration #5:    2, 3, 4, 1, 5, 6, 7, 8, 9
## Iteration #6:    2, 3, 1, 4, 5, 6, 7, 8, 9
## Iteration #7:    2, 1, 3, 4, 5, 6, 7, 8, 9
## Iteration #8:    1, 2, 3, 4, 5, 6, 7, 8, 9
## Iteration #9:    1, 2, 3, 4, 5, 6, 7, 8, 9&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(stringr)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;unsorted-vector&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Unsorted &lt;code&gt;vector&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unsorted &amp;lt;- c(9, 2, 8, 3, 7, 4, 6, 5, 1)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;bubble-sort-function-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bubble Sort Function&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bubble_sort &amp;lt;- function(unsorted_sequence) {
  sorted_sequence &amp;lt;- unsorted_sequence
  
  for(iteration in seq_along(sorted_sequence)) {
    
    for(i in seq_along(sorted_sequence)) {
      if(i + 1 &amp;lt;= length(sorted_sequence)) {
        current_value &amp;lt;- sorted_sequence[[i]]
        next_value &amp;lt;- sorted_sequence[[i + 1]]
        
        if(current_value &amp;gt; next_value) {
          sorted_sequence[[i]] &amp;lt;- next_value
          sorted_sequence[[i + 1]] &amp;lt;- current_value
        }
      }
    }
    print(str_glue(&amp;quot;Iteration #{iteration}:    {str_flatten(sorted_sequence, &amp;#39;, &amp;#39;)}&amp;quot;))
  }

  sorted_sequence
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;result-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Result&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bubble_sort(unsorted)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Iteration #1:    2, 8, 3, 7, 4, 6, 5, 1, 9
## Iteration #2:    2, 3, 7, 4, 6, 5, 1, 8, 9
## Iteration #3:    2, 3, 4, 6, 5, 1, 7, 8, 9
## Iteration #4:    2, 3, 4, 5, 1, 6, 7, 8, 9
## Iteration #5:    2, 3, 4, 1, 5, 6, 7, 8, 9
## Iteration #6:    2, 3, 1, 4, 5, 6, 7, 8, 9
## Iteration #7:    2, 1, 3, 4, 5, 6, 7, 8, 9
## Iteration #8:    1, 2, 3, 4, 5, 6, 7, 8, 9
## Iteration #9:    1, 2, 3, 4, 5, 6, 7, 8, 9&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 2 3 4 5 6 7 8 9&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;environment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Environment&lt;/h1&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(sys.version)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.5.1 (2018-07-02)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 17134)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] stringr_1.3.1
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_0.12.17          bookdown_0.7          lattice_0.20-35      
##  [4] crayon_1.3.4          digest_0.6.15         grid_3.5.1           
##  [7] jsonlite_1.5          magrittr_1.5          evaluate_0.10.1      
## [10] blogdown_0.7.1        stringi_1.2.3         Matrix_1.2-14        
## [13] reticulate_1.9.0.9001 rmarkdown_1.10.7      htmldeps_0.1.0       
## [16] tools_3.5.1           glue_1.2.0            xfun_0.3             
## [19] yaml_2.1.19           compiler_3.5.1        htmltools_0.3.6      
## [22] knitr_1.20.8&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R-Python Thesaurus</title>
      <link>/page/r-python-thesaurus/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/page/r-python-thesaurus/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#types&#34;&gt;Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#collections-vectors-lists-and-dictionaries&#34;&gt;Collections: Vectors, Lists, and Dictionaries&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#common-tasks&#34;&gt;Common Tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iteration&#34;&gt;Iteration&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sequences&#34;&gt;Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#comparisons&#34;&gt;Comparisons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#arithmetic&#34;&gt;Arithmetic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#statistics&#34;&gt;Statistics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dates-and-times&#34;&gt;Dates and Times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#strings-and-regular-expressions&#34;&gt;Strings and Regular Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#file-io&#34;&gt;File I/O&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#write-lines&#34;&gt;Write Lines&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#python-1&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r-1&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#read-lines&#34;&gt;Read Lines&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#python-2&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r-2&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/syknapptic/RversusPython/master/README_image.JPG&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;types&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Types&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python Type
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python Example
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R Type
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R Example
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;int&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;1&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;integer&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;1L&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;float&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;3.14&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;numeric &amp;amp; double&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;3.14&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;string&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;‘hi’&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;character&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;“hi”&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;bool&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;True&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;logical&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;TRUE&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;collections-vectors-lists-and-dictionaries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Collections: Vectors, Lists, and Dictionaries&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python Type
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python Example
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R Type
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R Example
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Values
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;scalar&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;1&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;vector&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;1&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;homogeneous&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;list&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;[1, 1]&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;vector&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;c(1, 2)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;homogeneous&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;list&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;[1, ‘string’]&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;list&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;list(1, “string”)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: purple;&#34;&gt;heterogenous&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;tuple&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;(1, ‘string’]&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;list&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;list(1, “string”)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: purple;&#34;&gt;heterogenous&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;dict&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;{‘a’:1, ‘b’:‘string’}&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;list&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;list(a = 1, b = “string”)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: purple;&#34;&gt;heterogenous&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;vector&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;c(a = 1, b = 2)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;homogeneous&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tfoot&gt;
&lt;tr&gt;
&lt;td style=&#34;padding: 0; border: 0;&#34; colspan=&#34;100%&#34;&gt;
&lt;span style=&#34;font-style: italic;&#34;&gt;Note: &lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;padding: 0; border: 0;&#34; colspan=&#34;100%&#34;&gt;
&lt;sup&gt;&lt;/sup&gt; &lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;dict&lt;/span&gt;s are not ordered.&lt;br&gt; &lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;scalar&lt;/span&gt;s are roughly equivalent to &lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;vector&lt;/span&gt;s of length 1
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tfoot&gt;
&lt;/table&gt;
&lt;div id=&#34;common-tasks&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Common Tasks&lt;/h2&gt;
&lt;p&gt;Python and R data types cannot be thought of as exact matches.&lt;/p&gt;
&lt;p&gt;A critical difference is that Python &lt;code&gt;list&lt;/code&gt;s are not inherently homogeneous, which is the case for R &lt;code&gt;vector&lt;/code&gt;s.&lt;/p&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;list(zip(list1, list2))&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;mapply(c, vector1, vector2, SIMPLIFY = FALSE, USE.NAMES = FALSE)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;dict(zip(list1, list2))&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;names(vector1) &amp;lt;- vector2&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;dict(zip(list1, list2))&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;setNames(vector1, vector2)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;enumerate(list1)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;seq_along(list1)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;max(dict.items(), lambda x = x[1])&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;named_vector[named_vector == max(named_vector)]&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;library(purrr)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;list(zip(list1, list2))&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;map2(vector1, vector2, c)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;max(dict.items(), lambda x = x[1])&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;named_vector %&amp;gt;% keep(~ .x == max(named_vector))&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tfoot&gt;
&lt;tr&gt;
&lt;td style=&#34;padding: 0; border: 0;&#34; colspan=&#34;100%&#34;&gt;
&lt;span style=&#34;font-style: italic;&#34;&gt;Note: &lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;padding: 0; border: 0;&#34; colspan=&#34;100%&#34;&gt;
&lt;sup&gt;&lt;/sup&gt; &lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;enumerate()&lt;/span&gt; returns a generator.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tfoot&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;iteration&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Iteration&lt;/h2&gt;
&lt;div id=&#34;python&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;days = [&amp;#39;Monday&amp;#39;, &amp;#39;Tuesday&amp;#39;, &amp;#39;Wednesday&amp;#39;, &amp;#39;Thursday&amp;#39;, &amp;#39;Friday&amp;#39;, &amp;#39;Saturday&amp;#39;, &amp;#39;Sunday&amp;#39;]
for i, day in enumerate(days, start = 1):
  print(f&amp;#39;{i}. {day}&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1. Monday
## 2. Tuesday
## 3. Wednesday
## 4. Thursday
## 5. Friday
## 6. Saturday
## 7. Sunday&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;r&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;days &amp;lt;- c(&amp;quot;Monday&amp;quot;, &amp;quot;Tuesday&amp;quot;, &amp;quot;Wednesday&amp;quot;, &amp;quot;Thursday&amp;quot;, &amp;quot;Friday&amp;quot;, &amp;quot;Saturday&amp;quot;, &amp;quot;Sunday&amp;quot;)

for(i in seq_along(days)) {                   # a Python-style loop works...
  print(str_glue(&amp;#39;{i}. {days[[i]]}&amp;#39;))         # but it&amp;#39;s awkward in that you would probably
                                              # only ever do this to `plot()` or `print()`...
}                                             # but we don&amp;#39;t explicitly `print()` much in R&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1. Monday
## 2. Tuesday
## 3. Wednesday
## 4. Thursday
## 5. Friday
## 6. Saturday
## 7. Sunday&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In R, functions like &lt;code&gt;print()&lt;/code&gt; or &lt;code&gt;plot()&lt;/code&gt; “return” &lt;em&gt;side-effects&lt;/em&gt; rather than values.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://adv-r.had.co.nz/Functions.html?id=#return-values&#34;&gt;Advanced R - Functions: Return values&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With that in mind, the best solution is probably &lt;code&gt;purrr::walk()&lt;/code&gt;, which is designed specifically to iterate over values while calling a function for its side-effects.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;walk(days, ~ print(str_glue(&amp;quot;{match(.x, days)}. {.x}&amp;quot;))) # print() in R is a side-effect, &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1. Monday
## 2. Tuesday
## 3. Wednesday
## 4. Thursday
## 5. Friday
## 6. Saturday
## 7. Sunday&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Underneath the hood, &lt;code&gt;walk()&lt;/code&gt; is literally just a &lt;code&gt;for()&lt;/code&gt; loop, but it’s &lt;em&gt;consistent&lt;/em&gt; with a family of functions from {&lt;code&gt;purrr&lt;/code&gt;} that provide powerful iteration tools and solutions to complicated tasks involving &lt;code&gt;vector&lt;/code&gt;s, &lt;code&gt;list&lt;/code&gt;s, and &lt;code&gt;data.frame&lt;/code&gt;s.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sequences&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sequences&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;range(0, 20, 2)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;seq(from = 0, to = 18, by = 2)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tfoot&gt;
&lt;tr&gt;
&lt;td style=&#34;padding: 0; border: 0;&#34; colspan=&#34;100%&#34;&gt;
&lt;span style=&#34;font-style: italic;&#34;&gt;Note: &lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;padding: 0; border: 0;&#34; colspan=&#34;100%&#34;&gt;
&lt;sup&gt;&lt;/sup&gt; &lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;range()&lt;/span&gt; returns a generator
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tfoot&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;comparisons&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Comparisons&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Meaning
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&amp;lt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&amp;lt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;less than&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;greater than&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&amp;lt;=&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&amp;lt;=&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;less than or equal&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&amp;gt;=&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&amp;gt;=&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;greater than or equal&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;==&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;==&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;is equal&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;!=&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;!=&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;is not equal&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;is &amp;lt;SOMETHING&amp;gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;is.&amp;lt;SOMETHING&amp;gt; | is_&amp;lt;SOMETHING&amp;gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;is an object &amp;lt;SOMETHING&amp;gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;is not &amp;lt;SOMETHING&amp;gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;!is.&amp;lt;SOMETHING&amp;gt; | !is_&amp;lt;SOMETHING&amp;gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;is an object not &amp;lt;SOMETHING&amp;gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;and&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;and&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;or&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;|&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;or&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;arithmetic&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Arithmetic&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Meaning
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;x + y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;x + x&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;x &lt;span style=&#34; font-weight: bold;    &#34;&gt;P&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;L&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;U&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;S&lt;/span&gt; y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;x - y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;x - y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;x &lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;N&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;U&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;S&lt;/span&gt; y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;x * y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;x * y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;x &lt;span style=&#34; font-weight: bold;    &#34;&gt;T&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;S&lt;/span&gt; y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;x / y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;x / y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;x &lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;V&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;B&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;Y&lt;/span&gt; y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;x // y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;x %/% y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;F&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;L&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;R&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;Q&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;U&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;T&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;N&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;T&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;F&lt;/span&gt; x &lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;V&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;B&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;Y&lt;/span&gt; y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;x % y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;x %% y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;R&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;A&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;N&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;R&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;F&lt;/span&gt; x &lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;V&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;B&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;Y&lt;/span&gt; y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;-x&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;-x&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;N&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;G&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;A&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;T&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;V&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt; x&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;x**y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;x^y&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;x &lt;span style=&#34; font-weight: bold;    &#34;&gt;R&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;A&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;S&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;D&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;T&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;T&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;H&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;P&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;W&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;R&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;F&lt;/span&gt; y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;sum([x, y])&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;sum(c(x, y))&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;S&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;U&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;O&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;F&lt;/span&gt; x, y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;min([x, y])&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;min(c(x, y))&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;N&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;U&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;V&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;A&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;L&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;U&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;N&lt;/span&gt; x, y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;max([x, y])&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;max(c(x, y))&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;A&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;X&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;U&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;M&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;V&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;A&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;L&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;U&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;E&lt;/span&gt; &lt;span style=&#34; font-weight: bold;    &#34;&gt;I&lt;/span&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;N&lt;/span&gt; x, y&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;statistics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Statistics&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Meaning
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;import numpy&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;numpy.mean()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;mean()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;mean&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;numpy.median()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;median()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;median&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;numpy.std&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;sd()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;standard deviation&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;numpy.var()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;var()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;variance&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;numpy.cov()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;cov()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;covariance&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;numpy.corrcoef()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;cor()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;Pearson’s correlation&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;import scipy&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;library(Hmisc)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;scipy.stats.pearsonr()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;rcorr()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;Pearson’s correlation w/ p-values&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;scipy.stats.spearmanr()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;rcorr(…, type = “spearman”)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;Spearman’s correlation w/ p-values&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;dates-and-times&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Dates and Times&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Result
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;import datetime&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;library(lubridate)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;relevant packages are imported&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;right_now = datetime.today()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;right_now &amp;lt;- now()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;current date and time&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;right_now.year&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;year(right_now)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;current &lt;span style=&#34; font-weight: bold;    &#34;&gt;year&lt;/span&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;right_now.month&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;month(right_now)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;month&lt;/span&gt; of the year&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;right_now.isocalendar()[1]&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;week(right_now)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;week&lt;/span&gt; of the year&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;right_now.day&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;day(right_now)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;day&lt;/span&gt; of the month&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;right_now.hour&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;hour(right_now)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;hour&lt;/span&gt; of the day&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;right_now.minute&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;minute(right_now)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;minute&lt;/span&gt; of the hour&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;right_now.second&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;second(right_now)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;&lt;span style=&#34; font-weight: bold;    &#34;&gt;second&lt;/span&gt; of the minute&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;strings-and-regular-expressions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Strings and Regular Expressions&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Python
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
R
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;import re&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;library(stringr)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;‘string for list’.split()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;strsplit(“string for list”, “\s”)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;re.search(pattern, string)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;str_detect(string, pattern)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;re.search(pattern, string).group()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;str_extract(string, pattern)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;re.split(pattern, string)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;str_split(string, pattern)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;re.findall(pattern, string)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;str_extract_all(string, pattern)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;string.replace(pattern, repl)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;str_replace(string, pattern, repl)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;re.sub(pattern, repl, string)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;str_replace(string, pattern, repl)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;re.sub(pattern, &amp;lt;foo&amp;gt;, string)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;str_replace_all(string, pattern, &amp;lt;foo&amp;gt;)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: red;&#34;&gt;re.compile(pattern)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;   font-family: monospace;  color: blue;&#34;&gt;regex(pattern)&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;file-io&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;File I/O&lt;/h1&gt;
&lt;div id=&#34;write-lines&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Write Lines&lt;/h2&gt;
&lt;div id=&#34;python-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;to_write = &amp;#39;Here is\nsome\nexample text\nto write&amp;#39;
with open(&amp;#39;data/example.txt&amp;#39;, mode=&amp;#39;w&amp;#39;) as file:
    file.writelines(to_write)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;r-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)

to_write &amp;lt;- &amp;#39;Here is\nsome\nexample text\nto write&amp;#39;
write_lines(to_write, path = &amp;quot;data/example.txt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;read-lines&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Read Lines&lt;/h2&gt;
&lt;div id=&#34;python-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;with open(&amp;#39;data/example.txt&amp;#39;, &amp;#39;r&amp;#39;) as f:
    text = f.readlines()
text = [line.strip() for line in text]     # strip whitespace indicating &amp;quot;new line&amp;quot; (\n)
print(text)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;Here is&amp;#39;, &amp;#39;some&amp;#39;, &amp;#39;example text&amp;#39;, &amp;#39;to write&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;r-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)

read_lines(&amp;quot;data/example.txt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Here is&amp;quot;      &amp;quot;some&amp;quot;         &amp;quot;example text&amp;quot; &amp;quot;to write&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Establishing Meaningful Performance Comparisons between R and Python</title>
      <link>/2018/07/reading-csv-files/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/reading-csv-files/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r-vs-python&#34;&gt;R vs Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reproducible-python-environment&#34;&gt;Reproducible Python Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-data&#34;&gt;The Data&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#small&#34;&gt;Small&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#medium&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#big&#34;&gt;Big&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-code&#34;&gt;The Code&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r&#34;&gt;R&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#base---utilsread.csv&#34;&gt;“Base” - &lt;code&gt;utils::read.csv()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#readrread_csv&#34;&gt;&lt;code&gt;readr::read_csv()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data.tablefread&#34;&gt;&lt;code&gt;data.table::fread()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pandas.read_csv&#34;&gt;&lt;code&gt;pandas.read_csv()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dependencies-only&#34;&gt;Dependencies Only&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-test&#34;&gt;The Test&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#initial-carpentry&#34;&gt;Initial Carpentry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-results&#34;&gt;The Results&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#execution-times&#34;&gt;Execution Times&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tldr&#34;&gt;&lt;strong&gt;&lt;em&gt;tl;dr&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#appendices&#34;&gt;Appendices&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#dependency-load-times&#34;&gt;Dependency Load Times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#summary-tables&#34;&gt;Summary Tables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#environment&#34;&gt;Environment&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ide&#34;&gt;IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r-1&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python-1&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#system&#34;&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;r-vs-python&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R vs Python&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1531757493/robert-downey-jr-eye-roll-gif-3_xa3fmd.gif&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Performance comparisons between R and Python suck.&lt;/p&gt;
&lt;p&gt;Most seem to be run in Jupyter Notebook and many are using Python’s &lt;code&gt;rpy2&lt;/code&gt; library to run poorly optimized R code. I’m not an anti-&lt;code&gt;for()&lt;/code&gt; loop Nazi (yes, you &lt;em&gt;can&lt;/em&gt; use them effectively in R), but thanks to the &lt;code&gt;base::*apply()&lt;/code&gt; family and their beautiful &lt;code&gt;purrr::map*()&lt;/code&gt; children, there are &lt;em&gt;usually&lt;/em&gt; better solutions.&lt;/p&gt;
&lt;p&gt;Unfortunately, some of these comparisons arbitrarily test loops in R where you would &lt;em&gt;never, ever&lt;/em&gt; do so.&lt;/p&gt;
&lt;p&gt;In a language where &lt;code&gt;vector&lt;/code&gt;s serve as the fundamental data structure, it doesn’t make any sense why code like this receives such prominent treatment in seemingly every test…..&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;normal_distibution &amp;lt;- rnorm(2500)

bad_R &amp;lt;- vector(mode = &amp;quot;numeric&amp;quot;, length = length(normal_distibution))

for(i in normal_distibution) {
  bad_R[i] &amp;lt;- normal_distibution[i] * normal_distibution[i]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1531062331/oh-no-baby-what-is-you-doin_qyccxq.gif&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If we &lt;em&gt;had&lt;/em&gt; to do something explicitly “loopy”, we’d still probably do something like this…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;not_so_good_R &amp;lt;- vapply(normal_distibution, function(x) x^2, numeric(1))

identical(bad_R, not_so_good_R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;… but it’s still taking advantage of the fact that &lt;code&gt;normal_distibution&lt;/code&gt; is a homogeneous collection of &lt;code&gt;atomic&lt;/code&gt; values: a &lt;code&gt;vector&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all(is.vector(normal_distibution), is.atomic(normal_distibution))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With that in mind, just do this…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;good_R &amp;lt;- normal_distibution^2

identical(bad_R, good_R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In Python, using &lt;code&gt;reticulate&lt;/code&gt; here, we can do this in a whole bunch of ways…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;py_run_string(
&amp;quot;
normal_distibution_py = r.normal_distibution

py_index_results = [None]*len(normal_distibution_py)
py_append_results = []
py_dict_results = {}

&amp;quot;, convert = FALSE)

py_loop_index &amp;lt;- (
&amp;quot;for i in range(len(normal_distibution_py)):
  py_index_results[i] = normal_distibution_py[i]**2
&amp;quot;)

py_loop_append &amp;lt;- (
&amp;quot;for i in normal_distibution_py:
  py_append_results.append(i**2)
&amp;quot;)

py_loop_dict &amp;lt;- (
&amp;quot;for i in range(len(normal_distibution_py)):
  py_dict_results[i] =  normal_distibution_py[i]**2
&amp;quot;)

py_list_comp &amp;lt;- (
&amp;quot;
[x**2 for x in normal_distibution_py]
&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;… but what runs fastest?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;speeds &amp;lt;- mark(
  for(i in normal_distibution) bad_R[i] &amp;lt;- normal_distibution[i] * normal_distibution[i],
  vapply(normal_distibution, function(x) x^2, numeric(1)),
  normal_distibution^2,
  
  py_run_string(py_loop_index, convert = FALSE),
  py_run_string(py_loop_append, convert = FALSE),
  py_run_string(py_loop_dict, convert = FALSE),
  py_run_string(py_list_comp),
  
  check = FALSE, iterations = 100
  ) &lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-10&#34;&gt;Table 1: &lt;/span&gt;“Looping” Comparison
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
expression
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
mean
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
median
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: blue;&#34;&gt;Good R&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34; font-weight: bold;  font-family: monospace;  color: blue;&#34;&gt;normal_distibution^2&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.02us
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.98us
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: green;&#34;&gt;Python&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34; font-weight: bold;  font-family: monospace;  color: green;&#34;&gt;&lt;br&gt;[x**2 for x in normal_distibution_py]&lt;br&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
675.43us
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
595.75us
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: orange;&#34;&gt;Python&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34; font-weight: bold;  font-family: monospace;  color: orange;&#34;&gt;for i in normal_distibution_py:&lt;br&gt; py_append_results.append(i**2)&lt;br&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
935.9us
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
864.79us
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: red;&#34;&gt;Python&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34; font-weight: bold;  font-family: monospace;  color: red;&#34;&gt;for i in range(len(normal_distibution_py)):&lt;br&gt; py_dict_results[i] = normal_distibution_py[i]**2&lt;br&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.2ms
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.11ms
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: darkred;&#34;&gt;Python&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34; font-weight: bold;  font-family: monospace;  color: darkred;&#34;&gt;for i in range(len(normal_distibution_py)):&lt;br&gt; py_index_results[i] = normal_distibution_py[i]**2&lt;br&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.37ms
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.16ms
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: purple;&#34;&gt;Not-Good R&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34; font-weight: bold;  font-family: monospace;  color: purple;&#34;&gt;vapply(normal_distibution, function(x) x^2, numeric(1))&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.18ms
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.79ms
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: black;&#34;&gt;Bad R&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34; font-weight: bold;  font-family: monospace;  color: black;&#34;&gt;for (i in normal_distibution) bad_R[i] &amp;lt;- normal_distibution[i] * normal…&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
55.08ms
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
49.69ms
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In these conditions and for this task, we can say two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;All the Python&lt;/em&gt; solutions are &lt;em&gt;faster&lt;/em&gt; than the &lt;em&gt;poorly-optimized R&lt;/em&gt; solutions.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;optimized R&lt;/em&gt; solution is &lt;em&gt;faster&lt;/em&gt; than &lt;em&gt;all the Python&lt;/em&gt; solutions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;That said, there are issues with this test.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Are we &lt;em&gt;really&lt;/em&gt; testing the same thing?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In terms of the exact steps that a computer takes to crunch the numbers? No, but that’s not very realistic or useful.&lt;/p&gt;
&lt;p&gt;In terms of reaching a desired result? Ignoring that pure Python &lt;code&gt;list()&lt;/code&gt;s are not inherently homogeneous, yes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;py_run_string(&amp;quot;py_append_results = []&amp;quot;)
py_run_string(py_loop_append)
all.equal(good_R, py$py_append_results)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Is running the Python code through R’s &lt;code&gt;reticulate&lt;/code&gt; &lt;em&gt;actually&lt;/em&gt; fair?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Is it less fair than running &lt;code&gt;rpy2&lt;/code&gt; in Python? After running all these tests, I’d say that &lt;code&gt;reticulate&lt;/code&gt; is &lt;em&gt;fairer&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Is this even a good task to compare performance?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Based on the number of articles including a similar test, you’d almost think so. I don’t entirely agree as that’s a bit reductionist. The R solution is only the variable followed by &lt;em&gt;literally two characters&lt;/em&gt;: &lt;code&gt;^2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;But, I &lt;em&gt;do&lt;/em&gt; think it serves as a great example of fundamental differences in the languages.&lt;/p&gt;
&lt;p&gt;Considering the above results and simplicity of the good R solution, it illustrates how easily you can place arbitrary handicaps on the R code, which you’ll find in many of these “language war” articles. I hope that’s simply due to ignorant assumptions, but then the author shouldn’t be writing an article claiming authority.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;While there are articles that do make a point of notifying the reader that the tests are lacking, some will sell the results as gospel anyways. Others seem to dismiss the merits of rigor entirely.&lt;/p&gt;
&lt;p&gt;In a field referred to as “Data Science”, the mountain of articles discussing such poor metrics is concerning. Consider how many newcomers seem to use them when choosing a language in which to invest their time, and often money. (BTW the answer is both, but get great at one before tackling the other).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.reactiongifs.com/r/bth.gif&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;With that in mind, &lt;em&gt;what would an objective comparison look like&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Here’s a barrage of tests applied to a task that’s both &lt;strong&gt;common in practice&lt;/strong&gt; and &lt;em&gt;common in these “language war” tests&lt;/em&gt;: reading a .csv file to a data frame. This is a task for which many articles assert Python’s superiority, despite the evidence here and elsewhere.&lt;/p&gt;
&lt;p&gt;However, the &lt;strong&gt;real&lt;/strong&gt; goal is to experiment with methods that can be used to make future tests involving less trivial tasks more objective &lt;em&gt;and thus more useful to everyone&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I also think it’s a cool demonstration of some RStudio and {&lt;code&gt;reticulate&lt;/code&gt;} sweetness. I hope it spurs some interest in how awesome a multilingual workflow can be.&lt;/p&gt;
&lt;p&gt;If you want to skip a pile of monotonous code, go ahead and jump to the &lt;a href=&#34;#execution-times&#34;&gt;results&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Otherwise, the entire workflow is here to scrutinize…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(bench)
library(kableExtra); options(knitr.kable.NA = &amp;quot;&amp;quot;)
library(scales)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducible-python-environment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Reproducible Python Environment&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(reticulate)
conda_create(&amp;quot;r-py-benchmarks&amp;quot;, c(&amp;quot;python=3.6&amp;quot;, &amp;quot;numpy&amp;quot;, &amp;quot;pandas&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;use_condaenv(&amp;quot;r-py-benchmarks&amp;quot;, required = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The Data&lt;/h1&gt;
&lt;p&gt;The data come from a neutral third-party in the form of .csv, which can be obtained from &lt;a href=&#34;https://blog.majestic.com/development/majestic-million-csv-daily/&#34;&gt;Majestic Million CSV&lt;/a&gt; &lt;a href=&#34;https://creativecommons.org/licenses/by/3.0/deed.en_US&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by/3.0/88x31.png&#34;&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;download-and-read-data-set&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Download and Read Data Set&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file_url &amp;lt;- &amp;quot;http://downloads.majestic.com/majestic_million.csv&amp;quot;
temp_file &amp;lt;- tempfile(fileext = &amp;quot;.csv&amp;quot;)

download.file(file_url, destfile = temp_file)

test_df &amp;lt;- read_csv(temp_file)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;quick-inspection&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Quick Inspection&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(test_df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 1,000,000
## Variables: 12
## $ GlobalRank     &amp;lt;int&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, ...
## $ TldRank        &amp;lt;int&amp;gt; 1, 2, 3, 4, 5, 6, 1, 7, 8, 9, 2, 10, 3, 11, 12,...
## $ Domain         &amp;lt;chr&amp;gt; &amp;quot;google.com&amp;quot;, &amp;quot;facebook.com&amp;quot;, &amp;quot;youtube.com&amp;quot;, &amp;quot;t...
## $ TLD            &amp;lt;chr&amp;gt; &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;org&amp;quot;...
## $ RefSubNets     &amp;lt;int&amp;gt; 463232, 451237, 410764, 409068, 303679, 292966,...
## $ RefIPs         &amp;lt;int&amp;gt; 2963708, 3046847, 2444016, 2546940, 1139322, 13...
## $ IDN_Domain     &amp;lt;chr&amp;gt; &amp;quot;google.com&amp;quot;, &amp;quot;facebook.com&amp;quot;, &amp;quot;youtube.com&amp;quot;, &amp;quot;t...
## $ IDN_TLD        &amp;lt;chr&amp;gt; &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;com&amp;quot;, &amp;quot;org&amp;quot;...
## $ PrevGlobalRank &amp;lt;int&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, ...
## $ PrevTldRank    &amp;lt;int&amp;gt; 1, 2, 3, 4, 5, 6, 1, 7, 8, 9, 2, 10, 3, 11, 12,...
## $ PrevRefSubNets &amp;lt;int&amp;gt; 462861, 451086, 410676, 408692, 303296, 292918,...
## $ PrevRefIPs     &amp;lt;int&amp;gt; 2966284, 3049605, 2447455, 2549623, 1138675, 13...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test_df %&amp;gt;%
  summarise_all(funs(sum(is.na(.)))) %&amp;gt;% # where the NAs at?
  gather(Variable, NAs) %&amp;gt;% 
  kable() %&amp;gt;% 
  kable_styling(full_width = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Variable
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
NAs
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
GlobalRank
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TldRank
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Domain
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TLD
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
RefSubNets
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
RefIPs
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
IDN_Domain
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
IDN_TLD
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
PrevGlobalRank
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
PrevTldRank
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
PrevRefSubNets
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
PrevRefIPs
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;write-the-.csv&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Write the .csv&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;write_csv(test_df, path)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;small&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Small&lt;/h2&gt;
&lt;p&gt;The “small” .csv consists of the first 100 rows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(small_df &amp;lt;- test_df %&amp;gt;% 
  slice(1:100))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 100 x 12
##    GlobalRank TldRank Domain TLD   RefSubNets RefIPs IDN_Domain IDN_TLD
##         &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;  
##  1          1       1 googl~ com       463232 2.96e6 google.com com    
##  2          2       2 faceb~ com       451237 3.05e6 facebook.~ com    
##  3          3       3 youtu~ com       410764 2.44e6 youtube.c~ com    
##  4          4       4 twitt~ com       409068 2.55e6 twitter.c~ com    
##  5          5       5 micro~ com       303679 1.14e6 microsoft~ com    
##  6          6       6 linke~ com       292966 1.35e6 linkedin.~ com    
##  7          7       1 wikip~ org       287420 1.24e6 wikipedia~ org    
##  8          8       7 plus.~ com       284103 1.46e6 plus.goog~ com    
##  9          9       8 insta~ com       277145 1.37e6 instagram~ com    
## 10         10       9 apple~ com       276152 1.05e6 apple.com  com    
## # ... with 90 more rows, and 4 more variables: PrevGlobalRank &amp;lt;int&amp;gt;,
## #   PrevTldRank &amp;lt;int&amp;gt;, PrevRefSubNets &amp;lt;int&amp;gt;, PrevRefIPs &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(small_rows &amp;lt;- nrow(small_df)) %&amp;gt;% comma() %&amp;gt;% cat(&amp;quot;rows&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 100 rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path_small_csv &amp;lt;- &amp;quot;test-data/small_csv.csv&amp;quot;
write_csv(small_df, path_small_csv)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;medium&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Medium&lt;/h2&gt;
&lt;p&gt;The “medium” .csv consists of the first 5,000 rows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(medium_df &amp;lt;- test_df %&amp;gt;% 
  slice(1:5000))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5,000 x 12
##    GlobalRank TldRank Domain TLD   RefSubNets RefIPs IDN_Domain IDN_TLD
##         &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;  
##  1          1       1 googl~ com       463232 2.96e6 google.com com    
##  2          2       2 faceb~ com       451237 3.05e6 facebook.~ com    
##  3          3       3 youtu~ com       410764 2.44e6 youtube.c~ com    
##  4          4       4 twitt~ com       409068 2.55e6 twitter.c~ com    
##  5          5       5 micro~ com       303679 1.14e6 microsoft~ com    
##  6          6       6 linke~ com       292966 1.35e6 linkedin.~ com    
##  7          7       1 wikip~ org       287420 1.24e6 wikipedia~ org    
##  8          8       7 plus.~ com       284103 1.46e6 plus.goog~ com    
##  9          9       8 insta~ com       277145 1.37e6 instagram~ com    
## 10         10       9 apple~ com       276152 1.05e6 apple.com  com    
## # ... with 4,990 more rows, and 4 more variables: PrevGlobalRank &amp;lt;int&amp;gt;,
## #   PrevTldRank &amp;lt;int&amp;gt;, PrevRefSubNets &amp;lt;int&amp;gt;, PrevRefIPs &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(med_rows &amp;lt;- nrow(medium_df)) %&amp;gt;% comma() %&amp;gt;% cat(&amp;quot;rows&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 5,000 rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path_medium_csv &amp;lt;- &amp;quot;test-data/medium_csv.csv&amp;quot;
write_csv(medium_df, path_medium_csv)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;big&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Big&lt;/h2&gt;
&lt;p&gt;The “big” .csv stacks all 1,000,000 rows five times, creating a 5,000,000 row .csv.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(big_df &amp;lt;- test_df %&amp;gt;% 
  rerun(.n = 5) %&amp;gt;% 
  bind_rows())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5,000,000 x 12
##    GlobalRank TldRank Domain TLD   RefSubNets RefIPs IDN_Domain IDN_TLD
##         &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;  
##  1          1       1 googl~ com       463232 2.96e6 google.com com    
##  2          2       2 faceb~ com       451237 3.05e6 facebook.~ com    
##  3          3       3 youtu~ com       410764 2.44e6 youtube.c~ com    
##  4          4       4 twitt~ com       409068 2.55e6 twitter.c~ com    
##  5          5       5 micro~ com       303679 1.14e6 microsoft~ com    
##  6          6       6 linke~ com       292966 1.35e6 linkedin.~ com    
##  7          7       1 wikip~ org       287420 1.24e6 wikipedia~ org    
##  8          8       7 plus.~ com       284103 1.46e6 plus.goog~ com    
##  9          9       8 insta~ com       277145 1.37e6 instagram~ com    
## 10         10       9 apple~ com       276152 1.05e6 apple.com  com    
## # ... with 4,999,990 more rows, and 4 more variables:
## #   PrevGlobalRank &amp;lt;int&amp;gt;, PrevTldRank &amp;lt;int&amp;gt;, PrevRefSubNets &amp;lt;int&amp;gt;,
## #   PrevRefIPs &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(big_rows &amp;lt;- nrow(big_df)) %&amp;gt;% comma() %&amp;gt;% cat(&amp;quot;rows&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 5,000,000 rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path_big_csv &amp;lt;- &amp;quot;test-data/big_csv.csv&amp;quot;
write_csv(big_df, path_big_csv)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-code&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The Code&lt;/h1&gt;
&lt;p&gt;The following steps were taken to “standardize” code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R and Python functions:
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;File paths are assigned to a &lt;code&gt;&amp;quot;*_csv.csv&amp;quot;&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt;The column data types are identified ahead of time via a &lt;code&gt;*_col_specs&lt;/code&gt; variable in order to maximize read speed. In future tests, it would be interesting to skip this step.
&lt;ul&gt;
&lt;li&gt;All “numeric” data are read as &lt;code&gt;double&lt;/code&gt; via:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;double&amp;quot;&lt;/code&gt; for &lt;code&gt;utils::read.csv()&lt;/code&gt; and &lt;code&gt;data.table::fread()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readr::col_double()&lt;/code&gt; for &lt;code&gt;readr::read_csv()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float&lt;/code&gt; for &lt;code&gt;pandas.read_csv()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;This is to standardize numeric usage as my understanding is that both R’s &lt;code&gt;double&lt;/code&gt;s and Python’s &lt;code&gt;float&lt;/code&gt;s are &lt;code&gt;double&lt;/code&gt;s in the underlying C code. It also prevents the need to &lt;code&gt;import numpy&lt;/code&gt; in every call to a Python script. If this is incorrect, don’t hesitate to say so.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The function assigns the result to an internal &lt;code&gt;df&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt;The function explicitly &lt;code&gt;return()&lt;/code&gt;s the data frame.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;.R and .py Script Execution:
&lt;ul&gt;
&lt;li&gt;.R scripts are called via &lt;code&gt;system()&lt;/code&gt; instead of &lt;code&gt;source()&lt;/code&gt; as &lt;code&gt;source()&lt;/code&gt; appeared to offer a potentially unfair advantage.&lt;/li&gt;
&lt;li&gt;Similarly, .py scripts were tested via &lt;code&gt;system()&lt;/code&gt;, &lt;code&gt;reticulate::py_run_file()&lt;/code&gt;, and &lt;code&gt;reticulate::py_run_string()&lt;/code&gt; instead of &lt;code&gt;reticulate::source_python()&lt;/code&gt;, to minimize the amount of steps required for execution and minimize potential handicaps.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;.R and .py Script Code:
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Relevant package are loaded via R’s &lt;code&gt;library()&lt;/code&gt; or Python’s &lt;code&gt;import&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;File paths are assigned to a &lt;code&gt;&amp;quot;*_csv.csv&amp;quot;&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt;The column data types are identified ahead of time via a &lt;code&gt;*_col_specs&lt;/code&gt; variable.
&lt;ul&gt;
&lt;li&gt;All “numeric” data are read as &lt;code&gt;double&lt;/code&gt;s.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Data frames are assigned to a variable upon reading the file.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;inspect_script &amp;lt;- function(path) {
  url_base &amp;lt;-  &amp;quot;https://github.com/syknapptic/syknapptic/tree/master/content/post/&amp;quot;
  contents &amp;lt;- read_lines(path)
  cat(&amp;quot;File available at&amp;quot;, paste0(url_base, path), &amp;quot;\n&amp;quot;)
  cat(&amp;quot;```\n&amp;quot;)
  cat(&amp;quot;# &amp;quot;, path, &amp;quot; &amp;quot;, rep(&amp;quot;=&amp;quot;, (80 - nchar(path) - 2)), &amp;quot;\n&amp;quot;, sep = &amp;quot;&amp;quot;)
  contents %&amp;gt;% walk(cat, &amp;quot;\n&amp;quot;)
  cat(&amp;quot;```\n\n&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R&lt;/h2&gt;
&lt;div id=&#34;base---utilsread.csv&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;“Base” - &lt;code&gt;utils::read.csv()&lt;/code&gt;&lt;/h3&gt;
&lt;div id=&#34;local-r-function&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Local R Function&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;base_col_specs &amp;lt;- c(&amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;character&amp;quot;,
                    &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;,
                    &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;,
                    &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;)

base_test &amp;lt;- function(path) {
  df &amp;lt;- read.csv(file = path, colClasses = base_col_specs)
  
  return(df)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scripts-to-source-by-operating-system-via-system&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Scripts to Source by Operating System via &lt;code&gt;system()&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;c(&amp;quot;r/base_test_small.R&amp;quot;, &amp;quot;r/base_test_med.R&amp;quot;, &amp;quot;r/base_test_big.R&amp;quot;) %&amp;gt;% 
  walk(inspect_script)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/base_test_small.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/base_test_small.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/base_test_small.R ===========================================================
path_small_csv &amp;lt;- &amp;quot;test-data/small_csv.csv&amp;quot; 
 
base_col_specs &amp;lt;- c(&amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;character&amp;quot;, 
                    &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, 
                    &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, 
                    &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;) 
 
df &amp;lt;- read.csv(file = path_small_csv, colClasses = base_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/base_test_med.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/base_test_med.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/base_test_med.R =============================================================
path_medium_csv &amp;lt;- &amp;quot;test-data/medium_csv.csv&amp;quot; 
 
base_col_specs &amp;lt;- c(&amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;character&amp;quot;, 
                    &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, 
                    &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, 
                    &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;) 
 
df &amp;lt;- read.csv(file = path_medium_csv, colClasses = base_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/base_test_big.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/base_test_big.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/base_test_big.R =============================================================
path_big_csv &amp;lt;- &amp;quot;test-data/big_csv.csv&amp;quot; 
 
base_col_specs &amp;lt;- c(&amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;character&amp;quot;, 
                    &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, 
                    &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, 
                    &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;) 
 
df &amp;lt;- read.csv(file = path_big_csv, colClasses = base_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;readrread_csv&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;readr::read_csv()&lt;/code&gt;&lt;/h3&gt;
&lt;div id=&#34;local-r-function-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Local R Function&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)

readr_col_specs &amp;lt;- list(col_double(), col_double(), col_character(),
                        col_character(), col_double(), col_double(),
                        col_character(), col_character(), col_double(),
                        col_double(), col_double(), col_double())

readr_test &amp;lt;- function(path) {
  df &amp;lt;- read_csv(file = path, col_types = readr_col_specs)
  
  return(df)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scripts-to-source-by-operating-system-via-system-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Scripts to Source by Operating System via &lt;code&gt;system()&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;c(&amp;quot;r/readr_test_small.R&amp;quot;, &amp;quot;r/readr_test_med.R&amp;quot;, &amp;quot;r/readr_test_big.R&amp;quot;) %&amp;gt;% 
  walk(inspect_script)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/readr_test_small.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/readr_test_small.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/readr_test_small.R ==========================================================
library(readr) 
 
path_small_csv &amp;lt;- &amp;quot;test-data/small_csv.csv&amp;quot; 
 
readr_col_specs &amp;lt;- list(col_double(), col_double(), col_character(), 
                        col_character(), col_double(), col_double(), 
                        col_character(), col_character(), col_double(), 
                        col_double(), col_double(), col_double()) 
 
df &amp;lt;- read_csv(file = path_small_csv, col_types = readr_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/readr_test_med.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/readr_test_med.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/readr_test_med.R ============================================================
library(readr) 
 
path_medium_csv &amp;lt;- &amp;quot;test-data/medium_csv.csv&amp;quot; 
 
readr_col_specs &amp;lt;- list(col_double(), col_double(), col_character(), 
                        col_character(), col_double(), col_double(), 
                        col_character(), col_character(), col_double(), 
                        col_double(), col_double(), col_double()) 
 
df &amp;lt;- read_csv(file = path_medium_csv, col_types = readr_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/readr_test_big.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/readr_test_big.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/readr_test_big.R ============================================================
library(readr) 
 
path_big_csv &amp;lt;- &amp;quot;test-data/big_csv.csv&amp;quot; 
 
readr_col_specs &amp;lt;- list(col_double(), col_double(), col_character(), 
                        col_character(), col_double(), col_double(), 
                        col_character(), col_character(), col_double(), 
                        col_double(), col_double(), col_double()) 
 
df &amp;lt;- read_csv(file = path_big_csv, col_types = readr_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data.tablefread&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;data.table::fread()&lt;/code&gt;&lt;/h3&gt;
&lt;div id=&#34;local-r-function-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Local R Function&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(data.table)

datatable_col_specs &amp;lt;- c(&amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;character&amp;quot;,
                         &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;,
                         &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;,
                         &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;)

datatable_test &amp;lt;- function(path) {
  df &amp;lt;- fread(file = path, colClasses = datatable_col_specs)
  
  return(df)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scripts-to-source-by-operating-system-via-system-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Scripts to Source by Operating System via &lt;code&gt;system()&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;c(&amp;quot;r/datatable_test_small.R&amp;quot;, &amp;quot;r/datatable_test_med.R&amp;quot;, &amp;quot;r/datatable_test_big.R&amp;quot;) %&amp;gt;% 
  walk(inspect_script)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/datatable_test_small.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/datatable_test_small.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/datatable_test_small.R ======================================================
library(data.table) 
 
path_small_csv &amp;lt;- &amp;quot;test-data/small_csv.csv&amp;quot; 
 
datatable_col_specs &amp;lt;- c(&amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;character&amp;quot;, 
                         &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, 
                         &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, 
                         &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;) 
 
df &amp;lt;- fread(file = path_small_csv, colClasses = datatable_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/datatable_test_med.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/datatable_test_med.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/datatable_test_med.R ========================================================
library(data.table) 
 
path_medium_csv &amp;lt;- &amp;quot;test-data/medium_csv.csv&amp;quot; 
 
datatable_col_specs &amp;lt;- c(&amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;character&amp;quot;, 
                         &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, 
                         &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, 
                         &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;) 
 
df &amp;lt;- fread(file = path_medium_csv, colClasses = datatable_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/datatable_test_big.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/datatable_test_big.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/datatable_test_big.R ========================================================
library(data.table) 
 
path_big_csv &amp;lt;- &amp;quot;test-data/big_csv.csv&amp;quot; 
 
datatable_col_specs &amp;lt;- c(&amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;character&amp;quot;, 
                         &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, 
                         &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;double&amp;quot;, 
                         &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;, &amp;quot;double&amp;quot;) 
 
df &amp;lt;- fread(file = path_big_csv, colClasses = datatable_col_specs) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;python&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;div id=&#34;pandas.read_csv&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;pandas.read_csv()&lt;/code&gt;&lt;/h3&gt;
&lt;div id=&#34;local-python-function&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Local Python Function&lt;/h4&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import pandas
path_small_csv = &amp;#39;test-data/small_csv.csv&amp;#39;
path_medium_csv = &amp;#39;test-data/medium_csv.csv&amp;#39;
path_big_csv = &amp;#39;test-data/big_csv.csv&amp;#39;
pandas_col_specs = {
  &amp;#39;GlobalRank&amp;#39;:float, &amp;#39;TldRank&amp;#39;:float, &amp;#39;Domain&amp;#39;:str,
  &amp;#39;TLD&amp;#39;:str, &amp;#39;RefSubNets&amp;#39;:float, &amp;#39;RefIPs&amp;#39;:float,
  &amp;#39;IDN_Domain&amp;#39;:str, &amp;#39;IDN_TLD&amp;#39;:str, &amp;#39;PrevGlobalRank&amp;#39;:float,
  &amp;#39;PrevTldRank&amp;#39;:float, &amp;#39;PrevRefSubNets&amp;#39;:float, &amp;#39;PrevRefIPs&amp;#39;:float
  }
def pandas_test_small():
  df = pandas.read_csv(filepath_or_buffer = path_small_csv,
                dtype = pandas_col_specs, low_memory = False)
  return(df)
  
def pandas_test_medium():
  df = pandas.read_csv(filepath_or_buffer = path_medium_csv,
                dtype = pandas_col_specs, low_memory = False)
  return(df)
  
def pandas_test_big():
  df = pandas.read_csv(filepath_or_buffer = path_big_csv,
                dtype = pandas_col_specs, low_memory = False)
  return(df)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scripts-to-source-via-system-and-reticulatepy_run_file...-convert-false&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Scripts to Source via &lt;code&gt;system()&lt;/code&gt; and &lt;code&gt;reticulate::py_run_file(..., convert = FALSE)&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;c(&amp;quot;py/pandas_test_small.py&amp;quot;, &amp;quot;py/pandas_test_med.py&amp;quot;, &amp;quot;py/pandas_test_big.py&amp;quot;) %&amp;gt;% 
  walk(inspect_script)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/py/pandas_test_small.py&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/py/pandas_test_small.py&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# py/pandas_test_small.py =======================================================
import pandas 
 
path_small_csv = &amp;#39;test-data/small_csv.csv&amp;#39; 
   
pandas_col_specs = { 
  &amp;#39;GlobalRank&amp;#39;:float, &amp;#39;TldRank&amp;#39;:float, &amp;#39;Domain&amp;#39;:str, 
  &amp;#39;TLD&amp;#39;:str, &amp;#39;RefSubNets&amp;#39;:float, &amp;#39;RefIPs&amp;#39;:float, 
  &amp;#39;IDN_Domain&amp;#39;:str, &amp;#39;IDN_TLD&amp;#39;:str, &amp;#39;PrevGlobalRank&amp;#39;:float, 
  &amp;#39;PrevTldRank&amp;#39;:float, &amp;#39;PrevRefSubNets&amp;#39;:float, &amp;#39;PrevRefIPs&amp;#39;:float 
  } 
 
df = pandas.read_csv(filepath_or_buffer = path_small_csv, 
                     dtype = pandas_col_specs, low_memory = False) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/py/pandas_test_med.py&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/py/pandas_test_med.py&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# py/pandas_test_med.py =========================================================
import pandas 
 
path_medium_csv = &amp;#39;test-data/medium_csv.csv&amp;#39; 
 
pandas_col_specs = { 
  &amp;#39;GlobalRank&amp;#39;:float, &amp;#39;TldRank&amp;#39;:float, &amp;#39;Domain&amp;#39;:str, 
  &amp;#39;TLD&amp;#39;:str, &amp;#39;RefSubNets&amp;#39;:float, &amp;#39;RefIPs&amp;#39;:float, 
  &amp;#39;IDN_Domain&amp;#39;:str, &amp;#39;IDN_TLD&amp;#39;:str, &amp;#39;PrevGlobalRank&amp;#39;:float, 
  &amp;#39;PrevTldRank&amp;#39;:float, &amp;#39;PrevRefSubNets&amp;#39;:float, &amp;#39;PrevRefIPs&amp;#39;:float 
  } 
 
df = pandas.read_csv(filepath_or_buffer = path_medium_csv, 
                     dtype = pandas_col_specs, low_memory = False) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/py/pandas_test_big.py&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/py/pandas_test_big.py&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# py/pandas_test_big.py =========================================================
import pandas 
 
path_big_csv = &amp;#39;test-data/big_csv.csv&amp;#39; 
 
pandas_col_specs = { 
  &amp;#39;GlobalRank&amp;#39;:float, &amp;#39;TldRank&amp;#39;:float, &amp;#39;Domain&amp;#39;:str, 
  &amp;#39;TLD&amp;#39;:str, &amp;#39;RefSubNets&amp;#39;:float, &amp;#39;RefIPs&amp;#39;:float, 
  &amp;#39;IDN_Domain&amp;#39;:str, &amp;#39;IDN_TLD&amp;#39;:str, &amp;#39;PrevGlobalRank&amp;#39;:float, 
  &amp;#39;PrevTldRank&amp;#39;:float, &amp;#39;PrevRefSubNets&amp;#39;:float, &amp;#39;PrevRefIPs&amp;#39;:float 
  } 
 
df = pandas.read_csv(filepath_or_buffer = path_big_csv, 
                     dtype = pandas_col_specs, low_memory = False) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;reticulatepy_run_string...-convert-false&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;code&gt;reticulate::py_run_string(..., convert = FALSE)&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;py_run_string(
&amp;quot;
import pandas

path_small_csv = &amp;#39;test-data/small_csv.csv&amp;#39;
path_medium_csv = &amp;#39;test-data/medium_csv.csv&amp;#39;
path_big_csv = &amp;#39;test-data/big_csv.csv&amp;#39;

pandas_col_specs = {
  &amp;#39;GlobalRank&amp;#39;:float, &amp;#39;TldRank&amp;#39;:float, &amp;#39;Domain&amp;#39;:str,
  &amp;#39;TLD&amp;#39;:str, &amp;#39;RefSubNets&amp;#39;:float, &amp;#39;RefIPs&amp;#39;:float,
  &amp;#39;IDN_Domain&amp;#39;:str, &amp;#39;IDN_TLD&amp;#39;:str, &amp;#39;PrevGlobalRank&amp;#39;:float,
  &amp;#39;PrevTldRank&amp;#39;:float, &amp;#39;PrevRefSubNets&amp;#39;:float, &amp;#39;PrevRefIPs&amp;#39;:float
  }

def retic_pandas_test_small():
  df = pandas.read_csv(filepath_or_buffer = path_small_csv,
                dtype = pandas_col_specs, low_memory = False)
  return(df)

def retic_pandas_test_medium():
  df = pandas.read_csv(filepath_or_buffer = path_medium_csv,
                dtype = pandas_col_specs, low_memory = False)
  return(df)

def retic_pandas_test_big():
  df = pandas.read_csv(filepath_or_buffer = path_big_csv,
                dtype = pandas_col_specs, low_memory = False)
  return(df)

&amp;quot;, convert = FALSE
)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;dependencies-only&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dependencies Only&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;c(&amp;quot;r/test_load_readr.R&amp;quot;, &amp;quot;r/test_load_datatable.R&amp;quot;, &amp;quot;py/test_load_pandas.py&amp;quot;) %&amp;gt;% 
  walk(inspect_script)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/test_load_readr.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/test_load_readr.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/test_load_readr.R ===========================================================
library(readr) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/test_load_datatable.R&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/r/test_load_datatable.R&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# r/test_load_datatable.R =======================================================
library(data.table) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;File available at &lt;a href=&#34;https://github.com/syknapptic/syknapptic/tree/master/content/post/py/test_load_pandas.py&#34; class=&#34;uri&#34;&gt;https://github.com/syknapptic/syknapptic/tree/master/content/post/py/test_load_pandas.py&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# py/test_load_pandas.py ========================================================
def square(x): 
  return x**2 
 
def evens(x): 
  y = [] 
  for i in x: 
    if i // 2 == 0: 
      y.append(i) 
  return(y) 
 
 
def ceci_nest_pas_une_pipe(args, *funs): 
  for arg in args: 
    for fun in funs: 
      arg = fun(arg) 
  return arg 
 
ceci_nest_pas_une_pipe([1, 2, 3, 4], even) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-test&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The Test&lt;/h1&gt;
&lt;p&gt;100 iterations were run to provide a reasonable balance between rigor and compute time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_iterations &amp;lt;- 100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All the code was tested via the {&lt;code&gt;bench&lt;/code&gt;} package and its &lt;code&gt;bench::mark()&lt;/code&gt; function. This package was only selected over others as a chance to take it for a test drive.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;convert&lt;/code&gt; argument of &lt;code&gt;reticulate::py_run_string()&lt;/code&gt; and &lt;code&gt;reticulate::py_run_file()&lt;/code&gt; calls is set to &lt;code&gt;FALSE&lt;/code&gt; to minimize any handicap.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results &amp;lt;- mark(
  base_test(path_small_csv),
  readr_test(path_small_csv),
  datatable_test(path_small_csv),
  system(&amp;quot;Rscript r/base_test_small.R&amp;quot;),
  system(&amp;quot;Rscript r/readr_test_small.R&amp;quot;),
  system(&amp;quot;Rscript r/datatable_test_small.R&amp;quot;),
  
  py$pandas_test_small(),
  py_run_string(&amp;quot;retic_pandas_test_small()&amp;quot;, convert = FALSE),
  py_run_file(&amp;quot;py/pandas_test_small.py&amp;quot;, convert = FALSE),
  system(&amp;quot;python py/pandas_test_small.py&amp;quot;),

  base_test(path_medium_csv),
  readr_test(path_medium_csv),
  datatable_test(path_medium_csv),
  system(&amp;quot;Rscript r/base_test_med.R&amp;quot;),
  system(&amp;quot;Rscript r/readr_test_med.R&amp;quot;),
  system(&amp;quot;Rscript r/datatable_test_med.R&amp;quot;),
  
  py$pandas_test_medium(),
  py_run_string(&amp;quot;retic_pandas_test_medium()&amp;quot;, convert = FALSE),
  py_run_file(&amp;quot;py/pandas_test_med.py&amp;quot;, convert = FALSE),
  system(&amp;quot;python py/pandas_test_med.py&amp;quot;),

  base_test(path_big_csv),
  readr_test(path_big_csv),
  datatable_test(path_big_csv),
  system(&amp;quot;Rscript r/base_test_big.R&amp;quot;),
  system(&amp;quot;Rscript r/readr_test_big.R&amp;quot;),
  system(&amp;quot;Rscript r/datatable_test_big.R&amp;quot;),

  py$pandas_test_big(),
  py_run_string(&amp;quot;retic_pandas_test_big()&amp;quot;, convert = FALSE),
  py_run_file(&amp;quot;py/pandas_test_big.py&amp;quot;, convert = FALSE),
  system(&amp;quot;python py/pandas_test_big.py&amp;quot;),

  check = FALSE, filter_gc = FALSE, iterations = n_iterations
  )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;package_results &amp;lt;- mark(
  system(&amp;quot;Rscript r/test_load_readr.R&amp;quot;),
  system(&amp;quot;Rscript r/test_load_datatable.R&amp;quot;),
  system(&amp;quot;python py/test_load_pandas.py&amp;quot;),
  
  check = FALSE, filter_gc = FALSE, iterations = n_iterations
)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;initial-carpentry&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Initial Carpentry&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;package_results_df &amp;lt;- package_results %&amp;gt;% 
  unnest() %&amp;gt;% 
  mutate(package = case_when(
    str_detect(expression, &amp;quot;datatable&amp;quot;) ~ &amp;quot;data.table&amp;quot;,
    str_detect(expression, &amp;quot;readr&amp;quot;) ~ &amp;quot;readr&amp;quot;,
    str_detect(expression, &amp;quot;pandas&amp;quot;) ~ &amp;quot;pandas&amp;quot;
  )) %&amp;gt;% 
  mutate(call = case_when(
    package == &amp;quot;data.table&amp;quot; ~ &amp;quot;library(data.table)&amp;quot;,
    package == &amp;quot;readr&amp;quot; ~ &amp;quot;library(readr)&amp;quot;,
    package == &amp;quot;pandas&amp;quot; ~ &amp;quot;import pandas&amp;quot;
  ))

package_medians_df &amp;lt;- package_results_df %&amp;gt;% 
  rename(median_package = median, min_package = min, max_package = max) %&amp;gt;%
  distinct(package, median_package, min_package, max_package) %&amp;gt;% 
  add_row(median_package = bench_time(0), package = &amp;quot;utils&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_exprs &amp;lt;- results$expression
system_calls &amp;lt;- all_exprs %&amp;gt;% str_subset(&amp;quot;^system\\(&amp;quot;)
local_r_fun_calls &amp;lt;- all_exprs %&amp;gt;% str_subset(&amp;quot;^(base|readr|datatable)_test\\(&amp;quot;)
python_eng_calls &amp;lt;- all_exprs %&amp;gt;% str_subset(&amp;quot;^py\\$&amp;quot;)
reticulate_calls &amp;lt;- all_exprs %&amp;gt;% str_subset(&amp;quot;py_run&amp;quot;)
knitr_calls &amp;lt;- c(local_r_fun_calls, python_eng_calls, reticulate_calls)

results_df &amp;lt;- results %&amp;gt;%
  unnest() %&amp;gt;%
  mutate(package = case_when(
    str_detect(expression, &amp;quot;datatable&amp;quot;) ~ &amp;quot;data.table&amp;quot;,
    str_detect(expression, &amp;quot;readr&amp;quot;) ~ &amp;quot;readr&amp;quot;,
    str_detect(expression, &amp;quot;pandas&amp;quot;) ~ &amp;quot;pandas&amp;quot;,
    TRUE ~ &amp;quot;utils&amp;quot;
  )) %&amp;gt;% 
  mutate(call = case_when(
    str_detect(expression, &amp;quot;base&amp;quot;) ~ &amp;quot;utils::read.csv()&amp;quot;,
    str_detect(expression, &amp;quot;readr&amp;quot;) ~ &amp;quot;readr::read_csv()&amp;quot;,
    str_detect(expression, &amp;quot;datatable&amp;quot;) ~ &amp;quot;data.table::fread()&amp;quot;,
    str_detect(expression, &amp;quot;py_run_string&amp;quot;) ~ &amp;quot;reticulate::py_run_string()&amp;quot;,
    str_detect(expression, &amp;quot;py_run_file&amp;quot;) ~ &amp;quot;reticulate::py_run_file()&amp;quot;,
    str_detect(expression, &amp;quot;pandas&amp;quot;) ~ &amp;quot;pandas.read_csv()&amp;quot;
      ) %&amp;gt;%
      str_pad(max(nchar(.)), side = &amp;quot;right&amp;quot;) # enforce left alignment in plots
    ) %&amp;gt;%
  mutate(execution_type = case_when(
    expression %in% system_calls ~ &amp;quot;Sourced Script&amp;quot;,
    expression %in% knitr_calls ~ &amp;quot;knitr Engine&amp;quot;
    )) %&amp;gt;%
  mutate(dependency_status = case_when(
    expression %in% system_calls ~ &amp;quot;Dependencies Loaded on Execution (Sourced Script)&amp;quot;,
    expression %in% knitr_calls ~ &amp;quot;Dependencies Pre-Loaded&amp;quot;)) %&amp;gt;% 
  mutate(lang = if_else(str_detect(expression, &amp;quot;pandas&amp;quot;), &amp;quot;Python&amp;quot;, &amp;quot;R&amp;quot;)) %&amp;gt;%
  mutate(file_size = str_extract(expression, &amp;quot;small|med|big&amp;quot;)) %&amp;gt;%
  mutate(rows = case_when(
    file_size == &amp;quot;small&amp;quot; ~ small_rows,
    file_size == &amp;quot;med&amp;quot; ~ med_rows,
    file_size == &amp;quot;big&amp;quot; ~ big_rows
    )) %&amp;gt;% 
  left_join(package_medians_df, by = &amp;quot;package&amp;quot;)

gg_df &amp;lt;- results_df %&amp;gt;%
  mutate(n_rows = rows) %&amp;gt;% 
  arrange(rows) %&amp;gt;%
  mutate(rows = rows %&amp;gt;%
           comma() %&amp;gt;%
           paste(&amp;quot;Rows&amp;quot;) %&amp;gt;%
           as_factor()
        ) %&amp;gt;%
  group_by(expression) %&amp;gt;% 
  mutate(med_time = as.numeric(median(time))) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  arrange(desc(med_time)) %&amp;gt;%
  mutate(call = as_factor(call)) %&amp;gt;%
  arrange(desc(lang)) %&amp;gt;%
  mutate(lang = as_factor(lang))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-results&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The Results&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_simple &amp;lt;- function(pnl_ln_col = &amp;quot;black&amp;quot;, line_type = &amp;quot;dotted&amp;quot;, cap_size = 10,
                         facet = NULL, ...) {
  theme_minimal(15, &amp;quot;serif&amp;quot;) +
  theme(legend.title = element_blank(), 
        legend.text = element_text(size = 12),
        legend.position = &amp;quot;top&amp;quot;,
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.major.y = element_line(colour = pnl_ln_col, linetype = line_type),
        legend.key.size = unit(1.5, &amp;quot;lines&amp;quot;), 
        axis.text.y = element_text(&amp;quot;mono&amp;quot;, face = &amp;quot;bold&amp;quot;, hjust = 0, size = 12),
        plot.caption = element_text(size = cap_size),
        ...)
}

prep_lab &amp;lt;- function(lab) {
  lab &amp;lt;- substitute(lab)
  bquote(italic(paste(&amp;quot;   &amp;quot;, .(lab), &amp;quot;   &amp;quot;)))
}

t_R &amp;lt;- prep_lab(t[R])
t_Python &amp;lt;- prep_lab(t[Python])
t_import_pandas &amp;lt;- prep_lab(t[Python]~-~max~group(&amp;quot;(&amp;quot;,t[import~~pandas],&amp;quot;)&amp;quot;))

plot_times &amp;lt;- function(df, ...) {
  plot_init &amp;lt;- df %&amp;gt;%
    ggplot(aes(call, time)) +
    stat_ydensity(aes(fill = lang, color = lang), scale = &amp;quot;width&amp;quot;, bw = 0.01, trim = FALSE) +
    scale_fill_manual(values = c(&amp;quot;#165CAA&amp;quot;, &amp;quot;#ffde57&amp;quot;), labels = c(t_R, t_Python)) +
    scale_color_manual(values = c(&amp;quot;#BFC2C5&amp;quot;, &amp;quot;#4584b6&amp;quot;), labels = c(t_R, t_Python)) +
    coord_flip() +
    theme_simple()
    if(length(vars(...))) {
      n_rows &amp;lt;- sort(df$n_rows, decreasing = TRUE)[[1]]
      plot_fin &amp;lt;- plot_init + 
        facet_wrap(vars(...), ncol = 1, scales = &amp;quot;free&amp;quot;) +
        labs(x = NULL, y = &amp;quot;Execution Time&amp;quot;, 
             title = str_glue(&amp;quot;CSV to Data Frame: {comma(n_rows)} Rows&amp;quot;),
             caption = str_glue(&amp;quot;{n_iterations} iterations&amp;quot;))
    } else {
      plot_fin &amp;lt;- plot_init + 
        labs(x = NULL, y = &amp;quot;Execution Time&amp;quot;, title = &amp;quot;Dependency Load Times&amp;quot;,
             caption = str_glue(&amp;quot;{n_iterations} iterations&amp;quot;)) +
        geom_text(aes(y = median, label = paste(&amp;quot;Median Time:&amp;quot;, median)), 
                  color = &amp;quot;darkgreen&amp;quot;, nudge_x = 0.515)
    }
  
  plot_fin
}&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;execution-times&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Execution Times&lt;/h2&gt;
&lt;p&gt;At 100 rows, R is faster, with base R’s &lt;code&gt;utils::read.csv()&lt;/code&gt; finishing first.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gg_df %&amp;gt;%
  filter(file_size == &amp;quot;small&amp;quot;) %&amp;gt;% 
  plot_times(facet = dependency_status)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-08-reading-csv-files_files/figure-html/unnamed-chunk-42-1.png&#34; width=&#34;3300&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;At 5,000 rows, R is still faster. In the sourced scripts, &lt;code&gt;pandas.read_csv()&lt;/code&gt; has nearly caught up with &lt;code&gt;utils::read.csv()&lt;/code&gt;, but &lt;code&gt;data.table::fread()&lt;/code&gt; has pulled away.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gg_df %&amp;gt;%
  filter(file_size == &amp;quot;med&amp;quot;) %&amp;gt;% 
  plot_times(facet = dependency_status)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-08-reading-csv-files_files/figure-html/unnamed-chunk-43-1.png&#34; width=&#34;3300&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;At 5,000,000 million rows, we’ve reached the size where time differences would &lt;em&gt;actually&lt;/em&gt; be noticeable.&lt;/p&gt;
&lt;p&gt;The advantage of&lt;code&gt;utils::read.csv()&lt;/code&gt;’s lack of dependencies has run its course and &lt;code&gt;pandas.read_csv()&lt;/code&gt; is faster in nearly every case.&lt;/p&gt;
&lt;p&gt;That said, &lt;code&gt;readr::read_csv()&lt;/code&gt; is still faster than &lt;code&gt;pandas.read_csv()&lt;/code&gt; and, like most R users would expect, &lt;code&gt;data.table::fread()&lt;/code&gt; is by far the fastest.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gg_df %&amp;gt;%
  filter(file_size == &amp;quot;big&amp;quot;) %&amp;gt;% 
  plot_times(facet = dependency_status)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-08-reading-csv-files_files/figure-html/unnamed-chunk-44-1.png&#34; width=&#34;3300&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tldr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;&lt;em&gt;tl;dr&lt;/em&gt;&lt;/strong&gt;&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gg_df %&amp;gt;% 
  mutate(dependency_status = dependency_status %&amp;gt;% 
           str_remove(&amp;quot;\\s\\(.*$&amp;quot;) %&amp;gt;% 
           str_replace(&amp;quot;Loaded on&amp;quot;, &amp;quot;Loaded\non&amp;quot;)
         ) %&amp;gt;% 
  ggplot(aes(call, time)) +
    stat_ydensity(aes(fill = lang, color = lang), scale = &amp;quot;width&amp;quot;, bw = 0.01, 
                  trim = FALSE) +
    scale_fill_manual(values = c(&amp;quot;#165CAA&amp;quot;, &amp;quot;#ffde57&amp;quot;), labels = c(t_R, t_Python)) +
    scale_color_manual(values = c(&amp;quot;#BFC2C5&amp;quot;, &amp;quot;#4584b6&amp;quot;), labels = c(t_R, t_Python)) +
    coord_flip() +
  theme_simple(pnl_ln_col = &amp;quot;gray&amp;quot;) +
  theme(axis.text = element_text(size = 8), strip.text  = element_text(size = 12),
        strip.text.y  = element_text(face = &amp;quot;bold&amp;quot;, size = 15),
        panel.background = element_rect(fill = &amp;quot;transparent&amp;quot;, size = 0.5)) +
  facet_grid(rows ~ dependency_status, scales = &amp;quot;free&amp;quot;, switch = &amp;quot;y&amp;quot;, space = &amp;quot;free&amp;quot;) +
  labs(x = NULL, y = &amp;quot;Time&amp;quot;, title = &amp;quot;R vs Python - CSV to Data Frame&amp;quot;,
       caption = &amp;quot;12 columns, 100 iterations each&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-08-reading-csv-files_files/figure-html/unnamed-chunk-45-1.png&#34; width=&#34;3300&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;appendices&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Appendices&lt;/h1&gt;
&lt;div id=&#34;dependency-load-times&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dependency Load Times&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;package_results_df %&amp;gt;%
  mutate(lang = if_else(str_detect(expression, &amp;quot;pandas&amp;quot;), &amp;quot;Python&amp;quot;, &amp;quot;R&amp;quot;)) %&amp;gt;% 
  arrange(desc(lang)) %&amp;gt;%
  mutate(lang = as_factor(lang)) %&amp;gt;% 
  plot_times()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-08-reading-csv-files_files/figure-html/unnamed-chunk-46-1.png&#34; width=&#34;3300&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gg_df %&amp;gt;% 
  filter(dependency_status == &amp;quot;Dependencies Loaded on Execution (Sourced Script)&amp;quot;) %&amp;gt;%  
  filter(file_size == &amp;quot;big&amp;quot;) %&amp;gt;% 
  mutate(adjusted_time = if_else(lang == &amp;quot;Python&amp;quot;, time - max_package, NA_real_))  %&amp;gt;% 
  rename(original_time = time) %&amp;gt;% 
  gather(time_type, time, original_time, adjusted_time) %&amp;gt;% 
  drop_na(time) %&amp;gt;% 
  mutate(descrip = case_when(
    lang == &amp;quot;R&amp;quot; ~ &amp;quot;Original R Time&amp;quot;,
    lang == &amp;quot;Python&amp;quot; &amp;amp; time_type == &amp;quot;original_time&amp;quot; ~ &amp;quot;Original Python Time&amp;quot;,
    lang == &amp;quot;Python&amp;quot; &amp;amp; time_type == &amp;quot;adjusted_time&amp;quot; ~ &amp;quot;Adjusted Python Time&amp;quot;
    )) %&amp;gt;% 
  arrange(desc(descrip)) %&amp;gt;% 
  mutate(descrip = as_factor(descrip)) %&amp;gt;% 
  ggplot(aes(call, time, fill = descrip)) +
  stat_ydensity(width = 1, size = 0, color = &amp;quot;transparent&amp;quot;, scale = &amp;quot;width&amp;quot;, bw = 0.01,
                trim = FALSE) +
  scale_fill_manual(values = c(&amp;quot;#165CAA&amp;quot;, &amp;quot;#ffde57&amp;quot;, &amp;quot;#ff9051&amp;quot;), 
                    labels = c(t_R, t_Python, t_import_pandas)) +
  guides(fill = guide_legend(nrow = 3, label.hjust = 0)) +
  coord_flip() +
  theme_simple() +
  labs(x = NULL, y = &amp;quot;Execution Time&amp;quot;,
       title = &amp;quot;Comparing Sourced Scripts with Adjusted Python Times&amp;quot;,
       caption = str_glue(&amp;quot;CSV to Data Frame: {comma(big_rows)} Rows&amp;quot;)
      )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-08-reading-csv-files_files/figure-html/unnamed-chunk-47-1.png&#34; width=&#34;3300&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary-tables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Summary Tables&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results_df %&amp;gt;%
  select(rows, lang, execution_type, call, mean, median, `itr/sec`, n_gc, mem_alloc) %&amp;gt;% 
  distinct() %&amp;gt;% 
  arrange(rows, desc(lang)) %&amp;gt;%
  mutate(rows = comma(rows), 
         `itr/sec` = round(`itr/sec`, 2),
         n_gc = ifelse(execution_type == &amp;quot;Sourced Script&amp;quot;, &amp;quot;unknown&amp;quot;, n_gc),
         mem_alloc = ifelse(execution_type == &amp;quot;Sourced Script&amp;quot;, &amp;quot;unknown&amp;quot;, mem_alloc)) %&amp;gt;% 
  mutate_at(vars(-c(rows, lang)), 
            funs(cell_spec(., background = ifelse(lang == &amp;quot;R&amp;quot;, &amp;quot;#f2f2f2&amp;quot;, &amp;quot;#edf9ff&amp;quot;),
                              color = ifelse(lang == &amp;quot;R&amp;quot;, &amp;quot;#002963&amp;quot;, &amp;quot;#809100&amp;quot;))
                )) %&amp;gt;% 
  mutate(lang = lang %&amp;gt;% cell_spec(background = ifelse(lang == &amp;quot;R&amp;quot;, &amp;quot;#f2f2f2&amp;quot;, &amp;quot;#edf9ff&amp;quot;),
                                   color = ifelse(lang == &amp;quot;R&amp;quot;, &amp;quot;#002647&amp;quot;, &amp;quot;#809100&amp;quot;))) %&amp;gt;% 
  mutate(n_gc = if_else(str_detect(n_gc, &amp;quot;unknown&amp;quot;), &amp;quot;unknown&amp;quot;, n_gc),
         mem_alloc = if_else(str_detect(mem_alloc, &amp;quot;unknown&amp;quot;), &amp;quot;unknown&amp;quot;, mem_alloc)) %&amp;gt;%
  rename(garbage_collections = n_gc, language = lang, memory_allocated = mem_alloc) %&amp;gt;%
  rename_all(funs(str_to_title(str_replace(., &amp;quot;_&amp;quot;, &amp;quot; &amp;quot;)))) %&amp;gt;%
  kable(caption = &amp;quot;CSV to Data Frame Times&amp;quot;, escape = FALSE, digits = 2) %&amp;gt;%
  kable_styling(bootstrap_options = &amp;quot;condensed&amp;quot;, font_size = 12) %&amp;gt;% 
  collapse_rows(columns = 1:3, valign = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-condensed&#34; style=&#34;font-size: 12px; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption style=&#34;font-size: initial !important;&#34;&gt;
&lt;span id=&#34;tab:unnamed-chunk-48&#34;&gt;Table 2: &lt;/span&gt;CSV to Data Frame Times
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Rows
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Language
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Execution Type
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Call
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Mean
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Median
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Itr/Sec
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Garbage Collections
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Memory Allocated
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;10&#34;&gt;
100
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;6&#34;&gt;
&lt;span style=&#34;     color: #002647;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;R&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;knitr Engine&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;utils::read.csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;891.85us&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;834.96us&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;1121.26&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;364168&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;readr::read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 3.05ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 2.9ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;327.96&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;143680&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;data.table::fread() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 1.4ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 1.36ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;711.99&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;276896&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;Sourced Script&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;utils::read.csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;205.24ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;200.39ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;4.87&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;readr::read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;548.78ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;512.73ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;1.82&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;data.table::fread() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;322.13ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;295.43ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;3.1&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;4&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;Python&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;knitr Engine&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;pandas.read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 74.99ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 48.48ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;13.34&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;9&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;1298288&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;reticulate::py_run_string()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 5.02ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 3.75ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;199.04&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;1&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;2840&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;reticulate::py_run_file() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 5.78ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 3.75ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;173.05&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;9504&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;Sourced Script&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;pandas.read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;559.01ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;530.84ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;1.79&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;10&#34;&gt;
5,000
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;6&#34;&gt;
&lt;span style=&#34;     color: #002647;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;R&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;knitr Engine&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;utils::read.csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 18.53ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 18.37ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;53.98&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;1975368&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;readr::read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 10.17ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 9.75ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;98.3&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;1621744&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;data.table::fread() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 5ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 4.73ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;200.02&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;675120&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;Sourced Script&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;utils::read.csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;221.48ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;216.81ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;4.52&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;readr::read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;529.75ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;522.03ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;1.89&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;data.table::fread() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;296.08ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;294.28ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;3.38&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;4&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;Python&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;knitr Engine&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;pandas.read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 83.11ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 67.52ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;12.03&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;10&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;3058232&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;reticulate::py_run_string()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 24.05ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 24.31ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;41.58&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;2840&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;reticulate::py_run_file() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 22.14ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 21.67ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;45.16&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;2840&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;Sourced Script&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;pandas.read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;577.44ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;552.81ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;1.73&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;10&#34;&gt;
5,000,000
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;6&#34;&gt;
&lt;span style=&#34;     color: #002647;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;R&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;knitr Engine&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;utils::read.csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 19.55s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 19.4s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0.05&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;168&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;2052818952&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;readr::read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 7.11s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 7.08s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0.14&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;107&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;1567378576&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;data.table::fread() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 2.73s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 2.6s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0.37&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;28&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;665639952&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;Sourced Script&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;utils::read.csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 23.25s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 23.07s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0.04&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;readr::read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 10.06s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 10.05s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0.1&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;data.table::fread() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 3.78s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt; 3.78s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;0.26&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;4&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;Python&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;knitr Engine&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;pandas.read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 20.23s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 19.67s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0.05&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;23&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;1921138232&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;reticulate::py_run_string()&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 13.26s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 13.25s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0.08&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;2840&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;reticulate::py_run_file() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 13.26s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 13.26s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0.08&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;2840&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;Sourced Script&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;pandas.read_csv() &lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 13.8s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt; 13.77s&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;0.07&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
unknown
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;package_results_df %&amp;gt;% 
  mutate(lang = if_else(str_detect(expression, &amp;quot;\\.py&amp;quot;), &amp;quot;Python&amp;quot;, &amp;quot;R&amp;quot;),
         `itr/sec` = round(`itr/sec`, 2)) %&amp;gt;% 
  select(lang, call, min, mean, median, max, `itr/sec`) %&amp;gt;% 
  distinct() %&amp;gt;% 
  mutate_at(vars(-lang), 
            funs(cell_spec(., background = ifelse(lang == &amp;quot;R&amp;quot;, &amp;quot;#f2f2f2&amp;quot;, &amp;quot;#edf9ff&amp;quot;),
                              color = ifelse(lang == &amp;quot;R&amp;quot;, &amp;quot;#002963&amp;quot;, &amp;quot;#809100&amp;quot;))
            )) %&amp;gt;% 
  mutate(lang = lang %&amp;gt;% cell_spec(background = ifelse(lang == &amp;quot;R&amp;quot;, &amp;quot;#f2f2f2&amp;quot;, &amp;quot;#edf9ff&amp;quot;),
                                   color = ifelse(lang == &amp;quot;R&amp;quot;, &amp;quot;#002647&amp;quot;, &amp;quot;#809100&amp;quot;))) %&amp;gt;% 
  rename(language = lang) %&amp;gt;% 
  rename_all(str_to_title) %&amp;gt;% 
  kable(caption = &amp;quot;Dependency Load Times&amp;quot;, escape = FALSE, digits = 2) %&amp;gt;%
  kable_styling(bootstrap_options = &amp;quot;condensed&amp;quot;, font_size = 12) %&amp;gt;% 
  collapse_rows(columns = 1, valign = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-condensed&#34; style=&#34;font-size: 12px; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption style=&#34;font-size: initial !important;&#34;&gt;
&lt;span id=&#34;tab:unnamed-chunk-49&#34;&gt;Table 3: &lt;/span&gt;Dependency Load Times
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Language
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Call
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Min
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Mean
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Median
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Max
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Itr/Sec
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;vertical-align: top !important;&#34; rowspan=&#34;2&#34;&gt;
&lt;span style=&#34;     color: #002647;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;R&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;library(readr)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;506ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;510ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;507ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;552ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;1.96&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;library(data.table)&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;305ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;308ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;305ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;407ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #002963;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #f2f2f2;&#34;&gt;3.25&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;Python&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;import pandas&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;569ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;611ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;607ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;911ms&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;     color: #809100;border-radius: 4px; padding-right: 4px; padding-left: 4px; background-color: #edf9ff;&#34;&gt;1.64&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;environment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Environment&lt;/h1&gt;
&lt;div id=&#34;ide&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;IDE&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rstudio_info &amp;lt;- rstudioapi::versionInfo() # obtain in interactive session
write_rds(rstudio_info, &amp;quot;test-data/rstudio_info.rds&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;read_rds(&amp;quot;test-data/rstudio_info.rds&amp;quot;) %&amp;gt;% 
  as_tibble() %&amp;gt;% 
  mutate(IDE = &amp;quot;RStudio&amp;quot;) %&amp;gt;% 
  select(IDE, mode, version) %&amp;gt;% 
  mutate(version = as.character(version)) %&amp;gt;% 
  kable() %&amp;gt;% 
  kable_styling(full_width = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
IDE
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
mode
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
version
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
RStudio
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
desktop
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1.1.453
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;r-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.5.1 (2018-07-02)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 17134)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] data.table_1.11.5     bindrcpp_0.2.2        forcats_0.3.0        
##  [4] stringr_1.3.1         dplyr_0.7.6           purrr_0.2.5          
##  [7] readr_1.1.1           tidyr_0.8.1           tibble_1.4.2.9004    
## [10] ggplot2_3.0.0.9000    tidyverse_1.2.1.9000  scales_0.5.0.9000    
## [13] reticulate_1.9.0.9001 kableExtra_0.9.0      bench_1.0.1          
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_0.12.17      lubridate_1.7.4   lattice_0.20-35  
##  [4] utf8_1.1.4        assertthat_0.2.0  digest_0.6.15    
##  [7] psych_1.8.4       R6_2.2.2          cellranger_1.1.0 
## [10] plyr_1.8.4        evaluate_0.10.1   highr_0.7        
## [13] httr_1.3.1        blogdown_0.7.1    pillar_1.3.0.9000
## [16] rlang_0.2.1       lazyeval_0.2.1    readxl_1.1.0     
## [19] rstudioapi_0.7    Matrix_1.2-14     rmarkdown_1.10.7 
## [22] selectr_0.4-1     foreign_0.8-70    munsell_0.5.0    
## [25] broom_0.4.5       compiler_3.5.1    modelr_0.1.2     
## [28] xfun_0.3          pkgconfig_2.0.1   mnormt_1.5-5     
## [31] htmltools_0.3.6   tidyselect_0.2.4  bookdown_0.7     
## [34] fansi_0.2.3       viridisLite_0.3.0 crayon_1.3.4     
## [37] withr_2.1.2       grid_3.5.1        nlme_3.1-137     
## [40] jsonlite_1.5      gtable_0.2.0      magrittr_1.5     
## [43] cli_1.0.0         stringi_1.2.3     profmem_0.5.0    
## [46] reshape2_1.4.3    xml2_1.2.0        htmldeps_0.1.0   
## [49] tools_3.5.1       glue_1.2.0        hms_0.4.2        
## [52] parallel_3.5.1    yaml_2.1.19       colorspace_1.3-2 
## [55] rvest_0.3.2       knitr_1.20.8      bindr_0.1.1      
## [58] haven_1.1.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import sys
import numpy
import pandas
print(sys.version)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3.6.6 |Anaconda, Inc.| (default, Jun 28 2018, 11:27:44) [MSC v.1900 64 bit (AMD64)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(numpy.__version__)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1.14.5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(pandas.__version__)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0.23.1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;system&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;System&lt;/h2&gt;
&lt;div id=&#34;cpu&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;CPU&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(&amp;quot;CPU:\n&amp;quot;, system(&amp;quot;wmic cpu get name&amp;quot;, intern = TRUE)[[2]])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## CPU:
##  Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz  &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;memory&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Memory&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ram_df &amp;lt;- system(&amp;quot;wmic MEMORYCHIP get BankLabel, Capacity, Speed&amp;quot;, intern = TRUE) %&amp;gt;% 
  str_trim() %&amp;gt;% 
  as_tibble() %&amp;gt;% 
  slice(2:3) %&amp;gt;% 
  separate(value, into = c(&amp;quot;BankLabel&amp;quot;, &amp;quot;Capacity&amp;quot;, &amp;quot;Speed&amp;quot;), sep = &amp;quot;\\s{2,}&amp;quot;)

ram_df %&amp;gt;% 
  rename_all(str_replace, &amp;quot;L&amp;quot;, &amp;quot; L&amp;quot;) %&amp;gt;% 
  kable() %&amp;gt;% 
  kable_styling(full_width = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Bank Label
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Capacity
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Speed
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DIMM A
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
17179869184
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2400
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DIMM B
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
17179869184
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2400
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ram_df %&amp;gt;% 
  mutate(Capacity = as.numeric(Capacity) / 1e9,
         Speed = as.numeric(Speed)) %&amp;gt;% 
  summarise(`Capacity in GB` = sum(Capacity),
            `Speed in MHz` = unique(Speed)) %&amp;gt;% 
  kable() %&amp;gt;% 
  kable_styling(full_width = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Capacity in GB
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Speed in MHz
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34.35974
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2400
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;storage&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Storage&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(&amp;quot;SSD:\n&amp;quot;, system(&amp;quot;wmic diskdrive get Model&amp;quot;, intern = TRUE)[[2]])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## SSD:
##  PM951 NVMe SAMSUNG 512GB  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Variable Assignment</title>
      <link>/2018/07/variable-assignment/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/variable-assignment/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#c&#34;&gt;C++&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#rcpp&#34;&gt;Rcpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;var_R &amp;lt;- 1

var_R&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Python&lt;/h1&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;var_PY = 1
print(var_PY)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;c&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;C++&lt;/h1&gt;
&lt;pre class=&#34;cpp&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;

int main() {
  int var_CPP = 1;

  std::cout &amp;lt;&amp;lt; var_CPP;
  
  return 0;
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;rcpp&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Rcpp&lt;/h2&gt;
&lt;pre class=&#34;cpp&#34;&gt;&lt;code&gt;#include &amp;lt;Rcpp.h&amp;gt;       // R to/from C++ interface
// [[Rcpp::export]]

int RCPP_function() {
  int var_RCPP = 1;
  
  return var_RCPP;
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;RCPP_function() # access the C++ function from R like any other function&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Essential Math</title>
      <link>/2018/07/math/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/math/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#our-test-values&#34;&gt;Our Test Values&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#c&#34;&gt;C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sum&#34;&gt;Sum&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r-1&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python-1&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#length&#34;&gt;Length&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r-2&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python-2&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mean&#34;&gt;Mean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r-3&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python-3&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;our-test-values&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Our Test Values&lt;/h1&gt;
&lt;div id=&#34;r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R&lt;/h2&gt;
&lt;p&gt;Here’s a &lt;code&gt;numeric&lt;/code&gt; &lt;code&gt;vector&lt;/code&gt; for our R code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x_R &amp;lt;- c(1.5, 2, 3.25, 4.9, 5, 6.1, 7.39, 8, 9.9)

x_R&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.50 2.00 3.25 4.90 5.00 6.10 7.39 8.00 9.90&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;Here’s a &lt;code&gt;list&lt;/code&gt; of &lt;code&gt;float&lt;/code&gt;s for our Python code.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x_PY = [1.5, 2, 3.25, 4.9, 5, 6.1, 7.39, 8, 9.9]
print(x_PY)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1.5, 2, 3.25, 4.9, 5, 6.1, 7.39, 8, 9.9]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;c&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;C++&lt;/h2&gt;
&lt;div id=&#34;rcpp&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rcpp&lt;/h3&gt;
&lt;pre class=&#34;cpp&#34;&gt;&lt;code&gt;#include &amp;lt;Rcpp.h&amp;gt;       // R to C++ to R interface
// [[Rcpp::export]]

void x_RCPP()
{
  float x_RCPP[9] = {1.5, 2, 3.25, 4.9, 5, 6.1, 7.39, 8, 9.9};

  for (int i = 0; i &amp;lt; 9; i++)
    Rcpp::Rcout &amp;lt;&amp;lt; x_RCPP[i] &amp;lt;&amp;lt; &amp;quot; &amp;quot;;
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1.5 2 3.25 4.9 5 6.1 7.39 8 9.9&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pure-c&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pure C++&lt;/h3&gt;
&lt;pre class=&#34;cpp&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;

void x_CPP()
{
  float x_CPP[9] = {1.5, 2, 3.25, 4.9, 5, 6.1, 7.39, 8, 9.9};

  for (int i = 0; i &amp;lt; 9; i++)
    std::cout &amp;lt;&amp;lt; x_CPP[i] &amp;lt;&amp;lt; &amp;quot; &amp;quot;;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sum&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sum&lt;/h1&gt;
&lt;div id=&#34;r-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R&lt;/h2&gt;
&lt;p&gt;Manually implementing R’s &lt;code&gt;sum()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get_sum &amp;lt;- function(values) {
  the_sum &amp;lt;- 0
  
  for(i in values) {
    the_sum &amp;lt;- the_sum + i
  }
  
  return(the_sum)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of our custom &lt;code&gt;get_sum()&lt;/code&gt; function in R:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get_sum(x_R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 48.04&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which we can compare to R’s built-in &lt;code&gt;sum()&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(x_R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 48.04&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;Manually implementing Python’s &lt;code&gt;sum()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def get_sum(values):
  the_sum = 0
  
  for i in values:
    the_sum += i
    
  return(the_sum)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of our custom &lt;code&gt;get_sum()&lt;/code&gt; function in Python:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(get_sum(x_PY))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 48.04&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which we can compare to Python’s built-in &lt;code&gt;sum()&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(sum(x_PY))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 48.04&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;length&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Length&lt;/h1&gt;
&lt;div id=&#34;r-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R&lt;/h2&gt;
&lt;p&gt;Manually implementing R’s &lt;code&gt;length()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get_length &amp;lt;- function(values) {
  the_length &amp;lt;- 0
  
  for(i in values) {
    the_length &amp;lt;- the_length + 1
  }
  
  return(the_length)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of our custom &lt;code&gt;get_length()&lt;/code&gt; function in R:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get_length(x_R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which we can compare to R’s built-in &lt;code&gt;length()&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(x_R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 9&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;Manually implementing Python’s &lt;code&gt;len()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def get_length(values):
  the_length = 0
  
  for i in values:
    the_length = the_length + 1
    
  return(the_length)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of our custom &lt;code&gt;get_length()&lt;/code&gt; function in Python:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(get_length(x_PY))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which we can compare to Python’s built-in &lt;code&gt;len()&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(len(x_PY))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 9&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;mean&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mean&lt;/h1&gt;
&lt;div id=&#34;r-3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R&lt;/h2&gt;
&lt;p&gt;Manually implementing R’s &lt;code&gt;mean()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get_mean &amp;lt;- function(values) {
  the_mean &amp;lt;- get_sum(values) / get_length(values)
  
  return(the_mean)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of our custom &lt;code&gt;get_mean()&lt;/code&gt; function in R:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get_mean(x_R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5.337778&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which we can compare to R’s built-in &lt;code&gt;mean()&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(x_R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5.337778&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python-3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;Manually implementing Python’s &lt;code&gt;statistics.mean()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def get_mean(values):
  the_mean = get_sum(values) / get_length(values)
  
  return(the_mean)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result of our custom &lt;code&gt;get_mean()&lt;/code&gt; function in Python:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(get_mean(x_PY))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 5.337777777777777&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which we can compare to Python’s &lt;code&gt;statistics.mean()&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from statistics import mean
print(mean(x_PY))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 5.337777777777778&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts on Teaching R and Yet Another Tidyverse Intro</title>
      <link>/2018/03/yet-another-tidyverse-intro/</link>
      <pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/yet-another-tidyverse-intro/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#context&#34;&gt;Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reflection&#34;&gt;Reflection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#resources-up-front&#34;&gt;Resources Up Front&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble&#34;&gt;&lt;code&gt;tibble&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#section&#34;&gt;&lt;code&gt;%&amp;gt;%&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tidy-data&#34;&gt;“Tidy” Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#select-columns&#34;&gt;&lt;code&gt;select()&lt;/code&gt; columns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filter-rows&#34;&gt;&lt;code&gt;filter()&lt;/code&gt; Rows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mutate-columns&#34;&gt;&lt;code&gt;mutate()&lt;/code&gt; Columns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#arrange-rows&#34;&gt;&lt;code&gt;arrange()&lt;/code&gt; Rows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#group_by-for-grouped-data&#34;&gt;&lt;code&gt;group_by()&lt;/code&gt; for Grouped Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#summarize&#34;&gt;&lt;code&gt;summarize()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521320144/tidyverse_meme_oceake.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Image credit to &lt;a href=&#34;https://www.facebook.com/Rmemes0/&#34;&gt;R Memes for Statistical Fiends&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Considering this is a blog post, I’m going to get all bloggy here before jumping into the code.&lt;/p&gt;
&lt;div id=&#34;context&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Context&lt;/h1&gt;
&lt;p&gt;I recently had the opportunity to teach some R coding to colleagues and classmates in a series of workshops. Some had already dabbled in R or other programming languages, but it was the first time that the majority of participants had written a single line of code.&lt;/p&gt;
&lt;p&gt;A few things happened in the week following the last session that I didn’t expect.&lt;/p&gt;
&lt;p&gt;First, I saw a bit of R code written on a campus whiteboard that had nothing to do with me, but was straight out of the workshop. It may have come from some of my data-centric colleagues who use R, so I didn’t think too much of it.&lt;/p&gt;
&lt;p&gt;Then, I overheard a conversation involving R from those in a program that doesn’t require any data-related coursework. Many folks are familiar with the name as the school’s primary data analysis course uses the &lt;code&gt;{Rcmdr}&lt;/code&gt; GUI for statistical analysis, but these students would not have necessarily taken the course. I wondered if there was a connection.&lt;/p&gt;
&lt;p&gt;Finally, a student who didn’t even attend came to my office hours asking for resources. Why exactly? Some of his work colleagues attended. It turns out that they are now trying to incorporate some R-powered analysis in their work and he doesn’t want to miss out.&lt;/p&gt;
&lt;p&gt;The workshop consisted of 3 consecutive Fridays lasting 90 minutes each. That’s only a total of 4.5 hours.&lt;/p&gt;
&lt;p&gt;That’s relatively tiny amount of time.&lt;/p&gt;
&lt;p&gt;Wait. Scratch that.&lt;/p&gt;
&lt;p&gt;That’s a &lt;strong&gt;negligible&lt;/strong&gt; amount of time.&lt;/p&gt;
&lt;p&gt;… but it was enough to convince some participants &lt;em&gt;and non-participants&lt;/em&gt; that they should take advantage of the power that a bit of data-centric coding can offer.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reflection&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Reflection&lt;/h1&gt;
&lt;p&gt;I taught a similar 90 minute workshop last spring using R, but focused on base R and a few data types. 10 minutes in, I’m trying to explain the difference between a &lt;code&gt;data.frame&lt;/code&gt; and a &lt;code&gt;matrix&lt;/code&gt; and the person asking the question says something along the lines of “I guess I’m kinda dumb. Don’t worry about it.”&lt;/p&gt;
&lt;p&gt;For context, these were international policy graduate students. While some have completed a bit of quantitative coursework, most don’t have a hardcore math or science background and programming is seen as something akin to wizardry. However, they hold domain expertise in some rather important subjects. These include WMD nonproliferation, international development, economic diplomacy, conflict studies, and environmental policy. Nearly half of the participants were international students and everyone is proficient in at least a second natural language. Most have already tackled big, complicated problems in their careers and the others are on their way to doing so following graduation. In a nutshell, they’re not dumb. The way I was teaching was dumb. They knew that they’re &lt;em&gt;supposed&lt;/em&gt; to want to learn new skills, but they didn’t know &lt;em&gt;why&lt;/em&gt;. Focusing on the “basics” didn’t show them anything immediately useful. It didn’t show them the &lt;em&gt;why&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;After the workshop, I never heard anyone mention R outside my circle of fellow data folks.&lt;/p&gt;
&lt;p&gt;Since that time, I started using R more. &lt;em&gt;Like, a lot more&lt;/em&gt;. I have found a way to use R in nearly everything I’ve done since May 2017. As a policy student myself, that has not always been very straightforward and I was still avoiding the strange “tidy” code I’d encounter on Stack Overflow and elsewhere. I realized the error of my ways when I came across Julia Silge and David Robinson’s &lt;a href=&#34;%22https://www.tidytextmining.com/%22&#34;&gt;Text Mining with R&lt;/a&gt;. &lt;em&gt;It was like discovering that you’re still in the stone age while most people are off partying on spaceships.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In preparation for this workshop series, I found a lot of inspiration in &lt;a href=&#34;http://michaellevy.name/blog/useR-talk-on-teaching-R/&#34;&gt;Michael Levy’s presentation on teaching R&lt;/a&gt;, which itself echoes principles preached by other &lt;code&gt;tidyverse&lt;/code&gt; advocates.&lt;/p&gt;
&lt;p&gt;A huge takeaway: &lt;strong&gt;live coding works&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Writing code in real time shows every single step we make from opening the IDE, to reshaping the data, to debugging inevitable errors, to rendering a final report.&lt;/p&gt;
&lt;p&gt;Within a few short weeks of learning to code, it might be surprising how many tiny steps become automatic and taken for granted. Tack on a couple more months and newcomers will think you’re speaking in an entirely different language because you’re explaining something requiring context they simply haven’t yet encountered. Add a few years and… yeesh.&lt;/p&gt;
&lt;p&gt;Something that frustrated me when I first started is that code explanations often seem to be written in such a way that dismisses how difficult establishing the basics can be. I’m half-convinced that, for some folks, the trauma was so great that they have simply blocked it from memory. Code is intimidating enough, but if an instructor doesn’t make a conscious effort to empathize, students will question their ability to learn. The goal is empowerment, not intimidation.&lt;/p&gt;
&lt;p&gt;Live coding enforces a maximum speed in moving through exercises, which not only gives students more time to digest what you’re doing. It also provides more opportunities for them to ask questions on details you might find trivial, but only because you &lt;em&gt;already&lt;/em&gt; suffered through them.&lt;/p&gt;
&lt;p&gt;I also think that the benefits of live coding extend to the instructor as well. I found myself answering questions that framed things in ways that I had not even considered, but were exactly how multiple participants saw the task. Additionally, I have a better sense of which concepts need to be covered in more detail, as they weren’t necessarily as intuitive for others as they were for me. On the flip-side, concepts with which I remember struggling may not be difficult at all for others to understand.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;… and now that we got the bloggyness of a blog post out of the way…&lt;/p&gt;
&lt;p&gt;Here is the workflow I used for the first session. The goal was to introduce the primary &lt;code&gt;{dplyr}&lt;/code&gt; verbs, functions that accomplish tasks necessary in nearly every project. Between each section is an exercise using &lt;code&gt;{ggplot}&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidyverse::tidyverse_logo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## * __  _    __   .    o           *  . 
##  / /_(_)__/ /_ ___  _____ _______ ___ 
## / __/ / _  / // / |/ / -_) __(_-&amp;lt;/ -_)
## \__/_/\_,_/\_, /|___/\__/_/ /___/\__/ 
##      *  . /___/      o      .       *&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;tidyverse&amp;quot;)
library(tidyverse)

# install.packages(&amp;quot;gapminder&amp;quot;)
library(gapminder)
# loads the gapminder data set

## just to prettify printed tables when knitting
# install.packages(&amp;quot;kableExtra&amp;quot;)
library(knitr)
library(kableExtra)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;workflow&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304416/workflow_2_wgqucd.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304418/workflow_i8nnfz.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304416/tidyverse_expanded_fhzkss.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;resources-up-front&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Resources Up Front&lt;/h1&gt;
&lt;div id=&#34;data-carpentry&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Carpentry&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://tidyr.tidyverse.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/tidyr/master/man/figures/logo.png&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;http://dplyr.tidyverse.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/dplyr/master/man/figures/logo.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf&#34;&gt;Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304416/data_carpentry_f05agy.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Plotting&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://ggplot2.tidyverse.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tidyverse/ggplot2/master/man/figures/logo.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf&#34;&gt;Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304418/ggplot_cheat_sheet_dvnj16.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.stat.ubc.ca/r-graph-catalog/&#34;&gt;R Graph Catalog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304415/r_graph_catalog_r5uiuf.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;our-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Our Data&lt;/h2&gt;
&lt;p&gt;In the following exercises, &lt;code&gt;gm.data.frame&lt;/code&gt; will be used to demonstrate actions that use &lt;code&gt;{base}&lt;/code&gt; R methods for &lt;code&gt;data.frame&lt;/code&gt; operations while &lt;code&gt;gm_df&lt;/code&gt; will be used to to demonstrate &lt;code&gt;{tidyverse}&lt;/code&gt; methods for &lt;code&gt;tibble&lt;/code&gt; operations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm.data.frame &amp;lt;- as.data.frame(gapminder)

gm_df &amp;lt;- gapminder&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;tibble&lt;/code&gt;&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(gm.data.frame)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;data.frame&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(gm_df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;tbl_df&amp;quot;     &amp;quot;tbl&amp;quot;        &amp;quot;data.frame&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;tibble&lt;/code&gt;s are opinionated &lt;code&gt;data.frame&lt;/code&gt;s that keep everything that is helpful about &lt;code&gt;data.frame&lt;/code&gt;s, changes some of their quirks, and adds methods that makes them even more useful.&lt;/p&gt;
&lt;p&gt;Printing &lt;code&gt;gm.data.frame&lt;/code&gt; dumps the whole data set to the console, typically requiring &lt;code&gt;head()&lt;/code&gt; to limit the output.&lt;/p&gt;
&lt;div id=&#34;printing&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Printing&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(gm.data.frame)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       country continent year lifeExp      pop gdpPercap
## 1 Afghanistan      Asia 1952  28.801  8425333  779.4453
## 2 Afghanistan      Asia 1957  30.332  9240934  820.8530
## 3 Afghanistan      Asia 1962  31.997 10267083  853.1007
## 4 Afghanistan      Asia 1967  34.020 11537966  836.1971
## 5 Afghanistan      Asia 1972  36.088 13079460  739.9811
## 6 Afghanistan      Asia 1977  38.438 14880372  786.1134&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Printing &lt;code&gt;gm_df&lt;/code&gt; provides the dimensions, data type of each column, and only prints the first 10 rows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1,704 x 6
##    country     continent  year lifeExp      pop gdpPercap
##    &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 Afghanistan Asia       1952    28.8  8425333      779.
##  2 Afghanistan Asia       1957    30.3  9240934      821.
##  3 Afghanistan Asia       1962    32.0 10267083      853.
##  4 Afghanistan Asia       1967    34.0 11537966      836.
##  5 Afghanistan Asia       1972    36.1 13079460      740.
##  6 Afghanistan Asia       1977    38.4 14880372      786.
##  7 Afghanistan Asia       1982    39.9 12881816      978.
##  8 Afghanistan Asia       1987    40.8 13867957      852.
##  9 Afghanistan Asia       1992    41.7 16317921      649.
## 10 Afghanistan Asia       1997    41.8 22227415      635.
## # ... with 1,694 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;section&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;%&amp;gt;%&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304412/magrittr_stxndz.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) is used to chain operations together. Underneath the hood, it’s taking the value on the left-hand side of &lt;code&gt;%&amp;gt;%&lt;/code&gt; and using it as the first argument of the function on the right-hand side of &lt;code&gt;%&amp;gt;%&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, these 2 lines are doing the exact same thing.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(gm_df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   country     continent  year lifeExp      pop gdpPercap
##   &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 Afghanistan Asia       1952    28.8  8425333      779.
## 2 Afghanistan Asia       1957    30.3  9240934      821.
## 3 Afghanistan Asia       1962    32.0 10267083      853.
## 4 Afghanistan Asia       1967    34.0 11537966      836.
## 5 Afghanistan Asia       1972    36.1 13079460      740.
## 6 Afghanistan Asia       1977    38.4 14880372      786.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;% head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   country     continent  year lifeExp      pop gdpPercap
##   &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 Afghanistan Asia       1952    28.8  8425333      779.
## 2 Afghanistan Asia       1957    30.3  9240934      821.
## 3 Afghanistan Asia       1962    32.0 10267083      853.
## 4 Afghanistan Asia       1967    34.0 11537966      836.
## 5 Afghanistan Asia       1972    36.1 13079460      740.
## 6 Afghanistan Asia       1977    38.4 14880372      786.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For simple operations involving 1 function, &lt;code&gt;%&amp;gt;%&lt;/code&gt; is only (arguably) beneficial in that it improves readability as the flow of operations go from left to right.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;%&amp;gt;%&lt;/code&gt; become truly useful when you need to perform multiple operations in succession, which is the vast majority of data carpentry.&lt;/p&gt;
&lt;p&gt;As an arbitrary example, let’s say that we want to select the &lt;code&gt;head()&lt;/code&gt; (first 6 rows) of &lt;code&gt;gm.data.frame&lt;/code&gt; and convert it to a &lt;code&gt;tibble&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Without &lt;code&gt;%&amp;gt;%&lt;/code&gt;, we can do this in a few ways.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Use intermediate variables.
&lt;ul&gt;
&lt;li&gt;get &lt;code&gt;gm.data.frame&lt;/code&gt;’s &lt;code&gt;head()&lt;/code&gt; and assign it to &lt;code&gt;no_pipe_1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;convert &lt;code&gt;no_pipe_1&lt;/code&gt; to a &lt;code&gt;tibble&lt;/code&gt; with &lt;code&gt;as_tibble()&lt;/code&gt; and assign it to &lt;code&gt;no_pipe_2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;no_pipe_1 &amp;lt;- head(gm.data.frame)

no_pipe_2 &amp;lt;- as_tibble(no_pipe_1)

no_pipe_2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   country     continent  year lifeExp      pop gdpPercap
## * &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 Afghanistan Asia       1952    28.8  8425333      779.
## 2 Afghanistan Asia       1957    30.3  9240934      821.
## 3 Afghanistan Asia       1962    32.0 10267083      853.
## 4 Afghanistan Asia       1967    34.0 11537966      836.
## 5 Afghanistan Asia       1972    36.1 13079460      740.
## 6 Afghanistan Asia       1977    38.4 14880372      786.&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Nest &lt;code&gt;gm.data.frame&lt;/code&gt; inside of &lt;code&gt;head()&lt;/code&gt;, which is itself nested inside of &lt;code&gt;as_tibble()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;as_tibble(head(gm.data.frame))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   country     continent  year lifeExp      pop gdpPercap
## * &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 Afghanistan Asia       1952    28.8  8425333      779.
## 2 Afghanistan Asia       1957    30.3  9240934      821.
## 3 Afghanistan Asia       1962    32.0 10267083      853.
## 4 Afghanistan Asia       1967    34.0 11537966      836.
## 5 Afghanistan Asia       1972    36.1 13079460      740.
## 6 Afghanistan Asia       1977    38.4 14880372      786.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With &lt;code&gt;%&amp;gt;%&lt;/code&gt;, we can chain these actions together in the order in which they occur, which is also the way we read English.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Here, we do the same thing by:
&lt;ul&gt;
&lt;li&gt;taking &lt;code&gt;gm_df&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;piping it to &lt;code&gt;head()&lt;/code&gt; (keeping the top 6 rows)&lt;/li&gt;
&lt;li&gt;piping it to &lt;code&gt;as_tibble()&lt;/code&gt; (converting it to a &lt;code&gt;tibble&lt;/code&gt; data frame)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;% head() %&amp;gt;% as_tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   country     continent  year lifeExp      pop gdpPercap
##   &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 Afghanistan Asia       1952    28.8  8425333      779.
## 2 Afghanistan Asia       1957    30.3  9240934      821.
## 3 Afghanistan Asia       1962    32.0 10267083      853.
## 4 Afghanistan Asia       1967    34.0 11537966      836.
## 5 Afghanistan Asia       1972    36.1 13079460      740.
## 6 Afghanistan Asia       1977    38.4 14880372      786.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In practice, it’s usually best to place each of the functions on a separate line as it facilitates debugging and further improves readability.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  as_tibble() %&amp;gt;%
  head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   country     continent  year lifeExp      pop gdpPercap
##   &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 Afghanistan Asia       1952    28.8  8425333      779.
## 2 Afghanistan Asia       1957    30.3  9240934      821.
## 3 Afghanistan Asia       1962    32.0 10267083      853.
## 4 Afghanistan Asia       1967    34.0 11537966      836.
## 5 Afghanistan Asia       1972    36.1 13079460      740.
## 6 Afghanistan Asia       1977    38.4 14880372      786.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;From here on, you’ll notice &lt;code&gt;prettify()&lt;/code&gt;. This is only being used to print tables in a clean format when the document is &lt;code&gt;knit()&lt;/code&gt;ted.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I’m choosing to include it here as I often find myself reading similar pages where I come across a really effective way to format some output. I understand why the author chooses to set &lt;code&gt;echo=FALSE&lt;/code&gt;, but it can be nice to see the underlying code without having to hunt through their GitHub.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;data.frame&lt;/code&gt;s will print a default maximum of &lt;code&gt;3&lt;/code&gt; rows while &lt;code&gt;tibble&lt;/code&gt;s will print a default maximum of &lt;code&gt;10&lt;/code&gt; rows.&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prettify &amp;lt;- function(df, n = NULL, cols_changed = NULL, rows_changed = NULL){
  if(is.null(n)) n &amp;lt;- ifelse(is.tibble(df), 10, 3)
  pretty_df &amp;lt;- df %&amp;gt;%
    head(n) %&amp;gt;%
    kable(format = &amp;quot;html&amp;quot;) %&amp;gt;%
    kable_styling(bootstrap_options = c(&amp;quot;striped&amp;quot;, &amp;quot;bordered&amp;quot;, &amp;quot;condensed&amp;quot;,
                                        &amp;quot;hover&amp;quot;, &amp;quot;responsive&amp;quot;),
                  full_width = FALSE)
  
  if(!is.null(cols_changed)){
    pretty_df &amp;lt;- pretty_df %&amp;gt;%
      column_spec(cols_changed, bold = T, color = &amp;quot;black&amp;quot;, background = &amp;quot;#C8FAE3&amp;quot;)
  }
  
  if(!is.null(rows_changed)){
    pretty_df &amp;lt;- pretty_df %&amp;gt;%
      row_spec(rows_changed, bold = T, color = &amp;quot;black&amp;quot;, background = &amp;quot;#C8FAE3&amp;quot;)
  }
  
  return(pretty_df)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm.data.frame %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28.801
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8425333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
779.4453
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30.332
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9240934
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.8530
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10267083
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
853.1007
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28.801
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8425333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
779.4453
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30.332
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9240934
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.8530
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10267083
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
853.1007
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34.020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11537966
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
836.1971
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36.088
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13079460
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
739.9811
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38.438
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14880372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
786.1134
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1982
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.854
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12881816
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
978.0114
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1987
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40.822
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13867957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
852.3959
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.674
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16317921
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
649.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.763
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22227415
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
635.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;sample-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sample Data&lt;/h2&gt;
&lt;p&gt;You’ll also see a toy data set for the introductory examples that start each section.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_countries &amp;lt;- c(&amp;quot;Tunisia&amp;quot;, &amp;quot;Nicaragua&amp;quot;, &amp;quot;Singapore&amp;quot;, &amp;quot;Hungary&amp;quot;,
                      &amp;quot;New Zealand&amp;quot;, &amp;quot;Nigeria&amp;quot;, &amp;quot;Brazil&amp;quot;, &amp;quot;Sri Lanka&amp;quot;,
                      &amp;quot;Ireland&amp;quot;, &amp;quot;Australia&amp;quot;)
  
sample_df &amp;lt;- gm_df %&amp;gt;%
  filter(year == 2007,
         country %in% sample_countries)

sample_df %&amp;gt;%     
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
81.235
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34435.367
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.390
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9065.801
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.338
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9956108
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18008.944
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78.885
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4109086
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40675.996
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80.204
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4115771
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25185.009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.899
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5675356
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2749.321
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
46.859
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
135031164
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2013.977
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79.972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4553009
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
47143.180
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.396
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20378239
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3970.095
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.923
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10276158
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7092.923
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tidy-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;“Tidy” Data&lt;/h1&gt;
&lt;p&gt;If you’re unsure of what “Tidy” data is actually describing and want to learn more, you can read Hadley Wickham’s article &lt;a href=&#34;http://vita.had.co.nz/papers/tidy-data.html&#34;&gt;here&lt;/a&gt;. Otherwise, these graphics are likely the most concise explanation you’ll find.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304415/tidy_data_u18bn6.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304416/tidy_data_2_mqba24.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304412/messy_tidy_qq4ba9.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;tibble&lt;/code&gt;s, &lt;code&gt;%&amp;gt;%&lt;/code&gt;, and the concept of tidy data covered, let’s take a dive.&lt;/p&gt;
&lt;div id=&#34;dplyr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;{dplyr}&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304410/dplyr_xbk3wo.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{dplyr}&lt;/code&gt; provides a grammar of data manipulation and a set of verb functions that solve most common data carpentry challenges in a consistent fashion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;glimpse()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mutate()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;summarize()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group_by()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;taking-a-glimpse&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Taking a &lt;code&gt;glimpse()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;In addition to the &lt;code&gt;summary()&lt;/code&gt;, &lt;code&gt;dim()&lt;/code&gt;ensions, and &lt;code&gt;str()&lt;/code&gt;ucture functions that can be used to inspect data, you can now use &lt;code&gt;{dplyr}&lt;/code&gt;’s &lt;code&gt;glimpse()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(gm.data.frame)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         country        continent        year         lifeExp     
##  Afghanistan:  12   Africa  :624   Min.   :1952   Min.   :23.60  
##  Albania    :  12   Americas:300   1st Qu.:1966   1st Qu.:48.20  
##  Algeria    :  12   Asia    :396   Median :1980   Median :60.71  
##  Angola     :  12   Europe  :360   Mean   :1980   Mean   :59.47  
##  Argentina  :  12   Oceania : 24   3rd Qu.:1993   3rd Qu.:70.85  
##  Australia  :  12                  Max.   :2007   Max.   :82.60  
##  (Other)    :1632                                                
##       pop              gdpPercap       
##  Min.   :6.001e+04   Min.   :   241.2  
##  1st Qu.:2.794e+06   1st Qu.:  1202.1  
##  Median :7.024e+06   Median :  3531.8  
##  Mean   :2.960e+07   Mean   :  7215.3  
##  3rd Qu.:1.959e+07   3rd Qu.:  9325.5  
##  Max.   :1.319e+09   Max.   :113523.1  
## &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(gm.data.frame)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1704    6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(gm.data.frame)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    1704 obs. of  6 variables:
##  $ country  : Factor w/ 142 levels &amp;quot;Afghanistan&amp;quot;,..: 1 1 1 1 1 1 1 1 1 1 ...
##  $ continent: Factor w/ 5 levels &amp;quot;Africa&amp;quot;,&amp;quot;Americas&amp;quot;,..: 3 3 3 3 3 3 3 3 3 3 ...
##  $ year     : int  1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...
##  $ lifeExp  : num  28.8 30.3 32 34 36.1 ...
##  $ pop      : int  8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...
##  $ gdpPercap: num  779 821 853 836 740 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(gm_df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 1,704
## Variables: 6
## $ country   &amp;lt;fct&amp;gt; Afghanistan, Afghanistan, Afghanistan, Afghanistan, ...
## $ continent &amp;lt;fct&amp;gt; Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia...
## $ year      &amp;lt;int&amp;gt; 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 1992...
## $ lifeExp   &amp;lt;dbl&amp;gt; 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39.8...
## $ pop       &amp;lt;int&amp;gt; 8425333, 9240934, 10267083, 11537966, 13079460, 1488...
## $ gdpPercap &amp;lt;dbl&amp;gt; 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, 78...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;select-columns&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;select()&lt;/code&gt; columns&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304413/select_dtuw73.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;quick-example&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Quick Example&lt;/h2&gt;
&lt;div id=&#34;initial-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
81.235
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34435.367
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.390
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9065.801
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.338
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9956108
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18008.944
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78.885
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4109086
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40675.996
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80.204
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4115771
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25185.009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.899
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5675356
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2749.321
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
46.859
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
135031164
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2013.977
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79.972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4553009
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
47143.180
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.396
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20378239
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3970.095
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.923
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10276158
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7092.923
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;end-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;End Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, pop) %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9956108
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4109086
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4115771
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5675356
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
135031164
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4553009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20378239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10276158
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;code&gt;select()&lt;/code&gt; family is used to choose columns to keep. You can use bare (unquoted) names.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; columns by specific names.
&lt;ul&gt;
&lt;li&gt;select only &lt;code&gt;gm_df&lt;/code&gt;’s &lt;code&gt;country&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; columns&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  select(country, year, pop) %&amp;gt;%            # select columns by specific names
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8425333
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9240934
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10267083
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11537966
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13079460
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14880372
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1982
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12881816
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1987
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13867957
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16317921
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22227415
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; a range of columns by name
&lt;ul&gt;
&lt;li&gt;select &lt;code&gt;gm_df&lt;/code&gt;’s &lt;code&gt;continent&lt;/code&gt; column and all columns from &lt;code&gt;lifeExp&lt;/code&gt; to &lt;code&gt;gdpPercap&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  select(continent, lifeExp:gdpPercap) %&amp;gt;%  # select columns name range
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28.801
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8425333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
779.4453
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30.332
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9240934
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.8530
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10267083
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
853.1007
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34.020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11537966
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
836.1971
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36.088
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13079460
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
739.9811
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38.438
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14880372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
786.1134
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.854
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12881816
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
978.0114
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40.822
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13867957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
852.3959
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.674
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16317921
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
649.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.763
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22227415
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
635.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;de&lt;code&gt;select()&lt;/code&gt; a column with &lt;code&gt;-&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; all of &lt;code&gt;gm_df&lt;/code&gt;’s columns except &lt;code&gt;lifeExp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  select(-lifeExp) %&amp;gt;%                      # deselect column by name
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8425333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
779.4453
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9240934
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.8530
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10267083
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
853.1007
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11537966
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
836.1971
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13079460
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
739.9811
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14880372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
786.1134
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1982
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12881816
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
978.0114
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1987
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13867957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
852.3959
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16317921
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
649.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22227415
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
635.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;de&lt;code&gt;select()&lt;/code&gt; a range of columns by name
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; all of &lt;code&gt;gm_df&lt;/code&gt;’s columns except those between &lt;code&gt;lifeExp&lt;/code&gt; and &lt;code&gt;gdpPercap&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  select(-c(lifeExp:gdpPercap)) %&amp;gt;%         # deselect column by name range
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1982
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1987
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1992
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1997
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; column by index
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt;’s &lt;code&gt;4&lt;/code&gt;th column&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  select(4) %&amp;gt;%                             # select column by index
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28.801
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30.332
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.997
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34.020
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36.088
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38.438
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.854
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40.822
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.674
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.763
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;de&lt;code&gt;select()&lt;/code&gt; a column by index
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; all of &lt;code&gt;gm_df&lt;/code&gt;’s columns except for the &lt;code&gt;4&lt;/code&gt;th column&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  select(-4) %&amp;gt;%                         # deselect column by index
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8425333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
779.4453
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9240934
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.8530
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10267083
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
853.1007
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11537966
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
836.1971
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13079460
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
739.9811
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14880372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
786.1134
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1982
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12881816
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
978.0114
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1987
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13867957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
852.3959
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16317921
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
649.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22227415
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
635.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;de&lt;code&gt;select()&lt;/code&gt; a range of columns by index
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; all of &lt;code&gt;gm_df&lt;/code&gt;’s columns except those between the &lt;code&gt;3&lt;/code&gt;rd and &lt;code&gt;5&lt;/code&gt;th columns&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  select(-c(3:5)) %&amp;gt;%                    # deselect columns by index range
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
779.4453
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.8530
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
853.1007
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
836.1971
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
739.9811
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
786.1134
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
978.0114
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
852.3959
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
649.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
635.3414
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot-exercise-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;ggplot()&lt;/code&gt; Exercise 1&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;{ggplot2}&lt;/code&gt; is monster of a package used for data visualization that follows &lt;a href=&#34;https://www.amazon.com/Grammar-Graphics-Statistics-Computing/dp/0387245448&#34;&gt;The Grammar of Graphics&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{ggplot2}&lt;/code&gt; takes R’s powerful graphics capabilities and makes them more accessible by taking care of many plotting tasks that are often tedious, while still allowing for lower-level customization.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic Setup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304410/ggplot_exercise_1_zaiiv1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ggplot(&lt;/code&gt;&lt;em&gt;your data&lt;/em&gt;&lt;code&gt;, aes(x =&lt;/code&gt;&lt;em&gt;x values&lt;/em&gt;&lt;code&gt;, y =&lt;/code&gt;&lt;em&gt;y values&lt;/em&gt;&lt;code&gt;)) +&lt;/code&gt; &lt;br&gt; &lt;code&gt;geom_boxplot()&lt;/code&gt; &lt;em&gt;the type of plot geometry desired&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Steps&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Using &lt;code&gt;gm_df&lt;/code&gt;, select the &lt;code&gt;lifeExp&lt;/code&gt; column&lt;/li&gt;
&lt;li&gt;Pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) the result to &lt;code&gt;ggplot()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the plot’s &lt;code&gt;aes()&lt;/code&gt;thetic values
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lifeExp&lt;/code&gt; for the &lt;code&gt;x&lt;/code&gt; values
&lt;ul&gt;
&lt;li&gt;a histogram’s &lt;code&gt;y&lt;/code&gt; are counts of its &lt;code&gt;x&lt;/code&gt; values, so we don’t provide them here&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;geom_histogram()&lt;/code&gt; as the geometry of the plot&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%                                     # data frame: Data
  select(lifeExp) %&amp;gt;%                         # columns to keep: Data
  ggplot(aes(x = lifeExp)) +                  # x values: Aesthetics
  geom_histogram()                            # histogram: Geometries&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-39&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2018-03-15-tidyverse-getting-your-feet-wet_files/figure-html/unnamed-chunk-39-1.png&#34; alt=&#34;Figure 1&#34; width=&#34;1056&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Figure 1
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;filter-rows&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;filter()&lt;/code&gt; Rows&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304410/filter_rbnuxp.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;quick-example-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Quick Example&lt;/h2&gt;
&lt;div id=&#34;initial-data-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, lifeExp) %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
81.235
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.390
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.338
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78.885
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80.204
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.899
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
46.859
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79.972
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.396
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.923
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;end-data-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;End Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, lifeExp) %&amp;gt;%
  filter(lifeExp &amp;gt; 75) %&amp;gt;%
  prettify(cols_changed = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
81.235
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
78.885
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
80.204
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
79.972
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Use &lt;code&gt;filter()&lt;/code&gt; to select rows using logic. Rows where a logical expression returns &lt;code&gt;TRUE&lt;/code&gt; are kept and others are dropped.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; rows where &lt;code&gt;numeric()&lt;/code&gt; values are greater or lesser than another value
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt; to only keep rows where &lt;code&gt;gdpPercap &amp;lt; 500&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  filter(gdpPercap &amp;lt; 500) %&amp;gt;%
  prettify(cols_changed = 6)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Burundi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.031
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2445618
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
339.2965
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Burundi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40.533
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2667518
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
379.5646
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Burundi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
42.045
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2961915
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
355.2032
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Burundi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43.548
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3330989
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
412.9775
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Burundi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
44.057
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3529983
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
464.0995
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Burundi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
45.326
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6121610
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
463.1151
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Burundi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2002
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
47.360
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7021078
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
446.4035
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Burundi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
49.580
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8390505
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
430.0707
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Cambodia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.417
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4693836
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
368.4693
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Cambodia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.366
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5322536
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
434.0383
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; rows using multiple logical expressions where all must be &lt;code&gt;TRUE&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt; to only keep rows where &lt;code&gt;year &amp;gt; 1990&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;lifeExp &amp;lt; 40&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;,&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; are evaluated identically in &lt;code&gt;filter()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  filter(year &amp;gt; 1990, lifeExp &amp;lt; 40) %&amp;gt;%
  prettify(cols_changed = 3:4)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Rwanda
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
23.599
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7290203
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
737.0686
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Rwanda
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
36.087
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7212583
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
589.9445
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sierra Leone
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
38.333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4260884
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1068.6963
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sierra Leone
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
39.897
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4578212
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
574.6482
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Somalia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
39.658
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6099799
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
926.9603
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swaziland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
39.613
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1133066
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4513.4806
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Zambia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2002
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
39.193
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10595811
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1071.6139
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Zimbabwe
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2002
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
39.989
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11926563
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
672.0386
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; rows using multiple logical expressions where one must be &lt;code&gt;TRUE&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt; to only keep rows where &lt;code&gt;pop &amp;lt; 10000&lt;/code&gt; &lt;em&gt;or&lt;/em&gt; &lt;code&gt;gdpPercap &amp;gt; 100000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; means &lt;em&gt;or&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  filter(pop &amp;lt; 10000 | gdpPercap &amp;gt; 100000) %&amp;gt;%
  prettify(cols_changed = 5:6)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kuwait
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
55.565
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
160000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
108382.4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kuwait
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58.033
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
212846
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
113523.1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kuwait
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
67.712
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
841934
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
109347.9
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; rows using a string
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt; to only keep rows where &lt;code&gt;year&lt;/code&gt; is &lt;code&gt;1999&lt;/code&gt; and &lt;code&gt;continent&lt;/code&gt; is &lt;code&gt;&amp;quot;Europe&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;==&lt;/code&gt; means &lt;em&gt;is equal to&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  filter(year == 1997 &amp;amp; continent == &amp;quot;Europe&amp;quot;) %&amp;gt;%
  prettify(cols_changed = 2:3)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Albania
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.950
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3428038
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3193.055
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Austria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
77.510
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8069876
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29095.921
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Belgium
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
77.530
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10199787
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27561.197
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Bosnia and Herzegovina
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.244
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3607000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4766.356
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Bulgaria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.320
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8066057
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5970.389
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Croatia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.680
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4444595
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9875.605
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Czech Republic
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
74.010
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10300707
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16048.514
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Denmark
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
76.110
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5283663
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29804.346
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Finland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
77.130
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5134406
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
23723.950
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
France
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78.640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58623428
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25889.785
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot-exercise-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;ggplot()&lt;/code&gt; Exercise 2&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304410/filter_rbnuxp.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Steps&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Using &lt;code&gt;gm_df&lt;/code&gt;, select the &lt;code&gt;continent&lt;/code&gt;, &lt;code&gt;country&lt;/code&gt;, and &lt;code&gt;gdpPercap&lt;/code&gt; columns&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; the rows to only keep those where &lt;code&gt;continent == &amp;quot;Oceania&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) the result to &lt;code&gt;ggplot()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the plot’s &lt;code&gt;aes()&lt;/code&gt;thetic values
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;country&lt;/code&gt; for the &lt;code&gt;x&lt;/code&gt; values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gdpPercap&lt;/code&gt; for the &lt;code&gt;y&lt;/code&gt; values&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;geom_boxplot()&lt;/code&gt; as the geometry of the plot&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%                                         # data frame: Data
  select(continent, country, gdpPercap) %&amp;gt;%       # columns to keep: Data
  filter(continent == &amp;quot;Oceania&amp;quot;) %&amp;gt;%              # rows to keep: Data
  ggplot(aes(x = country, y = gdpPercap)) +       # x and y values: Aesthetics
  geom_boxplot()                                  # box plot: Geometries&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-15-tidyverse-getting-your-feet-wet_files/figure-html/unnamed-chunk-48-1.png&#34; width=&#34;1056&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;mutate-columns&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;mutate()&lt;/code&gt; Columns&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304413/mutate_cskmnx.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;quick-example-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Quick Example&lt;/h2&gt;
&lt;div id=&#34;initial-data-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, pop) %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9956108
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4109086
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4115771
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5675356
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
135031164
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4553009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20378239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10276158
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;end-data-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;End Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, pop) %&amp;gt;%
  mutate(pop_in_thousands = pop / 1000) %&amp;gt;%
  prettify(cols_changed = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop_in_thousands
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
20434.176
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
190010.647
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9956108
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
9956.108
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4109086
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
4109.086
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4115771
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
4115.771
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5675356
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
5675.356
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
135031164
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
135031.164
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4553009
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
4553.009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20378239
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
20378.239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10276158
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
10276.158
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Use &lt;code&gt;mutate()&lt;/code&gt; to manipulate column values and create new columns.&lt;/p&gt;
&lt;p&gt;In order to &lt;code&gt;mutate()&lt;/code&gt; a column, use the name of the column you are manipulating and set its value using &lt;code&gt;=&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here’s a silly example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a new column to &lt;code&gt;gm_df&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mutate()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt; to create a column named &lt;code&gt;planet&lt;/code&gt; and set its value to &lt;code&gt;&amp;quot;Earth&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  mutate(planet = &amp;quot;Earth&amp;quot;) %&amp;gt;%
  prettify(cols_changed = 7)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
planet
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28.801
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8425333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
779.4453
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30.332
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9240934
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.8530
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10267083
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
853.1007
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34.020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11537966
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
836.1971
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36.088
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13079460
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
739.9811
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38.438
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14880372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
786.1134
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1982
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.854
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12881816
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
978.0114
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1987
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40.822
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13867957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
852.3959
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.674
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16317921
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
649.3414
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.763
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22227415
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
635.3414
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Earth
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Since we have &lt;code&gt;gdpPercap&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt;, we can calculate the values for a &lt;code&gt;total_GDP&lt;/code&gt; column.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mutate()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt; to set the results of a calculation on each row to a new column
&lt;ul&gt;
&lt;li&gt;multiply &lt;code&gt;pop * gdpPercap&lt;/code&gt; and assign the result to &lt;code&gt;total_GDP&lt;/code&gt; inside &lt;code&gt;mutate()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  mutate(total_GDP = pop * gdpPercap) %&amp;gt;%
  prettify(cols_changed = 7)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
total_GDP
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28.801
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8425333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
779.4453
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
6567086330
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30.332
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9240934
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.8530
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
7585448670
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10267083
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
853.1007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
8758855797
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34.020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11537966
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
836.1971
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
9648014150
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36.088
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13079460
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
739.9811
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
9678553274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38.438
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14880372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
786.1134
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
11697659231
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1982
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.854
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12881816
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
978.0114
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
12598563401
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1987
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40.822
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13867957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
852.3959
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
11820990309
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1992
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.674
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16317921
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
649.3414
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
10595901589
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1997
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.763
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22227415
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
635.3414
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
14121995875
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Typically, &lt;code&gt;mutate()&lt;/code&gt; is used to perform operations across columns in each individual row. You can also use &lt;em&gt;summary functions&lt;/em&gt; to perform operations on individual columns (acting as vectors) that result in a vector that can be assigned to a column.&lt;/p&gt;
&lt;p&gt;Makes sense, right??&lt;/p&gt;
&lt;p&gt;Let’s calculate the &lt;em&gt;z-score&lt;/em&gt; of each &lt;code&gt;gdpPercap&lt;/code&gt; value for a specific year.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ z = \frac {x_i -\mu_x} {\sigma_x}\]&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; = &lt;code&gt;gdpPercap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu_x\)&lt;/span&gt; = the mean of &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; = &lt;code&gt;mean(gdpPercap)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma_x\)&lt;/span&gt; = the standard deviation of x = &lt;code&gt;sd(gdpPercap)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Use a &lt;em&gt;summary function&lt;/em&gt; to perform a a calculation involving summary statistics of a column
&lt;ul&gt;
&lt;li&gt;subtract &lt;code&gt;mean(gdpPercap)&lt;/code&gt; from &lt;code&gt;gdpPercap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;divide the result by &lt;code&gt;sd(gdpPercap)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;set the results as the values of a new column called &lt;code&gt;gdp_per_cap_z_score&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  filter(year == 1977) %&amp;gt;%
  mutate(gdp_per_cap_z_score = (gdpPercap - mean(gdpPercap)) / sd(gdpPercap)) %&amp;gt;%
  prettify(cols_changed = 7)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdp_per_cap_z_score
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38.438
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14880372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
786.1134
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
-0.7805156
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Albania
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
68.930
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2509048
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3533.0039
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
-0.4520380
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Algeria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58.014
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17152804
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4910.4168
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
-0.2873247
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Angola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.483
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6162675
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3008.6474
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
-0.5147414
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Argentina
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
68.481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26983828
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10079.0267
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
0.3307461
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.490
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14074100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18334.1975
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1.3179128
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Austria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.170
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7568430
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19749.4223
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1.4871476
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Bahrain
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
65.593
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
297410
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19340.1020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1.4382004
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Bangladesh
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
46.923
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80428306
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
659.8772
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
-0.7956111
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Belgium
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9821800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19117.9745
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
1.4116381
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Here are other functions that can be used similarly:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Summary Functions&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;first()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;last()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;nth()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mean()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;n()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;median()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;n_distinct()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;IQR()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sd()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot-exercise-3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;ggplot()&lt;/code&gt; Exercise 3&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304410/ggplot_exercise_1_zaiiv1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Steps&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Using &lt;code&gt;gm_df&lt;/code&gt;, &lt;code&gt;select()&lt;/code&gt; &lt;code&gt;country&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, and &lt;code&gt;gdpPercap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; the rows to keep only those where &lt;code&gt;country&lt;/code&gt; is &lt;code&gt;&amp;quot;Korea, Rep.&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;Korea, Dem. Rep.&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;Japan&amp;quot;&lt;/code&gt;, or &lt;code&gt;&amp;quot;China&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pipe the result to &lt;code&gt;ggplot()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the plot’s &lt;code&gt;aes()&lt;/code&gt;thetic values
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt; for the &lt;code&gt;x&lt;/code&gt; values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gdpPercap&lt;/code&gt; for the &lt;code&gt;y&lt;/code&gt; values&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;country&lt;/code&gt; for the &lt;code&gt;color&lt;/code&gt; values&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;geom_line()&lt;/code&gt; as the geometry of the plot&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;title&lt;/code&gt; to the plot with &lt;code&gt;labs()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  filter(country %in% c(&amp;quot;Korea, Rep.&amp;quot;, &amp;quot;Korea, Dem. Rep.&amp;quot;, &amp;quot;Japan&amp;quot;, &amp;quot;China&amp;quot;)) %&amp;gt;%
  mutate(total_GDP = pop * gdpPercap) %&amp;gt;%
  ggplot(aes(x = year, y = gdpPercap, color = country)) +
  geom_line() +
  labs(title = &amp;quot;GDP Over Time&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-15-tidyverse-getting-your-feet-wet_files/figure-html/unnamed-chunk-56-1.png&#34; width=&#34;1056&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;arrange-rows&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;arrange()&lt;/code&gt; Rows&lt;/h1&gt;
&lt;div id=&#34;quick-example-3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Quick Example&lt;/h2&gt;
&lt;div id=&#34;initial-data-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, gdpPercap) %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34435.367
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9065.801
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18008.944
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40675.996
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25185.009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2749.321
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2013.977
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
47143.180
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3970.095
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7092.923
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;end-data-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;End Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, gdpPercap)%&amp;gt;%
  arrange(gdpPercap) %&amp;gt;%
  prettify(cols_changed = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2013.977
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2749.321
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
3970.095
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
7092.923
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
9065.801
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
18008.944
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
25185.009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
34435.367
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
40675.996
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
47143.180
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Use &lt;code&gt;arrange()&lt;/code&gt; to sort rows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; by ascending number (smallest to largest)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt;’s &lt;code&gt;pop&lt;/code&gt; column so that smallest populations are on top&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  arrange(pop) %&amp;gt;%
  prettify(cols_changed = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sao Tome and Principe
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
46.471
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
60011
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
879.5836
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sao Tome and Principe
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
48.945
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
61325
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
860.7369
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Djibouti
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34.812
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
63149
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2669.5295
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sao Tome and Principe
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
51.893
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
65345
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1071.5511
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sao Tome and Principe
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
54.425
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
70787
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1384.8406
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Djibouti
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1957
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37.328
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
71851
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2864.9691
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sao Tome and Principe
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
56.480
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
76595
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1532.9853
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sao Tome and Principe
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1977
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58.550
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
86796
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1737.5617
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Djibouti
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1962
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39.693
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
89898
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3020.9893
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sao Tome and Principe
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1982
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60.351
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
98593
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1890.2181
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; by &lt;code&gt;desc()&lt;/code&gt; number (largest to smallest)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; the &lt;code&gt;lifeExp&lt;/code&gt; column so that largest values are on top&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  arrange(desc(lifeExp)) %&amp;gt;%
  prettify(cols_changed = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Japan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
82.603
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
127467972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31656.07
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hong Kong, China
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
82.208
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6980412
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39724.98
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Japan
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2002
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
82.000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
127065841
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28604.59
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Iceland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
81.757
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
301931
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36180.79
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Switzerland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
81.701
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7554661
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37506.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hong Kong, China
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2002
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
81.495
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6762476
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30209.02
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
81.235
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34435.37
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Spain
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
80.941
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40448191
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28821.06
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sweden
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
80.884
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9031088
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33859.75
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Israel
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
80.745
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6426679
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25523.28
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; alphabetically
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; &lt;code&gt;gm_df&lt;/code&gt; to keep only those rows where &lt;code&gt;year == 2007&lt;/code&gt; and &lt;code&gt;continent == &amp;quot;Americas&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arrange()&lt;/code&gt; the &lt;code&gt;country&lt;/code&gt; column alphabetically&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  filter(year == 2007, continent == &amp;quot;Americas&amp;quot;) %&amp;gt;%
  arrange(country) %&amp;gt;%
  prettify(cols_changed = 2:3)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gdpPercap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Argentina
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
75.320
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
40301927
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12779.380
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Bolivia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
65.554
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9119152
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3822.137
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.390
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9065.801
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Canada
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80.653
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33390141
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36319.235
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Chile
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78.553
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16284741
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13171.639
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Colombia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.889
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
44227550
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7006.580
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Costa Rica
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78.782
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4133884
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9645.061
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Cuba
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78.273
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11416987
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8948.103
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Dominican Republic
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.235
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9319622
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6025.375
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ecuador
&lt;/td&gt;
&lt;td style=&#34;text-align:left;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
2007
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
74.994
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13755680
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6873.262
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;group_by-for-grouped-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;group_by()&lt;/code&gt; for Grouped Data&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304412/group_by_oex4zw.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;quick-example-4&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Quick Example&lt;/h2&gt;
&lt;div id=&#34;initial-data-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, continent, pop) %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9956108
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4109086
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4115771
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5675356
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
135031164
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4553009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20378239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10276158
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;end-data-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;End Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, continent, pop) %&amp;gt;%
  group_by(continent) %&amp;gt;%
  mutate(pop_by_continent = sum(pop)) %&amp;gt;%
  ungroup() %&amp;gt;%
  arrange(pop_by_continent) %&amp;gt;%
  prettify(cols_changed = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop_by_continent
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9956108
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
14065194
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4109086
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
14065194
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
24549947
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4115771
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
24549947
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4553009
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
24931248
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20378239
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
24931248
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
135031164
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
145307322
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10276158
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
145307322
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
195686003
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5675356
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
195686003
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;group_by()&lt;/code&gt; allows us to group rows together based on column values.&lt;/p&gt;
&lt;p&gt;Let’s say we wanted to compute summary values for each country for all years.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calculate the &lt;code&gt;mean_gdp_per_cap&lt;/code&gt; of each &lt;code&gt;country&lt;/code&gt; with &lt;code&gt;group_by()&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;take &lt;code&gt;gm_df&lt;/code&gt; and &lt;code&gt;group_by()&lt;/code&gt; &lt;code&gt;country&lt;/code&gt; to group rows of the same country together&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;mean()&lt;/code&gt; to calculate the &lt;code&gt;mean_gdp_per_cap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ungroup()&lt;/code&gt; the rows
&lt;ul&gt;
&lt;li&gt;a habit you want&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;keep only those rows with &lt;code&gt;distinct()&lt;/code&gt; combinations of &lt;code&gt;country&lt;/code&gt; and &lt;code&gt;mean_gdp_per_cap&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;distinct()&lt;/code&gt;’s default is to only keep columns used as arguments&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  group_by(country) %&amp;gt;%
  mutate(mean_gdp_per_cap = median(gdpPercap)) %&amp;gt;% 
  ungroup() %&amp;gt;%
  distinct(country, mean_gdp_per_cap) %&amp;gt;% 
  prettify(cols_changed = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
mean_gdp_per_cap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Afghanistan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
803.4832
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Albania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
3253.2384
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Algeria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
4853.8559
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Angola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
3264.6288
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Argentina
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
9068.7844
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
18905.6034
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Austria
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
20673.2530
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Bahrain
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
18779.8016
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Bangladesh
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
703.7638
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Belgium
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
20048.9102
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot-exercise-4&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;ggplot()&lt;/code&gt; Exercise 4&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304410/ggplot_exercise_1_zaiiv1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Steps&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Using &lt;code&gt;gm_df&lt;/code&gt;, &lt;code&gt;group_by()&lt;/code&gt; the &lt;code&gt;continent&lt;/code&gt; and &lt;code&gt;year&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mutate()&lt;/code&gt; to add a column called &lt;code&gt;mean_gdp&lt;/code&gt; for the average GDP of each continent&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ungroup()&lt;/code&gt; the data, because this is a habit that will save you headaches later&lt;/li&gt;
&lt;li&gt;Keep only &lt;code&gt;distinct()&lt;/code&gt; combinations of &lt;code&gt;continent&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, and &lt;code&gt;mean_gdp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pipe the result to &lt;code&gt;ggplot()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the plot’s &lt;code&gt;aes()&lt;/code&gt;thetic values
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt; for the &lt;code&gt;x&lt;/code&gt; values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mean_gdp&lt;/code&gt; for the &lt;code&gt;y&lt;/code&gt; values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;continent&lt;/code&gt; for the &lt;code&gt;color&lt;/code&gt; values&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;geom_line()&lt;/code&gt; as the geometry of the plot&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;title&lt;/code&gt; and a &lt;code&gt;caption&lt;/code&gt; (for the source of the data) to the plot with &lt;code&gt;labs()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  group_by(year, continent) %&amp;gt;%
  mutate(mean_gdp = mean(gdpPercap)) %&amp;gt;%
  ungroup() %&amp;gt;%
  distinct(continent, year, mean_gdp) %&amp;gt;%
  ggplot(aes(x = year, y = mean_gdp, color = continent)) +
  geom_line() +
  labs(title = &amp;quot;Mean GDPs by Continent Over Time&amp;quot;,
       caption = &amp;quot;Source: Free material from www.gapminder.org&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-15-tidyverse-getting-your-feet-wet_files/figure-html/unnamed-chunk-67-1.png&#34; width=&#34;1056&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;summarize&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;summarize()&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304414/summarize_tq1nfp.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;quick-example-5&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Quick Example&lt;/h2&gt;
&lt;div id=&#34;initial-data-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, continent, lifeExp, pop) %&amp;gt;%
  prettify()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
country
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lifeExp
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Australia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
81.235
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20434176
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Brazil
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.390
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
190010647
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hungary
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.338
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9956108
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ireland
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78.885
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4109086
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Zealand
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80.204
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4115771
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nicaragua
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.899
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5675356
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nigeria
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
46.859
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
135031164
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Singapore
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79.972
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4553009
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sri Lanka
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.396
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20378239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tunisia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
73.923
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10276158
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_df %&amp;gt;%
  select(country, continent, lifeExp, pop) %&amp;gt;%
  group_by(continent) %&amp;gt;%
  summarise(max_pop = max(pop),
            mean_life_exp = mean(lifeExp)) %&amp;gt;%
  prettify(cols_changed = 2:3)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
max_pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
mean_life_exp
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
135031164
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
60.3910
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
190010647
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
72.6445
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
20378239
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
76.1840
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
9956108
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
76.1115
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
20434176
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
80.7195
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now that we know how to use &lt;code&gt;group_by()&lt;/code&gt;, we can &lt;code&gt;summarize()&lt;/code&gt; data by group. This can be done using all of the &lt;em&gt;summary functions&lt;/em&gt; seen earlier.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Summary Functions&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;first()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;last()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;nth()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mean()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;n()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;median()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;n_distinct()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;IQR()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sd()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Calculate some summary statistics for each continent.
&lt;ul&gt;
&lt;li&gt;take &lt;code&gt;gm_df&lt;/code&gt; and &lt;code&gt;group_by()&lt;/code&gt; &lt;code&gt;continent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;using &lt;code&gt;summarize()&lt;/code&gt; or &lt;code&gt;summarise()&lt;/code&gt;, calculate:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;count&lt;/code&gt; with &lt;code&gt;n()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mean_pop&lt;/code&gt; with &lt;code&gt;mean()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_gdp_per_cap&lt;/code&gt; with &lt;code&gt;max()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  group_by(continent) %&amp;gt;%
  summarise(count = n(),
            mean_pop = mean(pop),
            max_gdp_per_cap = max(gdpPercap)) %&amp;gt;%
  prettify(cols_changed = 2:4)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-bordered table-condensed table-hover table-responsive&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
continent
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
count
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
mean_pop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
max_gdp_per_cap
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Africa
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
624
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
9916003
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
21951.21
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Americas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
24504795
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
42951.65
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
396
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
77038722
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
113523.13
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Europe
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
360
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
17169765
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
49357.19
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oceania
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
8874672
&lt;/td&gt;
&lt;td style=&#34;text-align:right;font-weight: bold;color: black;background-color: #C8FAE3;&#34;&gt;
34435.37
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot-exercise-5&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;ggplot()&lt;/code&gt; Exercise 5&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521304410/ggplot_layers_all_qdmz44.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Steps&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Using &lt;code&gt;gm_df&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt; the data to remove rows where &lt;code&gt;continent&lt;/code&gt; is not &lt;code&gt;&amp;quot;Oceania&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group_by()&lt;/code&gt; &lt;code&gt;continent&lt;/code&gt; and &lt;code&gt;year&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;summarize()&lt;/code&gt; the groups by calculating them &lt;code&gt;mean()&lt;/code&gt; of &lt;code&gt;pop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ungroup()&lt;/code&gt; the data, because this is a habit that will save you headaches later&lt;/li&gt;
&lt;li&gt;Pipe the results to &lt;code&gt;ggplot()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the plot’s &lt;code&gt;aes()&lt;/code&gt;thetics
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt; for the &lt;code&gt;x&lt;/code&gt; values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mean_pop&lt;/code&gt; for the &lt;code&gt;y&lt;/code&gt; values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;continent&lt;/code&gt; for the &lt;code&gt;color&lt;/code&gt; values&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;geom_line()&lt;/code&gt; for the first geometry&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;geom_point()&lt;/code&gt; for the second geometry&lt;/li&gt;
&lt;li&gt;Change the theme by adding &lt;code&gt;theme_minimal()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;facet_wrap()&lt;/code&gt;, split the plot into panels for each &lt;code&gt;continent&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt; is used as a &lt;code&gt;formula&lt;/code&gt; to select the facet variable&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;title&lt;/code&gt; and a &lt;code&gt;caption&lt;/code&gt; with &lt;code&gt;labs()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gm_df %&amp;gt;%
  filter(continent != &amp;quot;Oceania&amp;quot;) %&amp;gt;%
  group_by(continent, year) %&amp;gt;%
  summarise(mean_pop = mean(pop)) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(x = year, y = mean_pop,
             color = continent)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  facet_wrap(~ continent) +
  labs(title = &amp;quot;Mean Continent Populations over Time&amp;quot;,
       caption = &amp;quot;Source: Free material from www.gapminder.org&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-15-tidyverse-getting-your-feet-wet_files/figure-html/unnamed-chunk-73-1.png&#34; width=&#34;1056&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;النهاية&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.5.1 (2018-07-02)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 17134)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] bindrcpp_0.2.2       kableExtra_0.9.0     knitr_1.20.8        
##  [4] gapminder_0.3.0      forcats_0.3.0        stringr_1.3.1       
##  [7] dplyr_0.7.6          purrr_0.2.5          readr_1.1.1         
## [10] tidyr_0.8.1          tibble_1.4.2.9004    ggplot2_3.0.0.9000  
## [13] tidyverse_1.2.1.9000
## 
## loaded via a namespace (and not attached):
##  [1] tidyselect_0.2.4  xfun_0.3          reshape2_1.4.3   
##  [4] haven_1.1.2       lattice_0.20-35   colorspace_1.3-2 
##  [7] viridisLite_0.3.0 htmltools_0.3.6   yaml_2.1.19      
## [10] utf8_1.1.4        rlang_0.2.1       pillar_1.3.0.9000
## [13] withr_2.1.2       foreign_0.8-70    glue_1.2.0       
## [16] modelr_0.1.2      readxl_1.1.0      bindr_0.1.1      
## [19] plyr_1.8.4        munsell_0.5.0     blogdown_0.7.1   
## [22] gtable_0.2.0      cellranger_1.1.0  rvest_0.3.2      
## [25] codetools_0.2-15  psych_1.8.4       evaluate_0.10.1  
## [28] labeling_0.3      parallel_3.5.1    fansi_0.2.3      
## [31] highr_0.7         broom_0.4.5       Rcpp_0.12.17     
## [34] scales_0.5.0.9000 jsonlite_1.5      mnormt_1.5-5     
## [37] hms_0.4.2         digest_0.6.15     stringi_1.2.3    
## [40] bookdown_0.7      grid_3.5.1        cli_1.0.0        
## [43] tools_3.5.1       magrittr_1.5      lazyeval_0.2.1   
## [46] crayon_1.3.4      pkgconfig_2.0.1   xml2_1.2.0       
## [49] lubridate_1.7.4   assertthat_0.2.0  rmarkdown_1.10.7 
## [52] httr_1.3.1        rstudioapi_0.7    htmldeps_0.1.0   
## [55] R6_2.2.2          nlme_3.1-137      compiler_3.5.1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My Shiny Apps</title>
      <link>/page/projects/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/page/projects/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://bknapp.shinyapps.io/recon/&#34;&gt;recon : Really Convenient Spatial Data&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search for locations by class or with a fuzzy name matching gazetteer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521317064/recon_mp6q3x.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://bknapp.shinyapps.io/imagecrawler/&#34;&gt;Deep Learning Image Classifier&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TensorFlow-powered image classification.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521317572/imagecrawler_ofvc9e.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://bknapp.shinyapps.io/dprk/&#34;&gt;North Korea Threat Finance Explorer&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A tool to facilitate access to DPRK sanctions data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1521316059/nktfe_nwdc95.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GDELT, Missiles, and Image Collection</title>
      <link>/2018/01/collecting-a-data-set-of-missile-images-with-gdelt/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/collecting-a-data-set-of-missile-images-with-gdelt/</guid>
      <description>&lt;p&gt;The Global Database of Events, Language, and Tone, or &lt;a href=&#34;https://www.gdeltproject.org/2&#34;&gt;GDELT&lt;/a&gt;, is “a realtime network diagram and database of global human society for open research”.&lt;/p&gt;
&lt;p&gt;The potential for a firehose stream of global data has tantalizing possibilities for research, but concrete examples of work beyond simple evaluations of the database’s capabilities are notably absent…&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My &lt;strong&gt;hasty&lt;/strong&gt; walkthrough from November 2017, &lt;a href=&#34;http://rpubs.com/BrendanKnapp/GDELT_Syrian_Conflict&#34;&gt;&lt;em&gt;Evaluating GDELT: Syrian Conflict&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s see how well we can scoop up a set of ballistic missile images using a combination of packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gdeltr2&lt;/code&gt;: a package that is decidedly buggy, but works for these purposes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tidyverse&lt;/code&gt; suite:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dplyr&lt;/code&gt; for data carpentry&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stringr&lt;/code&gt; for string processing&lt;/li&gt;
&lt;li&gt;&lt;code&gt;purrr&lt;/code&gt; for functional enhancements and simplified error-handling&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;knitr&lt;/code&gt; for nicely rendered tabular data&lt;/li&gt;
&lt;li&gt;&lt;code&gt;imager&lt;/code&gt; for slick image processing tools&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gdeltr2)       # devtools::install_github(&amp;quot;abresler/gdeltr2&amp;quot;)
library(tidyverse)     # install.packages(&amp;quot;tidyverse&amp;quot;)
library(knitr)
library(imager)        # install.packages(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before we start extracting any data, let’s refine our search as much as possible by assigning a handful of variables that we can use in the API call.&lt;/p&gt;
&lt;p&gt;GDELT uses a set of codebooks that can be referenced with &lt;code&gt;get_gdelt_codebook_ft_api()&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;query-variables&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Query Variables&lt;/h1&gt;
&lt;div id=&#34;languages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Languages&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gdeltr2&lt;/code&gt; will only query English articles by default, but we don’t really care about the language of the article or even the article text&lt;/p&gt;
&lt;p&gt;We’ll &lt;code&gt;pull()&lt;/code&gt; all the languages from &lt;code&gt;code_book = &amp;quot;languages&amp;quot;&lt;/code&gt; into a &lt;code&gt;vector&lt;/code&gt; variable that we can use as a search argument like so:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;langs &amp;lt;- get_gdelt_codebook_ft_api(code_book = &amp;quot;languages&amp;quot;) %&amp;gt;%
  pull(value)

langs&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Afrikaans&amp;quot;        &amp;quot;Albanian&amp;quot;         &amp;quot;Arabic&amp;quot;          
##  [4] &amp;quot;Armenian&amp;quot;         &amp;quot;Azerbaijani&amp;quot;      &amp;quot;Bengali&amp;quot;         
##  [7] &amp;quot;Bosnian&amp;quot;          &amp;quot;Bulgarian&amp;quot;        &amp;quot;Catalan&amp;quot;         
## [10] &amp;quot;Chinese&amp;quot;          &amp;quot;Croatian&amp;quot;         &amp;quot;Czech&amp;quot;           
## [13] &amp;quot;Danish&amp;quot;           &amp;quot;Dutch&amp;quot;            &amp;quot;Estonian&amp;quot;        
## [16] &amp;quot;Finnish&amp;quot;          &amp;quot;French&amp;quot;           &amp;quot;Galician&amp;quot;        
## [19] &amp;quot;Georgian&amp;quot;         &amp;quot;German&amp;quot;           &amp;quot;Greek&amp;quot;           
## [22] &amp;quot;Gujarati&amp;quot;         &amp;quot;Hebrew&amp;quot;           &amp;quot;Hindi&amp;quot;           
## [25] &amp;quot;Hungarian&amp;quot;        &amp;quot;Icelandic&amp;quot;        &amp;quot;Indonesian&amp;quot;      
## [28] &amp;quot;Italian&amp;quot;          &amp;quot;Japanese&amp;quot;         &amp;quot;Kannada&amp;quot;         
## [31] &amp;quot;Kazakh&amp;quot;           &amp;quot;Korean&amp;quot;           &amp;quot;Latvian&amp;quot;         
## [34] &amp;quot;Lithuanian&amp;quot;       &amp;quot;Macedonian&amp;quot;       &amp;quot;Malay&amp;quot;           
## [37] &amp;quot;Malayalam&amp;quot;        &amp;quot;Marathi&amp;quot;          &amp;quot;Mongolian&amp;quot;       
## [40] &amp;quot;Nepali&amp;quot;           &amp;quot;Norwegian&amp;quot;        &amp;quot;NorwegianNynorsk&amp;quot;
## [43] &amp;quot;Persian&amp;quot;          &amp;quot;Polish&amp;quot;           &amp;quot;Portuguese&amp;quot;      
## [46] &amp;quot;Punjabi&amp;quot;          &amp;quot;Romanian&amp;quot;         &amp;quot;Russian&amp;quot;         
## [49] &amp;quot;Serbian&amp;quot;          &amp;quot;Sinhalese&amp;quot;        &amp;quot;Slovak&amp;quot;          
## [52] &amp;quot;Slovenian&amp;quot;        &amp;quot;Somali&amp;quot;           &amp;quot;Spanish&amp;quot;         
## [55] &amp;quot;Swahili&amp;quot;          &amp;quot;Swedish&amp;quot;          &amp;quot;Tamil&amp;quot;           
## [58] &amp;quot;Telugu&amp;quot;           &amp;quot;Thai&amp;quot;             &amp;quot;Tibetan&amp;quot;         
## [61] &amp;quot;Turkish&amp;quot;          &amp;quot;Ukrainian&amp;quot;        &amp;quot;Urdu&amp;quot;            
## [64] &amp;quot;Vietnamese&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;image-tags&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Image Tags&lt;/h2&gt;
&lt;p&gt;Since we’re looking specifically for imagery, we can query the relevant codebooks with &lt;code&gt;code_book = &amp;quot;imagetags&amp;quot;&lt;/code&gt; and &lt;code&gt;code_book = &amp;quot;imageweb&amp;quot;&lt;/code&gt; like so:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get_gdelt_codebook_ft_api(code_book = &amp;quot;imagetags&amp;quot;) %&amp;gt;%
  head() %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;nameCodebook&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;idImageTag&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;person&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;65791693&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;profession&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33553949&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;vehicle&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;25342998&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sports&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17180851&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;speech&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16976988&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;people&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13358317&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get_gdelt_codebook_ft_api(code_book = &amp;quot;imageweb&amp;quot;) %&amp;gt;%
  head() %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;nameCodebook&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;idImageWeb&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGEWEB&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Image&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2198300&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGEWEB&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;News&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2136894&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGEWEB&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Photograph&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1027341&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGEWEB&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;United States of America&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;659847&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGEWEB&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Speech&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;649292&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGEWEB&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Car&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;621304&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We’ll &lt;code&gt;filter()&lt;/code&gt; the tags to retain only those that explicitly reference “missile” with a regex.&lt;/p&gt;
&lt;p&gt;We also want to handle a bug in &lt;code&gt;gdeltr2&lt;/code&gt;’s query functions where sometimes a a large amount of incorrect information makes it into tag lists. Fortunately, we can omit that by excluding results containing blocks of multiple digits.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tag_regex &amp;lt;- &amp;quot;\\b[Mm]issile\\b&amp;quot;

bind_rows(
  get_gdelt_codebook_ft_api(code_book = &amp;quot;imagetags&amp;quot;) %&amp;gt;%
    filter(str_detect(idImageTag, tag_regex),
           !str_detect(idImageTag, &amp;quot;\\d{2,}&amp;quot;)),
  
  get_gdelt_codebook_ft_api(code_book = &amp;quot;imageweb&amp;quot;) %&amp;gt;%
    filter(str_detect(idImageWeb, tag_regex),
           !str_detect(idImageWeb, &amp;quot;\\d{2,}&amp;quot;))
  ) %&amp;gt;%
  head() %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;nameCodebook&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;idImageTag&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;value&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;idImageWeb&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;missile&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;247486&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;guided missile destroyer&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;194660&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;missile boat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;147549&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ballistic missile submarine&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;55996&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGETAGS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cruise missile submarine&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11508&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IMAGEWEB&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;77637&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Missile&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We’ll refine our results by excluding some of the tags that have a tendency to return less relevant images.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vehicle terms tend to emphasize the vehicle itself, rather than weapon systems
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;boat&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;submarine&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;tank&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;destroyer&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Missile &lt;code&gt;&amp;quot;defense&amp;quot;&lt;/code&gt;&lt;/em&gt; emphasizes politics over hardware&lt;/li&gt;
&lt;li&gt;specific &lt;code&gt;&amp;quot;system&amp;quot;&lt;/code&gt; tags are all in reference to surface-to-air platforms
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;S-300 missile system&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;S-400 missile system&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Buk missile system&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;generalized &lt;em&gt;Surface-to-&lt;code&gt;&amp;quot;air&amp;quot;&lt;/code&gt;&lt;/em&gt; doesn’t seem fuzzy enough to ever reference ballistic missiles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ll use another regex to omit those tags, including the multiple digit regex used to exclude the buggy data that may leak into our results.&lt;/p&gt;
&lt;div id=&#34;junk-tag-filtering&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Junk Tag Filtering&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;junk_tag_regex &amp;lt;- c(&amp;quot;boat&amp;quot;, &amp;quot;[Ss]ubmarine&amp;quot;, &amp;quot;tank&amp;quot;, &amp;quot;destroyer&amp;quot;,
                    &amp;quot;defense&amp;quot;,
                    &amp;quot;system&amp;quot;,
                    &amp;quot;air&amp;quot;) %&amp;gt;%
  paste0(&amp;quot;\\b&amp;quot;, ., &amp;quot;\\b&amp;quot;) %&amp;gt;%
  str_c(collapse = &amp;quot;|&amp;quot;) %&amp;gt;%
  paste0(&amp;quot;|\\d{2,}&amp;quot;)

junk_tag_regex&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;\\bboat\\b|\\b[Ss]ubmarine\\b|\\btank\\b|\\bdestroyer\\b|\\bdefense\\b|\\bsystem\\b|\\bair\\b|\\d{2,}&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With some parameters in mind and filtering variables assigned, let’s &lt;code&gt;pull()&lt;/code&gt; the desired tags from each codebook into a pair of variables which we will use to query GDELT’s API.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;image_tags &amp;lt;- get_gdelt_codebook_ft_api(code_book = &amp;quot;imagetags&amp;quot;) %&amp;gt;%
  filter(str_detect(idImageTag, tag_regex),
         !str_detect(idImageTag, junk_tag_regex)) %&amp;gt;%
  pull(idImageTag)

imageweb_tags &amp;lt;- get_gdelt_codebook_ft_api(code_book = &amp;quot;imageweb&amp;quot;) %&amp;gt;%
  filter(str_detect(idImageWeb, tag_regex),
         !str_detect(idImageWeb, junk_tag_regex)) %&amp;gt;%
  pull(idImageWeb)

combine(image_tags, imageweb_tags)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;missile&amp;quot;                           
##  [2] &amp;quot;Missile&amp;quot;                           
##  [3] &amp;quot;Ballistic missile&amp;quot;                 
##  [4] &amp;quot;Cruise missile&amp;quot;                    
##  [5] &amp;quot;Intercontinental ballistic missile&amp;quot;
##  [6] &amp;quot;Anti-ballistic missile&amp;quot;            
##  [7] &amp;quot;Missile launch facility&amp;quot;           
##  [8] &amp;quot;Medium-range ballistic missile&amp;quot;    
##  [9] &amp;quot;Land-attack missile&amp;quot;               
## [10] &amp;quot;Short-range ballistic missile&amp;quot;     
## [11] &amp;quot;Surface-to-surface missile&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;dates&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dates&lt;/h2&gt;
&lt;p&gt;We’ll specify a time period using &lt;code&gt;gdeltr2::generate_dates()&lt;/code&gt;. For this example, we’ll select September 22-23 of 2017 to see if we can capture coverage of an Iranian military parade.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;target_dates &amp;lt;- generate_dates(start_date = &amp;quot;2017-09-22&amp;quot;,
                               end_date = &amp;quot;2017-09-23&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;api-call&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;API Call&lt;/h1&gt;
&lt;p&gt;With all of our query variables prepared, we’ll call GDELT’s API using &lt;code&gt;get_data_ft_v2_api()&lt;/code&gt;. As duplicate articles are commonly published in many venues, we’ll omit results to only include &lt;code&gt;distinct()&lt;/code&gt; &lt;code&gt;titleArticle&lt;/code&gt;s.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;articles_df &amp;lt;- get_data_ft_v2_api(images_tag = image_tags,
                                  images_web_tag = imageweb_tags,
                                  search_language = langs,
                                  dates = target_dates, 
                                  visualize_results = FALSE) %&amp;gt;%
  distinct(titleArticle, .keep_all = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;query-results&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Query Results&lt;/h2&gt;
&lt;p&gt;Here’s a summary of what we get back.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;articles_df %&amp;gt;% 
  glimpse()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 393
## Variables: 16
## $ modeSearch          &amp;lt;chr&amp;gt; &amp;quot;ArtList&amp;quot;, &amp;quot;ArtList&amp;quot;, &amp;quot;ArtList&amp;quot;, &amp;quot;ArtList&amp;quot;...
## $ imagewebtagSearch   &amp;lt;chr&amp;gt; &amp;quot;Missile&amp;quot;, &amp;quot;Missile&amp;quot;, &amp;quot;Missile&amp;quot;, &amp;quot;Missile&amp;quot;...
## $ datetimeStartSearch &amp;lt;chr&amp;gt; &amp;quot;2017-09-22 12:00:00&amp;quot;, &amp;quot;2017-09-22 12:00:0...
## $ datetimeEndSearch   &amp;lt;chr&amp;gt; &amp;quot;2017-09-23 11:59:59&amp;quot;, &amp;quot;2017-09-23 11:59:5...
## $ imagetagSearch      &amp;lt;chr&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA...
## $ isOR                &amp;lt;lgl&amp;gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, ...
## $ countMaximumRecords &amp;lt;dbl&amp;gt; 250, 250, 250, 250, 250, 250, 250, 250, 25...
## $ urlGDELTV2FTAPI     &amp;lt;chr&amp;gt; &amp;quot;https://api.gdeltproject.org/api/v2/doc/d...
## $ urlArticle          &amp;lt;chr&amp;gt; &amp;quot;http://www.iranherald.com/news/254804227/...
## $ urlArticleMobile    &amp;lt;chr&amp;gt; NA, &amp;quot;http://m.alarab.com/Article/825920&amp;quot;, ...
## $ titleArticle        &amp;lt;chr&amp;gt; &amp;quot;Iran Herald&amp;quot;, &amp;quot;&amp;lt;U+0647&amp;gt;&amp;lt;U+0632&amp;gt;&amp;lt;U+0629&amp;gt; &amp;lt;U+0623&amp;gt;&amp;lt;U+0631&amp;gt;&amp;lt;U+0636&amp;gt;&amp;lt;U+064A&amp;gt;&amp;lt;U+0629&amp;gt; &amp;lt;U+062B&amp;gt;&amp;lt;U+0627&amp;gt;&amp;lt;U+0646&amp;gt;&amp;lt;U+064A&amp;gt;&amp;lt;U+0629&amp;gt; &amp;lt;U+0641&amp;gt;&amp;lt;U+064A&amp;gt; &amp;lt;U+0643&amp;gt;&amp;lt;U+0648&amp;gt;&amp;lt;U+064A&amp;gt;&amp;lt;U+0627&amp;gt; &amp;lt;U+0627&amp;gt;&amp;lt;U+0644&amp;gt;...
## $ datetimeArticle     &amp;lt;dttm&amp;gt; 2017-09-23 05:00:00, 2017-09-23 05:00:00,...
## $ urlImage            &amp;lt;chr&amp;gt; &amp;quot;http://cdn.bignewsnetwork.com/voa15061647...
## $ domainArticle       &amp;lt;chr&amp;gt; &amp;quot;iranherald.com&amp;quot;, &amp;quot;alarab.com&amp;quot;, &amp;quot;baomoi.co...
## $ languageArticle     &amp;lt;chr&amp;gt; &amp;quot;English&amp;quot;, &amp;quot;Arabic&amp;quot;, &amp;quot;Vietnamese&amp;quot;, &amp;quot;Nepali...
## $ countryArticle      &amp;lt;chr&amp;gt; &amp;quot;Iran&amp;quot;, &amp;quot;Israel&amp;quot;, &amp;quot;Vietnam&amp;quot;, &amp;quot;Tuvalu&amp;quot;, &amp;quot;Un...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;extracting-images&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Extracting Images&lt;/h1&gt;
&lt;p&gt;Now that we have a data frame of articles that includes a column of image URLs, we can download the data.&lt;/p&gt;
&lt;div id=&#34;directory&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Directory&lt;/h2&gt;
&lt;p&gt;Let’s assign a variable for our &lt;code&gt;dir&lt;/code&gt;ectory.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dir &amp;lt;- &amp;quot;data/missile_images/&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we’ll actually create the &lt;code&gt;dir&lt;/code&gt;ectory.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dir.create(dir)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;workflow&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;We’re going to take advantage of the magic of the &lt;code&gt;purrr&lt;/code&gt; package in several ways to stabilize our workflow.&lt;/p&gt;
&lt;div id=&#34;error-handling&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Error Handling&lt;/h3&gt;
&lt;p&gt;The Internet is littered with broken links and webpages, which becomes more likely the further back in time we go. We’ll use one of &lt;code&gt;purrr&lt;/code&gt;’s adverbs, &lt;code&gt;safely()&lt;/code&gt;, to handle the inevitable download errors that will occur by creating a new function called &lt;code&gt;safe_download()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;safe_download &amp;lt;- safely(download.file)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’re also going to create safe versions of functions we’ll use for loading and plotting images. Although most of the valid URLs will link to clean images, it’s not uncommon for otherwise successful downloads to actually come from already corrupted sources.&lt;/p&gt;
&lt;p&gt;To handle this, we’ll create &lt;code&gt;safe_image()&lt;/code&gt; and &lt;code&gt;safe_plot()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;safe_image &amp;lt;- safely(load.image)
safe_plot &amp;lt;- safely(plot)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;download-images&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Download Images&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt; images using a regex that confirms either a .jpg or .png extension and simultaneously validates a URL sequence that we can use for each image’s eventual file path.&lt;/li&gt;
&lt;li&gt;select a sample of 100 random rows &lt;code&gt;sample_n(100)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pull()&lt;/code&gt; the &lt;code&gt;urlImage&lt;/code&gt; column into a vector&lt;/li&gt;
&lt;li&gt;iterate through each item of the vector with &lt;code&gt;walk()&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;safe_download()&lt;/code&gt; each image’s binary format (&lt;code&gt;mode = &amp;quot;wb&amp;quot;&lt;/code&gt;)
&lt;ul&gt;
&lt;li&gt;and write it to &lt;code&gt;dir&lt;/code&gt; using its match to &lt;code&gt;valid_path_regex&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;valid_path_regex &amp;lt;- &amp;quot;/[A-z0-9-_]+\\.(jpg|png)$&amp;quot;

articles_df %&amp;gt;%
  filter(str_detect(urlImage, valid_path_regex)) %&amp;gt;%
  sample_n(100) %&amp;gt;%
  pull(urlImage) %&amp;gt;%
  walk(~
         safe_download(.x,
                       paste0(dir, 
                              str_extract(.x, valid_path_regex)),
                       mode = &amp;quot;wb&amp;quot;)
         )&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;inspect-images&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Inspect Images&lt;/h2&gt;
&lt;p&gt;Let’s insepct a sample of the downloaded images.&lt;/p&gt;
&lt;p&gt;Clearly the results are not perfect. There are images without anything resembling a missile as well as several duplicate or near-duplicate images. That said, manual renaming of files will allow filtering of useless images.&lt;/p&gt;
&lt;p&gt;This is a quick proof of concept that sets us up well for enhancing data sets established through other methods.&lt;/p&gt;
&lt;p&gt;More importantly,it demonstrates a basic workflow for bulk image processing that can be easily expanded to iteratively prepare a large dataset for many kinds of analyis.&lt;/p&gt;
&lt;p&gt;We can take a look at our results with the following:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;list.files()&lt;/code&gt; the full paths of all the files in &lt;code&gt;dir&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;iterate through the resulting &lt;code&gt;vector&lt;/code&gt;, reading each file with &lt;code&gt;safe_image()&lt;/code&gt; and &lt;code&gt;map()&lt;/code&gt;ping the results to a &lt;code&gt;list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;remove a layer of the &lt;code&gt;list&lt;/code&gt; hierarchy by &lt;code&gt;flatten()&lt;/code&gt;ing it&lt;/li&gt;
&lt;li&gt;omit any resulting &lt;code&gt;NULL&lt;/code&gt; values by &lt;code&gt;compact()&lt;/code&gt;ing the list&lt;/li&gt;
&lt;li&gt;subset a &lt;code&gt;sample()&lt;/code&gt; of half the images, just for demonstration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;walk()&lt;/code&gt; through the list, plotting each image&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mfrow = c(5, 2))

list.files(dir, full.names = TRUE) %&amp;gt;%
  map(safe_image) %&amp;gt;%
  flatten() %&amp;gt;%
  compact() %&amp;gt;%
  sample(50) %&amp;gt;%
  walk(~ 
         safe_plot(.x, 
                   axes = FALSE, ann = FALSE)
       )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-23-collecting-a-data-set-of-missile-images-with-gdelt_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;1152&#34; /&gt;&lt;img src=&#34;/post/2018-01-23-collecting-a-data-set-of-missile-images-with-gdelt_files/figure-html/unnamed-chunk-16-2.png&#34; width=&#34;1152&#34; /&gt;&lt;img src=&#34;/post/2018-01-23-collecting-a-data-set-of-missile-images-with-gdelt_files/figure-html/unnamed-chunk-16-3.png&#34; width=&#34;1152&#34; /&gt;&lt;img src=&#34;/post/2018-01-23-collecting-a-data-set-of-missile-images-with-gdelt_files/figure-html/unnamed-chunk-16-4.png&#34; width=&#34;1152&#34; /&gt;&lt;img src=&#34;/post/2018-01-23-collecting-a-data-set-of-missile-images-with-gdelt_files/figure-html/unnamed-chunk-16-5.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.5.1 (2018-07-02)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 17134)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] bindrcpp_0.2.2       imager_0.41.1        magrittr_1.5        
##  [4] knitr_1.20.8         forcats_0.3.0        stringr_1.3.1       
##  [7] dplyr_0.7.6          purrr_0.2.5          readr_1.1.1         
## [10] tidyr_0.8.1          tibble_1.4.2.9004    ggplot2_3.0.0.9000  
## [13] tidyverse_1.2.1.9000 gdeltr2_0.3.11702   
## 
## loaded via a namespace (and not attached):
##  [1] nlme_3.1-137            xts_0.10-2             
##  [3] lubridate_1.7.4         webshot_0.5.0          
##  [5] progress_1.2.0          httr_1.3.1             
##  [7] tools_3.5.1             backports_1.1.2        
##  [9] utf8_1.1.4              R6_2.2.2               
## [11] lazyeval_0.2.1          colorspace_1.3-2       
## [13] withr_2.1.2             readbitmap_0.1.5       
## [15] tidyselect_0.2.4        prettyunits_1.0.2      
## [17] mnormt_1.5-5            curl_3.2               
## [19] compiler_3.5.1          cli_1.0.0              
## [21] rvest_0.3.2             xml2_1.2.0             
## [23] bookdown_0.7            triebeard_0.3.0        
## [25] scales_0.5.0.9000       checkmate_1.8.5        
## [27] psych_1.8.4             RApiDatetime_0.0.3     
## [29] trelliscopejs_0.1.13    digest_0.6.15          
## [31] tiff_0.1-5              foreign_0.8-70         
## [33] rmarkdown_1.10.7        base64enc_0.1-3        
## [35] jpeg_0.1-8              pkgconfig_2.0.1        
## [37] htmltools_0.3.6         highcharter_0.5.0      
## [39] highr_0.7               htmlwidgets_1.2        
## [41] rlang_0.2.1             ggthemes_3.5.0         
## [43] readxl_1.1.0            TTR_0.23-3             
## [45] htmldeps_0.1.0          rstudioapi_0.7         
## [47] quantmod_0.4-13         bindr_0.1.1            
## [49] zoo_1.8-2               jsonlite_1.5           
## [51] mclust_5.4.1            rlist_0.4.6.1          
## [53] fansi_0.2.3             Rcpp_0.12.17           
## [55] munsell_0.5.0           purrrlyr_0.0.3         
## [57] stringi_1.2.3           yaml_2.1.19            
## [59] plyr_1.8.4              grid_3.5.1             
## [61] parallel_3.5.1          crayon_1.3.4           
## [63] lattice_0.20-35         haven_1.1.2            
## [65] hms_0.4.2               anytime_0.3.1          
## [67] pillar_1.3.0.9000       igraph_1.2.1           
## [69] reshape2_1.4.3          codetools_0.2-15       
## [71] glue_1.2.0              evaluate_0.10.1        
## [73] blogdown_0.7.1          DistributionUtils_0.5-1
## [75] bmp_0.3                 data.table_1.11.5      
## [77] modelr_0.1.2            png_0.1-7              
## [79] urltools_1.7.0          cellranger_1.1.0       
## [81] gtable_0.2.0            assertthat_0.2.0       
## [83] xfun_0.3                broom_0.4.5            
## [85] autocogs_0.0.1          wordcloud2_0.2.1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>/page/about/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/page/about/</guid>
      <description>

&lt;style&gt;
    body .main-container {
        max-width: 700px;
    }
&lt;/style&gt;

&lt;p&gt;Hi, I&amp;rsquo;m Brendan. I&amp;rsquo;m interested in using data to develop evidence-based insights.&lt;/p&gt;

&lt;p&gt;I primarily focus on conflict and security issues, which is work that I characterize as being wildly interdisciplinary. The result is that I&amp;rsquo;m constantly exploring theories and methods that developed in other fields.&lt;/p&gt;

&lt;p&gt;In the past, I worked as a security manager, combat medic, noncommissioned officer, linguist, and herder of cats.&lt;/p&gt;

&lt;p&gt;When I finally had a chance to return to academia, I developed a love for data analysis and programming. This was primarily fueled by a fascination with network analysis.&lt;/p&gt;

&lt;p&gt;Since then, I have focused on the fusion of computational methods with domain expertise in topics spanning hybrid conflict, insurgency, WMD, and threat finance.&lt;/p&gt;

&lt;p&gt;Disciplines that I&amp;rsquo;ve used in my work include network analysis, spatial statistics, remote sensing, natural language processing, and machine learning.&lt;/p&gt;

&lt;h1 id=&#34;about-this-blog&#34;&gt;About this Blog&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://res.cloudinary.com/syknapptic/image/upload/v1516468904/logo_rd5ifq.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;My goal is to address the interests of two audiences that are oftentimes more distinct than I&amp;rsquo;d like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;those with an interest in modern data analysis (R enthusiasts in particular)&lt;/li&gt;
&lt;li&gt;those interested in open-source intelligence.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;After being asked if I had a blog with expanded explanations of projects I have discussed, I decided it was time to bite the bullet and start sharing.&lt;/p&gt;

&lt;p&gt;I can&amp;rsquo;t overstate how beneficial data science blogs, public code repositories, and #Rstats community members have been for my own growth. With that in mind, I hope to provide a similar resource for anyone who might be struggling. Hopefully, I can offer a bit of the same inspiration I felt when I first started exploring the work of others.&lt;/p&gt;

&lt;h1 id=&#34;syknapptic&#34;&gt;syknapptic?&lt;/h1&gt;

&lt;p&gt;If you haven&amp;rsquo;t guessed, &lt;em&gt;syknapptic&lt;/em&gt; is derived from &lt;em&gt;synaptic&lt;/em&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;contact-me&#34;&gt;Contact me:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;mailto:syknapptic@gmail.com&#34;&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/knappbrendan/&#34;&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://twitter.com/syknapptic&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/syknapptic&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>Data Science from Scratch</title>
      <link>/page/data-science-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/page/data-science-from-scratch/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#programming-and-computer-science&#34;&gt;Programming and Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#statistics&#34;&gt;Statistics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;programming-and-computer-science&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Programming and Computer Science&lt;/h1&gt;
&lt;table class=&#34;table table-hover table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Topic
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
R
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Python
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;font-weight: bold;vertical-align: top !important;&#34; rowspan=&#34;5&#34;&gt;
First Steps
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/variable-assignment/&#34;&gt;Variable Assignment&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Data Types
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Logic
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Collections
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Loops
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;font-weight: bold;&#34;&gt;
Algorithms
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/bubble-sort/&#34;&gt;Bubble Sort&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;font-weight: bold;vertical-align: top !important;&#34; rowspan=&#34;5&#34;&gt;
Essential Tasks
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/central-tendency/#length&#34;&gt;Length of Values&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/central-tendency/#unique-values&#34;&gt;Unique Values&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/central-tendency/#max&#34;&gt;Maximum&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/central-tendency/#min&#34;&gt;Minimum&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/central-tendency/#sum&#34;&gt;Sum&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;statistics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Statistics&lt;/h1&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Topic
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
R
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Python
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;font-weight: bold;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
Central Tendency
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/central-tendency/#mean&#34;&gt;Mean&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/central-tendency/#median&#34;&gt;Median&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;a href=&#34;/2018/07/central-tendency/#mode&#34;&gt;Mode&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; checked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;font-weight: bold;vertical-align: top !important;&#34; rowspan=&#34;2&#34;&gt;
Dispersion
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Standard Deviation
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Variance
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;font-weight: bold;vertical-align: top !important;&#34; rowspan=&#34;2&#34;&gt;
Correlation
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Pearson’s
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Spearman’s
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;font-weight: bold;vertical-align: top !important;&#34; rowspan=&#34;2&#34;&gt;
Linear Models
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Simple Linear Regression
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Linear Regression
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;font-weight: bold;vertical-align: top !important;&#34; rowspan=&#34;3&#34;&gt;
Generalized Linear Models
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Binomial
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Gaussian
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Poisson
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&lt;input type=&#34;checkbox&#34; unchecked onclick=&#34;return false;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;!-- # Graphs --&gt;
&lt;!-- ```{r} --&gt;
&lt;!-- graph_groups &lt;- c(rep(&#34;Representations&#34;, 4), --&gt;
&lt;!--                   rep(&#34;Higher Dimensions&#34;, 2), --&gt;
&lt;!--                   &#34;Algorithms&#34;) --&gt;
&lt;!-- graph_topics &lt;- c(&#34;Adjacency Matrix&#34;, --&gt;
&lt;!--                   &#34;Adjacency List&#34;, --&gt;
&lt;!--                   &#34;Edge List&#34;, --&gt;
&lt;!--                   &#34;Incidence Matrix&#34;, --&gt;
&lt;!--                   &#34;Multipartite Graphs&#34;, --&gt;
&lt;!--                   &#34;Multiplex Graphs&#34;, --&gt;
&lt;!--                   &#34;Shortest Path&#34;) --&gt;
&lt;!-- tibble(` ` = graph_groups, Topic = graph_topics) %&gt;%  --&gt;
&lt;!--   mutate(R = uncheck_box) %&gt;%  --&gt;
&lt;!--   mutate(Python = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(`C++` = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(Rcpp = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(Details = stat_details) %&gt;%  --&gt;
&lt;!--   kable(escape = FALSE, align = &#34;c&#34;) %&gt;% --&gt;
&lt;!--   kable_styling() %&gt;%  --&gt;
&lt;!--   column_spec(1, bold = TRUE) %&gt;%  --&gt;
&lt;!--   collapse_rows(columns = 1, valign = &#34;top&#34;) --&gt;
&lt;!-- ``` --&gt;
&lt;!-- # Unsupervised Learning --&gt;
&lt;!-- ```{r} --&gt;
&lt;!-- unsup_groups &lt;- c(rep(&#34;Clustering&#34;, 2), --&gt;
&lt;!--                   &#34;Dimensionality Reduction&#34;) --&gt;
&lt;!-- unsup_topics &lt;- c(&#34;k-means&#34;,  --&gt;
&lt;!--                   &#34;Principal Component Analysis&#34;,  --&gt;
&lt;!--                   &#34;Factor Analysis&#34;) --&gt;
&lt;!-- tibble(` ` = unsup_groups, Topic = unsup_topics) %&gt;%  --&gt;
&lt;!--   mutate(R = uncheck_box) %&gt;%  --&gt;
&lt;!--   mutate(Python = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(`C++` = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(Rcpp = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(Details = stat_details) %&gt;%  --&gt;
&lt;!--   kable(escape = FALSE, align = &#34;c&#34;) %&gt;% --&gt;
&lt;!--   kable_styling() %&gt;%  --&gt;
&lt;!--   column_spec(1, bold = TRUE) %&gt;%  --&gt;
&lt;!--   collapse_rows(columns = 1, valign = &#34;top&#34;) --&gt;
&lt;!-- ``` --&gt;
&lt;!-- # Supervised Learning --&gt;
&lt;!-- ```{r} --&gt;
&lt;!-- sup_groups &lt;- c(rep(&#34;Classification&#34;, 4), --&gt;
&lt;!--                 rep(&#34;Regression&#34;, 2)) --&gt;
&lt;!-- sup_topics &lt;- c(&#34;Naive Bayes&#34;,  --&gt;
&lt;!--                 &#34;k-Nearest Neighbors&#34;,  --&gt;
&lt;!--                 &#34;Support Vector Machine&#34;, --&gt;
&lt;!--                 &#34;Random Forests&#34;, --&gt;
&lt;!--                 &#34;Support Vector Machine&#34;, --&gt;
&lt;!--                 &#34;Random Forests&#34;) --&gt;
&lt;!-- tibble(` ` = sup_groups, Topic = sup_topics) %&gt;%  --&gt;
&lt;!--   mutate(R = uncheck_box) %&gt;%  --&gt;
&lt;!--   mutate(Python = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(`C++` = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(Rcpp = uncheck_box) %&gt;%  --&gt;
&lt;!--   # mutate(Details = stat_details) %&gt;%  --&gt;
&lt;!--   kable(escape = FALSE, align = &#34;c&#34;) %&gt;% --&gt;
&lt;!--   kable_styling() %&gt;%  --&gt;
&lt;!--   column_spec(1, bold = TRUE) %&gt;%  --&gt;
&lt;!--   collapse_rows(columns = 1, valign = &#34;top&#34;) --&gt;
&lt;!-- ``` --&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/page/bknapp-resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/page/bknapp-resume/</guid>
      <description>&lt;div id=&#34;experience-and-technical-skills&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Experience and Technical Skills&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Statistics&lt;/th&gt;
&lt;th&gt;Data Science&lt;/th&gt;
&lt;th&gt;Analytical Domains&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Parametric Models&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;Structure and Unstructured&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Linear Models&lt;/td&gt;
&lt;td&gt;SQL&lt;/td&gt;
&lt;td&gt;Networks/Graphs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Generalized Linear Models&lt;/td&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;Text Mining and NLP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Factor Analysis&lt;/td&gt;
&lt;td&gt;Git&lt;/td&gt;
&lt;td&gt;Vector and Raster Spatial Analysis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Time Series Analysis&lt;/td&gt;
&lt;td&gt;Package Development&lt;/td&gt;
&lt;td&gt;Remote Sensing&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;education&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;EDUCATION&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Middlebury Institute of International Studies&lt;/em&gt;, M.A. Nonproliferation and Terrorism Studies May 2018&lt;br /&gt;
&lt;em&gt;Middlebury Institute of International Studies&lt;/em&gt;, B.A. International Studies December 2017&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;employment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;EMPLOYMENT&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Mixed-Methods Evaluation, Training and Analysis (META) Lab, Middlebury Institute:&lt;/strong&gt; &lt;em&gt;Monterey, CA&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead Analytic Coordinator&lt;/em&gt; January 2018–May 2018&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Graduate Research Analyst&lt;/em&gt; February 2017–December 2017&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Network Analysis Teaching Assistant&lt;/em&gt; September 2017–December 2017&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;James Martin Center for Nonproliferation Studies, Middlebury Institute:&lt;/strong&gt; &lt;em&gt;Monterey, CA&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Graduate Research Assistant&lt;/em&gt; May 2017–May 2018&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;U.S. Army, HHC 369th Sustainment BDE:&lt;/strong&gt; &lt;em&gt;Camp Smith, NY&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Intelligence Staff Section Manager&lt;/em&gt; (S2 NCOIC) May 2015–December 2015&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;U.S. Army, C Co. 229th Military Intelligence BN:&lt;/strong&gt; &lt;em&gt;Monterey, CA&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Military Skills Trainer and Class Leader&lt;/em&gt; April 2013–March 2015&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;U.S. Army, C Co. (MED) 427th BSB:&lt;/strong&gt; &lt;em&gt;Buffalo, NY; Camp Shelby, MS; Kandahar and Bagram, Afghanistan&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Emergency Medical Sergeant&lt;/em&gt; January 2012–September 2012&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;presentations-and-workshops&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;PRESENTATIONS AND WORKSHOPS&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Presenter: “Data in the Wild, Text Mining, and Illuminating North Korean Threat Networks”&lt;/em&gt; April 2018&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lead Instructor, “R for Data Carpentry and Analysis”&lt;/em&gt; March 2018&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lead Instructor, “Programming with R and RStudio”&lt;/em&gt; September 2017&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Presenter, “Evaluating Institutional Coalescence with the Use of Exponential Random Graph Models”&lt;/em&gt; June 2017&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lead Instructor, “Introduction to Python”&lt;/em&gt; March 2017&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lead Instructor, “Understanding Hypovolemic Hypoperfusion”&lt;/em&gt; March 2012&lt;/p&gt;

&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>