<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Science From Scratch on syknapptic</title>
    <link>/categories/data-science-from-scratch/</link>
    <description>Recent content in Data Science From Scratch on syknapptic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/data-science-from-scratch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Measures of Central Tendency</title>
      <link>/2018/07/central-tendency/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/central-tendency/</guid>
      <description>Toy ValuesPython listR vectorLengthPython’s len()R’s length()Unique ValuesPython’s set()R’s unique()MaxPython’s max()R’s max()MinPython’s min()R’s min()SumPython’s sum()R’s sum()MeanPython’s statistics.mean()R’s mean()ModePython’s statistics.mode()R’s modeMedianPythonREnvironmentRather than letting R and Python do all the work for us (i.</description>
    </item>
    
    <item>
      <title>Bubble Sort</title>
      <link>/2018/07/bubble-sort/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/bubble-sort/</guid>
      <description>PythonUnsorted listBubble Sort FunctionResultRUnsorted vectorBubble Sort FunctionResultEnvironmentPythonUnsorted listunsorted = [9, 2, 8, 3, 7, 4, 6, 5, 1]Bubble Sort Functiondef bubble_sort(unsorted_sequence):sorted_sequence = unsorted_sequencefor iteration, _ in enumerate(sorted_sequence):for i, _ in enumerate(sorted_sequence):if i + 1 &amp;lt;= len(sorted_sequence) - 1:current_value = sorted_sequence[i]next_value = sorted_sequence[i + 1]if current_value &amp;gt; next_value:sorted_sequence[i] = next_valuesorted_sequence[i + 1] = current_valueprint(f&amp;#39;Iteration #{iteration + 1}: {&amp;quot;, &amp;quot;.</description>
    </item>
    
    <item>
      <title>A Field Guide to R-Python Translations</title>
      <link>/2018/07/reticulated-python/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/reticulated-python/</guid>
      <description>TypesCollections: Vectors, Lists, and DictionariesCommon TasksIterationPythonRSequencesComparisonsArithmeticDates and TimesURLsStrings and Regular ExpressionsFile I/OWrite LinesPythonRRead LinesPythonRTypesPython TypePython ExampleR TypeR Exampleint1integer1Lfloat3.</description>
    </item>
    
    <item>
      <title>Variable Assignment</title>
      <link>/2018/07/variable-assignment/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/variable-assignment/</guid>
      <description>RPythonC++RcppRvar_R &amp;lt;- 1var_R## [1] 1Pythonvar_PY = 1print(var_PY)## 1C++#include &amp;lt;iostream&amp;gt;int main() {int var_CPP = 1;std::cout &amp;lt;&amp;lt; var_CPP;return 0;}## 1Rcpp#include &amp;lt;Rcpp.h&amp;gt; // R to/from C++ interface// [[Rcpp::export]]int RCPP_function() {int var_RCPP = 1;return var_RCPP;}RCPP_function() # access the C++ function from R like any other function## [1] 1</description>
    </item>
    
    <item>
      <title>Essential Math</title>
      <link>/2018/07/math/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/math/</guid>
      <description>Our Test ValuesRPythonC++SumRPythonLengthRPythonMeanRPythonOur Test ValuesRHere’s a numeric vector for our R code.
x_R &amp;lt;- c(1.5, 2, 3.25, 4.9, 5, 6.1, 7.39, 8, 9.9)x_R## [1] 1.50 2.00 3.25 4.90 5.00 6.10 7.39 8.00 9.90PythonHere’s a list of floats for our Python code.
x_PY = [1.</description>
    </item>
    
  </channel>
</rss>